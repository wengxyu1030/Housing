--------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\Housing
> _git\nss\Survey_NSS\residual_income\03_2_NSS70_Residual_Income_Owner.log
  log type:  text
 opened on:  18 Mar 2021, 11:36:11

. set linesize 255

. 
. ***************************************************************
. *Step 3: Budget Standard for Owners **************************
. ***************************************************************
. 
. ***Data preparation***
. 
. *Household type
. use"${r_output}\NSS70_All.dta",clear  

. keep if urban == 1
(62,135 observations deleted)

. 
. egen hh_cut_manual = cut(hhsize), at(0,3,4,5,6,100)

. table hh_cut_manual, c(min hhsize max hhsize)

------------------------------------
hh_cut_ma |
nual      | min(hhsize)  max(hhsize)
----------+-------------------------
        0 |           1            2
        3 |           3            3
        4 |           4            4
        5 |           5            5
        6 |           6           32
------------------------------------

. tab hh_cut_manual [aw=hhwgt]

hh_cut_manu |
         al |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 | 11,660.456       23.96       23.96
          3 | 8,139.1935       16.72       40.69
          4 | 11,571.913       23.78       64.46
          5 | 7,810.1336       16.05       80.51
          6 | 9,483.3039       19.49      100.00
------------+-----------------------------------
      Total |     48,665      100.00

. 
. gen hh_type = ""
(48,665 missing values generated)

. replace hh_type = "1-2" if hh_cut_manual == 0
variable hh_type was str1 now str3
(7,368 real changes made)

. replace hh_type = "3" if hh_cut_manual == 3
(7,867 real changes made)

. replace hh_type = "4" if hh_cut_manual == 4
(12,307 real changes made)

. replace hh_type = "5" if hh_cut_manual == 5
(8,940 real changes made)

. replace hh_type = ">=6" if hh_cut_manual == 6
(12,183 real changes made)

. tab hh_type [aw=hhwgt]

    hh_type |      Freq.     Percent        Cum.
------------+-----------------------------------
        1-2 | 11,660.456       23.96       23.96
          3 | 8,139.1935       16.72       40.69
          4 | 11,571.913       23.78       64.46
          5 | 7,810.1336       16.05       80.51
        >=6 | 9,483.3039       19.49      100.00
------------+-----------------------------------
      Total |     48,665      100.00

. 
. rename hh_cut_manual hh_type_grp

. 
. keep HHID hh_type hh_type_grp

. save "${r_output}\nss70_ria_hh_type.dta",replace 
file C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files\nss70_ria_hh_type.dta saved

. 
. ***********Combine wealth to income, non-housing poverty line**********
. use "${r_output_68}\nss68_ria_master.dta",clear 

. bysort state: keep if _n == 1
(41,932 observations deleted)

. keep state pline_nhs_* pline

. 
. gen state_temp = state

. tostring state_temp, format(%02.0f) replace
state_temp was float now str2

. 
. rename state state_txt

. rename state_temp state

. 
. merge 1:m state using "${r_output}\NSS70_All.dta"

    Result                           # of obs.
    -----------------------------------------
    not matched                         2,654
        from master                         0  (_merge==1)
        from using                      2,654  (_merge==2)

    matched                           108,146  (_merge==3)
    -----------------------------------------

. tab state if _merge == 2 //TELENGANA founded in 2014, after nss68(2012)

      state |      Freq.     Percent        Cum.
------------+-----------------------------------
         36 |      2,654      100.00      100.00
------------+-----------------------------------
      Total |      2,654      100.00

. keep if _merge == 3
(2,654 observations deleted)

. drop _merge

. 
. keep if urban == 1 //only focusing on urban 
(60,791 observations deleted)

. 
. drop if wealth < 0 //exclude negative wealth data. 
(1,642 observations deleted)

. 
. xtile wealth_100 = wealth [aw = hhwgt],nq(100)

. tab wealth_100 [aw = hhwgt]

        100 |
  quantiles |
 of wealth  |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 | 1,821.8277        3.99        3.99
          4 | 7.43994258        0.02        4.00
          5 | 515.052725        1.13        5.13
          6 |  450.75383        0.99        6.11
          7 | 424.468765        0.93        7.04
          8 | 440.804907        0.96        8.01
          9 |  517.14719        1.13        9.14
         10 | 404.001857        0.88       10.02
         11 | 471.962898        1.03       11.05
         12 |  432.39513        0.95       12.00
         13 | 524.119217        1.15       13.15
         14 |398.8979212        0.87       14.02
         15 | 540.141043        1.18       15.20
         16 | 379.467822        0.83       16.03
         17 | 443.066831        0.97       17.00
         18 |  514.44331        1.13       18.13
         19 | 400.549525        0.88       19.00
         20 | 459.245929        1.00       20.01
         21 | 454.265419        0.99       21.00
         22 | 461.753608        1.01       22.01
         23 | 453.043872        0.99       23.00
         24 | 457.009044        1.00       24.00
         25 | 460.084526        1.01       25.01
         26 | 453.517904        0.99       26.00
         27 | 459.529723        1.01       27.01
         28 | 456.524044        1.00       28.00
         29 | 456.107701        1.00       29.00
         30 | 456.807717        1.00       30.00
         31 | 457.043198        1.00       31.00
         32 | 459.186256        1.00       32.01
         33 | 455.804448        1.00       33.00
         34 | 458.078345        1.00       34.00
         35 | 456.855198        1.00       35.00
         36 |460.8929919        1.01       36.01
         37 | 451.592253        0.99       37.00
         38 | 457.794199        1.00       38.00
         39 |  457.86911        1.00       39.00
         40 | 456.358129        1.00       40.00
         41 | 458.054385        1.00       41.00
         42 | 455.916974        1.00       42.00
         43 | 456.797356        1.00       43.00
         44 | 468.941345        1.03       44.03
         45 | 448.261558        0.98       45.01
         46 | 456.870825        1.00       46.01
         47 | 455.368513        1.00       47.00
         48 | 456.435608        1.00       48.00
         49 | 465.311008        1.02       49.02
         50 | 449.447154        0.98       50.00
         51 |457.5968518        1.00       51.00
         52 | 456.286537        1.00       52.00
         53 | 456.954391        1.00       53.00
         54 | 459.727923        1.01       54.01
         55 |  455.69964        1.00       55.00
         56 |456.9534494        1.00       56.00
         57 | 457.694313        1.00       57.00
         58 | 455.538502        1.00       58.00
         59 | 457.031164        1.00       59.00
         60 | 457.138315        1.00       60.00
         61 | 488.594195        1.07       61.07
         62 | 429.234647        0.94       62.01
         63 | 464.568336        1.02       63.02
         64 |454.3846914        0.99       64.02
         65 | 451.181695        0.99       65.01
         66 | 455.152665        1.00       66.00
         67 | 457.018559        1.00       67.00
         68 | 456.880072        1.00       68.00
         69 | 457.299784        1.00       69.00
         70 | 457.136329        1.00       70.00
         71 | 458.058594        1.00       71.00
         72 | 459.204307        1.00       72.01
         73 | 454.191753        0.99       73.00
         74 | 456.794426        1.00       74.00
         75 | 457.652843        1.00       75.00
         76 | 456.730148        1.00       76.00
         77 | 457.334841        1.00       77.00
         78 | 457.761839        1.00       78.00
         79 | 456.411921        1.00       79.00
         80 | 457.039437        1.00       80.00
         81 | 457.441549        1.00       81.00
         82 | 459.472771        1.01       82.01
         83 |458.2772342        1.00       83.01
         84 | 456.848317        1.00       84.01
         85 | 458.099005        1.00       85.01
         86 |  452.60517        0.99       86.00
         87 | 471.758177        1.03       87.03
         88 |443.0946751        0.97       88.00
         89 |457.5359264        1.00       89.00
         90 |   458.9006        1.00       90.01
         91 | 454.782427        0.99       91.00
         92 | 459.160267        1.00       92.01
         93 | 454.654183        0.99       93.00
         94 |  457.52563        1.00       94.00
         95 | 457.486881        1.00       95.00
         96 | 457.109002        1.00       96.00
         97 | 457.459441        1.00       97.00
         98 | 456.226604        1.00       98.00
         99 |457.3628222        1.00       99.00
        100 | 456.638156        1.00      100.00
------------+-----------------------------------
      Total |     45,713      100.00

. 
. /*
> //not taking log can not get the result? negative value?
> xtile wealth_100 = wealth [aw = hhwgt],nq(100) //household weight, wealth is measured at household level. [aw = hhwgt]
> tab wealth_100 [aw = hhwgt]
> */
. 
. merge m:1 wealth_100 using "${r_input}\NSS70_IHDS_Wealth_to_Inc.dta",nogen

    Result                           # of obs.
    -----------------------------------------
    not matched                             2
        from master                         0  
        from using                          2  

    matched                            45,713  
    -----------------------------------------

. drop if HHID == "" 
(2 observations deleted)

. 
. merge 1:1 HHID using "${r_output}\nss70_ria_hh_type.dta"

    Result                           # of obs.
    -----------------------------------------
    not matched                         2,952
        from master                         0  (_merge==1)
        from using                      2,952  (_merge==2)

    matched                            45,713  (_merge==3)
    -----------------------------------------

. keep if _merge == 3 //negative wealth households not merged from using.
(2,952 observations deleted)

. drop _merge 

. 
. gen double income = (wealth/alpha_a1_u_ip)/12 //a1 assumption with income (monthly income)

. sum income [aw = hhwgt],de

                           income
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%     125.1514              0
10%     634.1224              0       Obs              45,713
25%     2311.167              0       Sum of Wgt.   156770994

50%     7183.258                      Mean           13805.44
                        Largest       Std. Dev.      48473.82
75%     16749.06        2195963
90%     32351.72        3184316       Variance       2.35e+09
95%     45516.69        3842935       Skewness       59.26929
99%     81811.82        4062531       Kurtosis       4365.775

. 
. gen income_pc = income/hhsize

. 
. save "${r_output}\nss70_ria_master.dta",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files\nss70_ria_master.dta saved

. 
. ***********RIA approach for housing owner**********
. use "${r_output}\nss70_ria_master.dta",clear

. 
. gen owner = (building_dwelling > 0 & !mi(building_dwelling))*100

. replace owner = 0 if mi(building_dwelling)
(0 real changes made)

. tab owner [aw = hhwgt]

      owner |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 | 18,354.485       40.15       40.15
        100 | 27,358.515       59.85      100.00
------------+-----------------------------------
      Total |     45,713      100.00

. 
. *Maximum amount available for mortgage per capita/household
. forvalues i = 1/2 {
  2. gen own_ria_`i'_pc = income/hhsize - pline_nhs_`i' //hypothetical expenditure, we are using mpce (actual exp.), different from Australia
  3. gen own_ria_`i'_hh = income - pline_nhs_`i'*hhsize
  4. gen pline_nhs_`i'_hh = pline_nhs_`i'*hhsize
  5. }

. 
. label var own_ria_1_pc "Max Residual HH Monthly Mortgage at NHBS (mean)" //per capita

. label var own_ria_1_hh "Max Residual HH Monthly Mortgage at NHBS (mean)" //hh. 

. 
. label var own_ria_2_pc "Max Residual HH Monthly Mortgage at 1.5NHBS (mean)" //per capita

. label var own_ria_2_hh "Max Residual HH Monthly Mortgage at 1.5NHBS (mean)" //hh.

. 
. *The max housing exp with ratio approach 
. gen own_ratio_pc = (income/hhsize)*0.3

. label var own_ratio_pc "Max Residual HH Monthly Mortgage at 30% Rule" //per capita

. 
. gen own_ratio_hh = income*0.3

. label var own_ratio_hh "Max Residual HH Monthly Mortgage at 30% Rule" //hh.

. 
. *convert the maximun mortgage to house value
. /*
> PV = mortgage amount
> PMT = monthly payment (own_ria_1_hh, own_ria_2_hh, own_ratio_1_hh)
> i = monthly interest rate
> (nss70: Average interest rate for all India housing mortgage holder,
> housing loan with immovable property as secure type: 11%)
> n = the term in number of month
> (NSS70: Average term of loan for all India housing mortgage holder,
> housing loan with immovable property as secure type: 102 month, change to 9 year 108 month)
> */
. 
. global rate = (1+0.11)^(1/12) - 1 

. di ${rate}
.00873459

. global term = 108 

. global ltv = 0.7

. 
. forvalues i = 1/2 {
  2. gen max_loan_`i' = own_ria_`i'_hh * (1 - ((1+$rate)^-$term)) / $rate
  3. gen max_hse_val_`i' = max_loan_`i' / $ltv
  4. }

. 
. gen max_loan_ratio = own_ratio_hh * (1 - ((1+$rate)^-$term)) / $rate

. gen max_hse_val_ratio = max_loan_ratio / $ltv

. 
. label var max_hse_val_1 "LBS"

. label var max_hse_val_2 "MBS"

. label var max_hse_val_ratio "30% Rule"

. 
. label var building_dwelling "Housing Value (million)"

. 
. *merge with mortgage payment information
. merge 1:m HHID using "${r_output}\b14_hse_mortgage"
(label gender already defined)

    Result                           # of obs.
    -----------------------------------------
    not matched                        88,233
        from master                         0  (_merge==1)
        from using                     88,233  (_merge==2)

    matched                            59,291  (_merge==3)
    -----------------------------------------

. bysort HHID: egen repay_mt_2_max = max(repay_mt_2) //Less conservative (let's label 2) housing loan with mortgage
(69308 missing values generated)

. bysort HHID: keep if _n == 1 //maximum monthly mortgage repay
(36,724 observations deleted)

. 
. gen ratio_pay = (repay_mt_2_max > own_ratio_hh)*100

. label var ratio "Unaffordable at 30% Rule (%)"

. 
. gen ria_1_pay = (repay_mt_2_max > own_ria_1_hh)*100

. label var ria_1 "Unaffordable at NHBS (%)"

. 
. gen ria_2_pay = (repay_mt_2_max > own_ria_2_hh)*100

. label var ria_2 "Unaffordable at 1.5NHBS (%)"

. 
. tostring (ria_1_pay ria_2_pay ratio_pay),gen(ria_1_pay_tx ria_2_pay_tx ratio_pay_tx) //Identify the different affordability group
ria_1_pay_tx generated as str3
ria_2_pay_tx generated as str3
ratio_pay_tx generated as str3

. gen afd_grp_pay = ria_1_pay_tx + ria_2_pay_tx //focus only on ria1 and ria2

. tab afd_grp_pay [aw = hhwgt] //different section

afd_grp_pay |      Freq.     Percent        Cum.
------------+-----------------------------------
         00 | 78,773.949       71.10       71.10
       0100 | 1,901.1805        1.72       72.81
     100100 |30,124.8701       27.19      100.00
------------+-----------------------------------
      Total |    110,800      100.00

. seperate repay_mt_2_max,by(afd_grp_pay) //group households by housing value
(note:  separate is spelled separate)

              storage   display    value
variable name   type    format     label      variable label
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
repay_mt_2_max1 float   %9.0g                 repay_mt_2_max, afd_grp_pay == 00
repay_mt_2_max2 float   %9.0g                 repay_mt_2_max, afd_grp_pay == 0100
repay_mt_2_max3 float   %9.0g                 repay_mt_2_max, afd_grp_pay == 100100

. label var repay_mt_2_max1 "Affordable Housing" 

. label var repay_mt_2_max2 "Intermediate Unaffordable Housing"

. label var repay_mt_2_max3 "Unaffordable Housing"

. 
. *affordability table for owner
. egen owner_type = wtmean(owner),weight(hhwgt) by(hh_type) //overall share of owner hh in urban , 
(65087 missing values generated)

. egen owner_al = wtmean(owner),weight(hhwgt) //share of owner hh by household type 

. label var owner_type "Owners (%)"

. label var owner_al "Owners (%)"

. 
. label var hhsize "Household Size (mean) "

. label var wealth "Total HH Wealth"

. label var income "Imputed HH Income*" //*mapping wealth to income from Nadeem using distance based approach

. 
. gen pline_hh = pline*hhsize
(65,087 missing values generated)

. label var pline_hh "HH Poverty Line**"

. 
. gen pline_hh_15 = 1.5*pline_hh
(65,087 missing values generated)

. label var pline_hh_15 "HH 1.5 Poverty Line"

. 
. gen poor = (income < pline_hh)*100

. label var poor "%HH Poor at PL"

. 
. gen poor_15 = (income < pline_hh_15)*100

. label var poor_15 "%HH Poor at 1.5PL"

. 
. label var pline_nhs_1_hh "HH Non-Housing Budget Standard (NHBS)^"

. label var pline_nhs_2_hh "HH 1.5NHBS^" //^mean of non-housing poverty line by state for urban sector

. 
. label var max_hse_val_1 "Max Housing Value at NHBS (mean, million)"

. label var max_hse_val_2 "Max Housing Value at 1.5NHBS (mean, million)"

. 
. gen ratio = (building_dwelling > max_hse_val_ratio)*100

. label var ratio "Unaffordable at 30% Rule (%)"

. 
. gen ria_1 = (building_dwelling > max_hse_val_1)*100

. label var ria_1 "Unaffordable at NHBS (%)"

. 
. gen ria_2 = (building_dwelling > max_hse_val_2)*100

. label var ria_2 "Unaffordable at 1.5NHBS (%)"

. 
. tostring (ria_1 ria_2 ratio),gen(ria_1_tx ria_2_tx ratio_tx) //Identify the different affordability group
ria_1_tx generated as str3
ria_2_tx generated as str3
ratio_tx generated as str3

. gen afd_grp = ria_1_tx + ria_2_tx //focus only on ria1 and ria2

. tab afd_grp [aw = hhwgt] //different section

    afd_grp |      Freq.     Percent        Cum.
------------+-----------------------------------
         00 | 85,040.529       76.75       76.75
       0100 |  7,617.368        6.87       83.63
     100100 | 18,142.103       16.37      100.00
------------+-----------------------------------
      Total |    110,800      100.00

. seperate building_dwelling,by(afd_grp) //group households by housing value
(note:  separate is spelled separate)

              storage   display    value
variable name   type    format     label      variable label
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
building_dwel~1 long    %10.0g                building_dwelling, afd_grp == 00
building_dwel~2 long    %10.0g                building_dwelling, afd_grp == 0100
building_dwel~3 long    %10.0g                building_dwelling, afd_grp == 100100

. label var building_dwelling1 "Affordable Housing" 

. label var building_dwelling2 "Intermediate Unaffordable Housing"

. label var building_dwelling3 "Unaffordable Housing"

. 
. *change unit to million 
. foreach var of varlist building_dwelling max_hse_val* {
  2. replace `var' = `var'/1e6
  3. }
variable building_dwelling was long now double
(92,063 real changes made)
(45,713 real changes made)
(45,713 real changes made)
(44,918 real changes made)

. 
. save "${r_output}\nss70_ria_master_final.dta",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files\nss70_ria_master_final.dta saved

. 
. ********************produce esttab table
. use "${r_output}\nss70_ria_master_final.dta",clear

. 
. *calculate housing value median. 
. foreach var of varlist building_dwelling max_hse_val* {
  2. 
. //median of all hh
. gen `var'_md_al = .
  3. summarize `var' [aw = hhwgt] if owner ==100,de
  4. replace `var'_md_al = r(p50) if owner ==100
  5. 
. //median by housing type
. gen `var'_md = . 
  6. quietly foreach i in 0 3 4 5 6 { 
  7.     summarize `var' [aw = hhwgt] if hh_type_grp == `i' & owner == 100, detail 
  8.     replace `var'_md = r(p50) if hh_type_grp == `i' & owner == 100
  9.         } 
 10. }
(110,800 missing values generated)

                   Housing Value (million)
-------------------------------------------------------------
      Percentiles      Smallest
 1%          .02          .0008
 5%          .05           .001
10%         .085           .001       Obs              32,405
25%           .2           .001       Sum of Wgt.  93824985.6

50%          .45                      Mean           1.551317
                        Largest       Std. Dev.      24.46829
75%     1.126013            850
90%          2.4           1000       Variance       598.6974
95%            4           1750       Skewness       61.81493
99%            9           1850       Kurtosis       4228.369
(32,405 real changes made)
(110,800 missing values generated)
(110,800 missing values generated)

          Max Housing Value at NHBS (mean, million)
-------------------------------------------------------------
      Percentiles      Smallest
 1%    -.4778554      -2.627616
 5%    -.2042627      -2.463384
10%    -.0688074      -2.089942       Obs              32,405
25%     .2169438       -1.84742       Sum of Wgt.  93824985.6

50%     .7769636                      Mean           1.502959
                        Largest       Std. Dev.      6.123188
75%     1.885761       218.1932
90%     3.538675        315.747       Variance       37.49343
95%     5.021098       382.1463       Skewness       48.13527
99%     8.503071       404.0216       Kurtosis       2792.445
(32,405 real changes made)
(110,800 missing values generated)
(110,800 missing values generated)

        Max Housing Value at 1.5NHBS (mean, million)
-------------------------------------------------------------
      Percentiles      Smallest
 1%    -1.422193       -5.65123
 5%    -.8639855      -5.441719
10%    -.6481762      -4.769948       Obs              32,405
25%    -.2323073      -4.527425       Sum of Wgt.  93824985.6

50%     .3427749                      Mean           1.032113
                        Largest       Std. Dev.      6.128921
75%     1.448892       217.6349
90%     3.117675       314.2802       Variance       37.56367
95%     4.624209       381.4763       Skewness       47.86302
99%     8.133195       403.3517       Kurtosis       2772.196
(32,405 real changes made)
(110,800 missing values generated)
(110,800 missing values generated)

                          30% Rule
-------------------------------------------------------------
      Percentiles      Smallest
 1%     .0514858       .0013714
 5%      .092998       .0057473
10%     .1230948       .0065485       Obs              32,405
25%     .1976086       .0065616       Sum of Wgt.  93824985.6

50%     .3719311                      Mean           .5922258
                        Largest       Std. Dev.      1.837873
75%     .7051939       65.62607
90%     1.191976       95.16289       Variance       3.377778
95%      1.65552       114.8456       Skewness       48.20134
99%     2.712725       121.4082       Kurtosis       2796.806
(32,405 real changes made)
(110,800 missing values generated)

. 
. label var max_hse_val_1_md_al "Max Housing Value at NHBS (median, million)"

. label var max_hse_val_2_md_al "Max Housing Value at 1.5NHBS (median, million)"

. label var building_dwelling_md_al "Housing Value (median, million)"

. 
. 
. global var_tab "owner_al building_dwelling_md_al hhsize wealth income pline_hh pline_hh_15 poor poor_15 pline_nhs_1_hh pline_nhs_2_hh max_hse_val_1_md_al max_hse_val_2_md_al own_ria_1_hh own_ria_2_hh ratio ria_1 ria_2"

. 
. qui eststo total : estpost summarize $var_tab [aw = hhwgt] if owner ==100,de  

. 
. replace owner_al = owner_type
(110,800 real changes made, 65,087 to missing)

. foreach var of varlist building_dwelling max_hse_val_1 max_hse_val_2 {
  2. replace `var'_md_al = `var'_md
  3. }
(32,405 real changes made)
(32,405 real changes made)
(32,405 real changes made)

. 
. foreach i in 0 3 4 5 6 {
  2. qui eststo grp`i' : estpost summarize $var_tab [aw = hhwgt] if hh_type_grp == `i' & owner == 100,de
  3. }

. 
. esttab total grp0 grp3 grp4 grp5 grp6, cells(mean(fmt(%15.1fc))) label collabels(none) varwidth(40) ///
>  mtitles( "All HH" "Size 1-2" "Size 3" "Size 4" "Size 5" "Size >=6" ) stats(N, label("Observations") fmt(%15.1gc)) ///
>  title("Owner affordability using different affordability measures in urban India (owners only)") ///
>  addnotes("Notes: Homeowners are households own residential building used as dwelling by household members." ///
>           "       * mapping wealth to income using distance based approach." ///
>           "       ** Tendulkar (2012) poverty estimation weighted mean by state as the poverty line is different in every state." ///
>                   "       Low Budget Standard corresponds to poverty line (Tendulkar), Moderate budget standard is 1.5 times" ///
>                   "       ^ methodology – renters only, removing actual rent at the 2nd (poverty line) decile of expenditure and 4th (1.5 * poverty line) to arrive at non-housing poverty lines." )

Owner affordability using different affordability measures in urban India (owners only)
----------------------------------------------------------------------------------------------------------------------
                                                  (1)          (2)          (3)          (4)          (5)          (6)
                                               All HH     Size 1-2       Size 3       Size 4       Size 5     Size >=6
----------------------------------------------------------------------------------------------------------------------
Owners (%)                                       59.8         34.2         58.4         63.0         70.1         80.0
Housing Value (median, million)                   0.4          0.4          0.5          0.5          0.4          0.4
Household Size (mean)                             4.6          1.8          3.0          4.0          5.0          7.4
Total HH Wealth                           3,552,394.7  3,446,503.5  2,895,841.8  3,247,346.0  3,440,016.0  4,383,006.7
Imputed HH Income*                           19,816.9     19,575.4     18,912.3     19,471.6     19,296.4     21,203.7
HH Poverty Line**                             4,738.2      1,773.6      3,053.2      4,116.2      5,135.5      7,622.2
HH 1.5 Poverty Line                           7,107.3      2,660.4      4,579.8      6,174.2      7,703.3     11,433.3
%HH Poor at PL                                   13.3          1.8          4.9          8.6         15.1         27.6
%HH Poor at 1.5PL                                25.3          4.8         12.0         18.6         31.1         46.3
HH Non-Housing Budget Standard (NHBS)^        4,729.4      1,770.0      3,047.4      4,108.7      5,126.2      7,608.1
HH 1.5NHBS^                                   9,456.0      3,538.8      6,093.2      8,214.0     10,249.1     15,212.6
Max Housing Value at NHBS (median, milli          0.8          1.0          0.9          0.9          0.7          0.5
Max Housing Value at 1.5NHBS (median, mi          0.3          0.9          0.6          0.5          0.2         -0.3
Max Residual HH Monthly Mortgage at NHBS     15,087.5     17,805.4     15,864.9     15,362.9     14,170.2     13,595.6
Max Residual HH Monthly Mortgage at 1.5N     10,360.9     16,036.6     12,819.1     11,257.5      9,047.3      5,991.2
Unaffordable at 30% Rule (%)                     63.4         58.1         64.0         65.3         64.7         62.9
Unaffordable at NHBS (%)                         41.8         15.1         28.2         39.4         49.5         60.7
Unaffordable at 1.5NHBS (%)                      65.7         34.0         56.3         65.2         74.2         82.3
----------------------------------------------------------------------------------------------------------------------
Observations                                   32,405        3,274        4,937        7,944        6,456        9,794
----------------------------------------------------------------------------------------------------------------------
Notes: Homeowners are households own residential building used as dwelling by household members.
       * mapping wealth to income using distance based approach.
       ** Tendulkar (2012) poverty estimation weighted mean by state as the poverty line is different in every state.
       Low Budget Standard corresponds to poverty line (Tendulkar), Moderate budget standard is 1.5 times
       ^ methodology – renters only, removing actual rent at the 2nd (poverty line) decile of expenditure and 4th (1.5 * poverty line) to arrive at non-housing poverty lines.

. 
. **************plot the affordability curve: maximum monthly mortgage payment value and income
. use "${r_output}\nss70_ria_master_final.dta",clear

. keep if owner == 100 //only on housing owners. 
(78,395 observations deleted)

. 
. foreach var of varlist own_ria_* repay_mt_2* {
  2. replace `var' = . if `var' <= 0
  3. //replace `var' = . if `var' > 2e3
. }
(5,154 real changes made, 5,154 to missing)
(5,154 real changes made, 5,154 to missing)
(13,288 real changes made, 13,288 to missing)
(13,288 real changes made, 13,288 to missing)
(13,283 real changes made, 13,283 to missing)
(13,877 real changes made, 13,877 to missing)
(7,483 real changes made, 7,483 to missing)
(3,821 real changes made, 3,821 to missing)
(2,573 real changes made, 2,573 to missing)

. 
. format own_ria_* repay_mt_2*  %15.0fc

. 
. sum income [aw = hhwgt],de

                     Imputed HH Income*
-------------------------------------------------------------
      Percentiles      Smallest
 1%     1722.806       45.88993
 5%     3111.876       192.3146
10%     4118.968       219.1246       Obs              32,405
25%     6612.328       219.5638       Sum of Wgt.  93824985.6

50%     12445.46                      Mean           19816.91
                        Largest       Std. Dev.      61498.44
75%     23597.02        2195963
90%     39885.59        3184316       Variance       3.78e+09
95%     55396.58        3842935       Skewness       48.20134
99%     90772.49        4062531       Kurtosis       2796.806

. twoway line own_ria_1_hh own_ria_2_hh own_ratio_hh income if state == "33" & ///
> hh_type == "4" & inrange(income,0,`r(p90)') ,lpattern(p1 p1 dash) lcolor(cranberry dkorange gs11) || ///
> scatter repay_mt_2_max1 repay_mt_2_max2 repay_mt_2_max3 income if state == "33" & ///
> hh_type == "4" & inrange(income,0,`r(p90)') , msize(tiny) mcolor(dkgreen dkorange cranberry) graphregion(color(white)) msymbol(circle triangle square) ///
> msize(tiny tiny tiny) xtitle("Household Monthly Income") ytitle("Maximum Monthly Mortgage Payment") ///
> title("Maximum affordable mortgage payment (Tamil Nadu: 4-member household)", size(small)) xline(`r(p50)', lpattern(dash) lcolor(gs4)) ///
> legend(cols(3) label(1 "PLBS") label(2 "1.5PLBS") size(vsmall)) ///
> note("Note: PLBS is Poverty Line Budget Standard, 1.5PLBS is 1.5 times PLBS." ///
>      "      The income percentile is for housing owners only weighted by household weight.") ///
> xlabel(4119 `" "4,119" "(p10)" "' 6612 `" "6,612" "(p25)" "' 12445 `" "12,445" "(p50)" "' 23597 `" "23,597" "(p75)" "' 39886 `" "39,886" "(p90)" "',labsize(vsmall))  //text(2e3 `r(p50)' "50th Percentile", color(black))
(note:  named style p1 not found in class linepattern, default attributes used)
(note:  named style p1 not found in class linepattern, default attributes used)
(note:  named style p1 not found in class linepattern, default attributes used)
(note:  named style p1 not found in class linepattern, default attributes used)

. 
. sum income [aw = hhwgt],de

                     Imputed HH Income*
-------------------------------------------------------------
      Percentiles      Smallest
 1%     1722.806       45.88993
 5%     3111.876       192.3146
10%     4118.968       219.1246       Obs              32,405
25%     6612.328       219.5638       Sum of Wgt.  93824985.6

50%     12445.46                      Mean           19816.91
                        Largest       Std. Dev.      61498.44
75%     23597.02        2195963
90%     39885.59        3184316       Variance       3.78e+09
95%     55396.58        3842935       Skewness       48.20134
99%     90772.49        4062531       Kurtosis       2796.806

. twoway line own_ria_1_hh own_ria_2_hh own_ratio_hh income if state == "33" & ///
> hh_type == "5" & inrange(income,0,`r(p90)') ,lpattern(p1 p1 dash) lcolor(cranberry dkorange gs11) || ///
> scatter repay_mt_2_max1 repay_mt_2_max2 repay_mt_2_max3 income if state == "33" & ///
> hh_type == "5" & inrange(income,0,`r(p90)') , msize(tiny) mcolor(dkgreen dkorange cranberry) graphregion(color(white)) msymbol(circle triangle square) ///
> msize(tiny tiny tiny) xtitle("Household Monthly Income") ytitle("Maximum Monthly Mortgage Payment") ///
> title("Maximum affordable mortgage payment (Tamil Nadu: 5-member household)", size(small)) xline(`r(p50)', lpattern(dash) lcolor(gs4)) ///
> legend(cols(3) label(1 "PLBS") label(2 "1.5PLBS") size(vsmall)) ///
> note("Note: PLBS is Poverty Line Budget Standard, 1.5PLBS is 1.5 times PLBS" ///
>      "      The income percentile is for housing owners only weighted by household weight.") ///
> xlabel(4119 `" "4,119" "(p10)" "' 6612 `" "6,612" "(p25)" "' 12445 `" "12,445" "(p50)" "' 23597 `" "23,597" "(p75)" "' 39886 `" "39,886" "(p90)" "',labsize(vsmall))  //text(2e3 `r(p50)' "50th Percentile", color(black))
(note:  named style p1 not found in class linepattern, default attributes used)
(note:  named style p1 not found in class linepattern, default attributes used)
(note:  named style p1 not found in class linepattern, default attributes used)
(note:  named style p1 not found in class linepattern, default attributes used)

. 
. ***********plot the affordability curve: maximum affordable housing value and income
. use "${r_output}\nss70_ria_master_final.dta",clear

. keep if owner == 100 //only on housing owners. 
(78,395 observations deleted)

. 
. format max_hse_val* max_loan* %15.1fc

. 
. sum building_dwelling [aw = hhwgt],de

                   Housing Value (million)
-------------------------------------------------------------
      Percentiles      Smallest
 1%          .02          .0008
 5%          .05           .001
10%         .085           .001       Obs              32,405
25%           .2           .001       Sum of Wgt.  93824985.6

50%          .45                      Mean           1.551317
                        Largest       Std. Dev.      24.46829
75%     1.126013            850
90%          2.4           1000       Variance       598.6974
95%            4           1750       Skewness       61.81493
99%            9           1850       Kurtosis       4228.369

. 
. foreach var of varlist building_dwelling* {
  2. replace `var' = `var'/1e6 //change the housing value unit to million 
  3. }
(32,405 real changes made)
variable building_dwelling_area was int now float
(32,377 real changes made)
variable building_dwelling1 was long now double
(10,402 real changes made)
variable building_dwelling2 was long now double
(8,288 real changes made)
variable building_dwelling3 was long now double
(13,715 real changes made)

. 
. foreach var of varlist max_hse_val_* building_dwelling* {
  2. replace `var' = . if `var' > 2 //around 80 percentile housing value
  3. replace `var' = . if `var' <= 0
  4. }
(6,554 real changes made, 6,554 to missing)
(5,154 real changes made, 5,154 to missing)
(5,023 real changes made, 5,023 to missing)
(13,288 real changes made, 13,288 to missing)
(902 real changes made, 902 to missing)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(28 real changes made, 28 to missing)
(809 real changes made, 809 to missing)
(0 real changes made)
(247 real changes made, 247 to missing)
(0 real changes made)
(1,613 real changes made, 1,613 to missing)
(0 real changes made)

. 
. sum income [aw = hhwgt],de //percentile among urban housing owner. 

                     Imputed HH Income*
-------------------------------------------------------------
      Percentiles      Smallest
 1%     1722.806       45.88993
 5%     3111.876       192.3146
10%     4118.968       219.1246       Obs              32,405
25%     6612.328       219.5638       Sum of Wgt.  93824985.6

50%     12445.46                      Mean           19816.91
                        Largest       Std. Dev.      61498.44
75%     23597.02        2195963
90%     39885.59        3184316       Variance       3.78e+09
95%     55396.58        3842935       Skewness       48.20134
99%     90772.49        4062531       Kurtosis       2796.806

. twoway line max_hse_val_1 max_hse_val_2 max_hse_val_ratio income if state == "33" & ///
> hh_type == "4" & inrange(income,0,`r(p90)') ,lpattern(p1 p1 dash) lcolor(cranberry dkorange gs11) ///
> || scatter building_dwelling1 building_dwelling2 building_dwelling3 income if state == "33" & ///
> hh_type == "4" & inrange(income,0,`r(p90)') , msize(tiny) mcolor(dkgreen dkorange cranberry) graphregion(color(white)) msymbol(circle triangle square) ///
> msize(tiny tiny tiny) xtitle("Household Monthly Income") ytitle("Maximum affordable housing value (million)") ///
> title("Maximum affordable housing value (Tamil Nadu: 4-member household)", size(small)) xline(`r(p50)', lpattern(dash) lcolor(gs4)) ///
> legend(cols(3) label(1 "PLBS") label(2 "1.5PLBS") size(vsmall)) ///
> note("Note: PLBS is Poverty Line Budget Standard, 1.5PLBS is 1.5 times PLBS." ///
>      "      The income percentile is for housing owners only weighted by household weight.") ///
> xlabel(4119 `" "4,119" "(p10)" "' 6612 `" "6,612" "(p25)" "' 12445 `" "12,445" "(p50)" "' 23597 `" "23,597" "(p75)" "' 39886 `" "39,886" "(p90)" "',labsize(vsmall))  //text(2e3 `r(p50)' "50th Percentile", color(black))
(note:  named style p1 not found in class linepattern, default attributes used)
(note:  named style p1 not found in class linepattern, default attributes used)
(note:  named style p1 not found in class linepattern, default attributes used)
(note:  named style p1 not found in class linepattern, default attributes used)

. 
. sum income [aw = hhwgt],de //percentile among urban housing owner. 

                     Imputed HH Income*
-------------------------------------------------------------
      Percentiles      Smallest
 1%     1722.806       45.88993
 5%     3111.876       192.3146
10%     4118.968       219.1246       Obs              32,405
25%     6612.328       219.5638       Sum of Wgt.  93824985.6

50%     12445.46                      Mean           19816.91
                        Largest       Std. Dev.      61498.44
75%     23597.02        2195963
90%     39885.59        3184316       Variance       3.78e+09
95%     55396.58        3842935       Skewness       48.20134
99%     90772.49        4062531       Kurtosis       2796.806

. twoway line max_hse_val_1 max_hse_val_2 max_hse_val_ratio income if state == "33" & ///
> hh_type == "5" & inrange(income,0,`r(p90)') ,lpattern(p1 p1 dash) lcolor(cranberry dkorange gs11) || scatter building_dwelling1 building_dwelling2 building_dwelling3 income if state == "33" & ///
> hh_type == "5" & inrange(income,0,`r(p90)') , msize(tiny) mcolor(dkgreen dkorange cranberry) graphregion(color(white)) msymbol(circle triangle square) ///
> msize(tiny tiny tiny) xtitle("Household Monthly Income") ytitle("Maximum affordable housing value (million)") ///
> title("Maximum affordable housing value (Tamil Nadu: 5-member household)", size(small)) xline(`r(p50)', lpattern(dash) lcolor(gs4)) ///
> legend(cols(3) label(1 "PLBS") label(2 "1.5PLBS") size(vsmall)) ///
> note("Note: PLBS is Poverty Line Budget Standard, 1.5PLBS is 1.5 times PLBS." ///
>      "      The income percentile is for housing owners only weighted by household weight.") ///
> xlabel(4119 `" "4,119" "(p10)" "' 6612 `" "6,612" "(p25)" "' 12445 `" "12,445" "(p50)" "' 23597 `" "23,597" "(p75)" "' 39886 `" "39,886" "(p90)" "',labsize(vsmall))  //text(2e3 `r(p50)' "50th Percentile", color(black))
(note:  named style p1 not found in class linepattern, default attributes used)
(note:  named style p1 not found in class linepattern, default attributes used)
(note:  named style p1 not found in class linepattern, default attributes used)
(note:  named style p1 not found in class linepattern, default attributes used)

. 
. log close
      name:  <unnamed>
       log:  C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\Housing_git\nss\Survey_NSS\residual_income\03_2_NSS70_Residual_Income_Owner.log
  log type:  text
 closed on:  18 Mar 2021, 11:36:54
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
