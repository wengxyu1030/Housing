-------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\Housing_git\nss\Survey_NSS\NSS68\03_NSS68_Residu
> al_Income_New.log
  log type:  text
 opened on:   2 Mar 2021, 04:56:24

. set linesize 255

. 
. ***************************************************************
. *Step 1: Data Cleaning ****************************************
. ***************************************************************
. 
. use "${r_input}\bk_12.dta",clear

. merge m:1 ID using "${r_input}\bk_3.dta"
(label state already defined)
(label B1_v04 already defined)
(label B1_v05 already defined)

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                         3,562,593  (_merge==3)
    -----------------------------------------

. drop _merge

.    
. /* poverty line is by state and by sector */
.           
.           *Fuel and light (12: 18, 30 days recall period)
.           gen double fuel = B12_v06*(B12_v01 == 18)

.         
.           egen double total_fuel = sum(fuel), by(ID)

.           bys ID: keep if _n == 1 // keep only one observation for each HH
(3,460,931 observations deleted)

.         
.       merge 1:m ID using "${r_input}\bk_10.dta"
(note: variable B1_v00 was byte, now int to accommodate using data's values)
(label B1_v05 already defined)
(label B1_v04 already defined)
(label state already defined)

    Result                           # of obs.
    -----------------------------------------
    not matched                            33
        from master                        33  (_merge==1)
        from using                          0  (_merge==2)

    matched                         2,362,394  (_merge==3)
    -----------------------------------------

.       drop _merge

.      
.           *water charge(10: 540, 30 days recall period)
.           gen water = B10_v03*(B10_v02 == 540)
(33 missing values generated)

.           
.           *Rent charge (10: 529 all rent included, 30 days recall period)
.           gen rent = B10_v03*(B10_v02 == 529)
(33 missing values generated)

.           
.           *Imputed rent
.           gen rent_impt = B10_v03*(B10_v02 == 539)
(33 missing values generated)

.           
.           foreach var in water rent rent_impt { 
  2.           egen double total_`var' = sum(`var'), by(ID)
  3.           drop `var'
  4.           } 

.           
.           bys ID: keep if _n == 1 // keep only one observation for each HH
(2,260,765 observations deleted)

.           
.           *Identify renter, owner (de jure)
.           gen renter = ( B3_v18 == 2 )

.           label var renter "Renter"

.           
.           gen owner = ( B3_v18 == 1 )

.           label var owner "Owner"

.         
. rename ID hhid

. merge 1:1 hhid using "${r_input}\poverty68.dta"
(label state already defined)

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                           101,662  (_merge==3)
    -----------------------------------------

. keep if _merge == 3
(0 observations deleted)

. drop _merge

. 
.       *adjust the unit from India Rupee to USD: 1 Indian Rupee = 0.014 USD in 2/24/2021 （later）
.           global r_u = 0.014

.           
.           foreach var of var pline mpce* total_* {
  2.           gen `var'_usd = `var'*${r_u}
  3.       }

.    
.       *different budget scenario: pline, double pline, triple pline.    
.       forvalues i = 1/3 {
  2.       gen pline_`i' = pline*`i'
  3.       }

.           
.           sum poor poor_double [aw = pwt]

    Variable |     Obs      Weight        Mean   Std. Dev.       Min        Max
-------------+-----------------------------------------------------------------
        poor | 101,662  1.1090e+09     .220403   .4145205          0          1
 poor_double | 101,662  1.1090e+09    .7561655   .4293961          0          1

.           sum poor poor_double [aw = pwt] if sector == 2

    Variable |     Obs      Weight        Mean   Std. Dev.       Min        Max
-------------+-----------------------------------------------------------------
        poor |  41,967   316854132    .1369894   .3438403          0          1
 poor_double |  41,967   316854132    .5658509   .4956506          0          1

.          
.           
.       *Only focus on urban (the Tendulka approach decile is based on urban exp.)
.       gen urban = sector - 1

.           keep if urban == 1
(59,695 observations deleted)

.       label var urban "Urban"

.       
.           *Decile of the expenditure
.       xtile decile = mpce_mrp [aw = pwt] , n(10)

.       label var decile "Exp. decile"

. 
.       label var hhsize "Household size"

.           
.           *check how national poverty line constructed //? can I get the weighted mean of poverty line (vary by state and sector)
.           preserve

.           use "${r_input}\poverty68.dta",clear

.           keep if sector == 2
(59,695 observations deleted)

.           tab pline_ind_11 //1000

All-India-T |
   endulkar |
    Poverty |
       Line |      Freq.     Percent        Cum.
------------+-----------------------------------
       1000 |     41,967      100.00      100.00
------------+-----------------------------------
      Total |     41,967      100.00

.       restore

. **************************************************************
. *Step 2: Construct budget standards **************************
. **************************************************************
. 
. *remove rent budget from the original poverty line by state
. gen rent_pc = total_rent/hhsize

. gen rent_mpce = rent_pc/mpce_mrp*100 //share of rent on total expenditure per capita (renters)

. 
. *stats for renters
. table decile [aw = pwt], c(mean renter ) row 

------------------------
Exp.      |
decile    | mean(renter)
----------+-------------
        1 |     .1104794
        2 |     .1462193
        3 |     .2064142
        4 |     .2239182
        5 |     .2476903
        6 |     .2986544
        7 |     .3686655
        8 |     .3506711
        9 |     .3874194
       10 |     .4114211
          | 
    Total |     .2751445
------------------------

. table decile [aw = pwt], c(mean rent_mpce mean mpce_mrp) row // for both renters and owners, the poverty line budget share of rent is 2.8%, lower than the 5.3% for exp. survey in 05. 

------------------------------------------
Exp.      |
decile    | mean(rent_m~e)  mean(mpce_mrp)
----------+-------------------------------
        1 |       1.322633        745.9887
        2 |       1.914011        1030.445
        3 |       2.834546         1252.32
        4 |       3.419945        1481.017
        5 |        3.91502        1727.774
        6 |       4.864757        2017.602
        7 |       6.415461        2377.397
        8 |       6.235534        2886.917
        9 |       7.222962        3751.926
       10 |       9.623198        7501.428
          | 
    Total |       4.776478        2477.019
------------------------------------------

. table decile if renter == 1 [aw = pwt], c(med rent_pc med mpce_mrp med rent_mpce) row // only for renters 

-------------------------------------------------------
Exp.      |
decile    |  med(rent_pc)  med(mpce_mrp)  med(rent_m~e)
----------+--------------------------------------------
        1 |          87.5         794.63       11.40082
        2 |           125        1039.84       12.19081
        3 |      166.6667        1262.57       13.03927
        4 |         212.5        1488.69       14.29322
        5 |           250        1734.38       14.75954
        6 |           300        2038.86       15.21483
        7 |           400        2374.76       16.80566
        8 |           500        2898.32       17.00374
        9 |      642.8571        3672.77       17.58884
       10 |          1300         6487.3       20.38145
          | 
    Total |           375        2329.06       15.77979
-------------------------------------------------------

. 
. *collapse at state and declie level
. tab poor [aw = pwt] if urban == 1 //13.7% poverty rate in urban India: 2th decile MPCE class

Poor:Tendul |
kar poverty |
       line |      Freq.     Percent        Cum.
------------+-----------------------------------
   Not-poor | 36,217.966       86.30       86.30
       Poor |  5,749.034       13.70      100.00
------------+-----------------------------------
      Total |     41,967      100.00

. 
. //ssc inst _gwtmean
. forvalues i = 2/6 {
  2. gen rent_pc_d`i' = rent_pc * (decile == `i')
  3. bys state: egen rent_pc_`i' = wtmean(rent_pc_d`i') , weight(pwt) //the poverty line is in the 2nd decile MPCE class
  4. drop rent_pc_d`i' 
  5. }

. 
. *check the double poverty line and the 6th decile. 
. table decile [aw = pwt], c(mean mpce_mrp min mpce_mrp max mpce_mrp) row 

----------------------------------------------------------
Exp.      |
decile    | mean(mpce_mrp)   min(mpce_mrp)   max(mpce_mrp)
----------+-----------------------------------------------
        1 |       745.9887              53          908.93
        2 |       1030.445          908.96         1142.12
        3 |        1252.32         1142.13         1366.64
        4 |       1481.017          1366.7         1601.71
        5 |       1727.774         1601.73          1865.6
        6 |       2017.602         1865.68         2189.97
        7 |       2377.397          2190.1         2595.59
        8 |       2886.917         2595.63         3234.61
        9 |       3751.926         3234.77         4511.92
       10 |       7501.428         4512.65        70132.97
          | 
    Total |       2477.019              53        70132.97
----------------------------------------------------------

. 
. local mpce_pline = 1030.445 //mean mpce_mrp at poverty line mpce class (decile 2, urban)

. local mpce_pline_15 = `mpce_pline'*1.5 //1.5 times mean poverty line mpce class (urban)

. 
. di  `mpce_pline_15' //4th decile mpce class (urban)
1545.6675

. 
. 
. *generate the non-housing poverty line for each state at different budget standard
. gen pline_nhs_1 = pline_1- rent_pc_2 // poverty line and double poverty line (only double pline not rent)

. gen pline_nhs_2 = pline_2- rent_pc_4 //4th decile is where the double poverty line mpce class doubled 

. 
. *estimate income based on expenditure //Picketty approach. 
. xtile exp_100 = mpce_mrp [aw=pwt], nq(100)

. 
. merge m:1 exp_100 using "${r_input}\IDHS_Exp_To_Income_All_Urban_Rural.dta",nogen

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                            41,967  
    -----------------------------------------

. 
. forvalues i = 0(1)2 {
  2. gen income_a`i' = (mpce_mrp * alpha_a`i'_u) //the income unit is consistent to budget standard
  3. }

. 
. xtile decile_ic = income_a2 [aw = pwt] , n(10) //decile for income: with the assumption that there's no income smaller than expenditure 

. xtile qt_ic = income_a2 [aw = pwt] , n(5) //quintile for income

. 
. gen rent_ic = rent_pc/income_a2*100 //share of rent on income

. 
. drop rent_pc_*

. save "${r_output}\nss68_ria_master.dta",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS68\Data Output Files\nss68_ria_master.dta saved

. 
. ***************************************************************
. *Step 3: Budget Standard for Renters **************************
. ***************************************************************
. 
. *Maximum amount available for rent
. use "${r_output}\nss68_ria_master.dta",clear

. forvalues i = 1/2 {
  2. gen rent_ria_`i' = mpce_mrp - pline_nhs_`i'
  3. 
.   forvalues  q = 0(1)2 {
  4.   gen rent_ria_income_a`q'_`i' = income_a`q' - pline_nhs_`i'
  5.   }
  6. }

. 
. *The max housing exp with ratio approach
. gen rent_ratio = mpce_mrp*0.3

. 
. forvalues  q = 0(1)2 {
  2. gen rent_income_ratio_a`q' = income_a`q'*0.3
  3. }

. 
. label var rent_ria_income_a2_1 "Low Cost Budget Standard"

. label var rent_ria_income_a2_2 "Modest Budget Standard"

. label var rent_income_ratio_a2 "30% Rule"

. 
. *Identify the different affordability group
. gen ria_1 = (rent_pc > rent_ria_income_a2_1)

. gen ria_2 = (rent_pc > rent_ria_income_a2_2)

. gen ratio = (rent_pc > rent_income_ratio_a2)

. tostring (ria_1 ria_2 ratio),gen(ria_1_tx ria_2_tx ratio_tx)
ria_1_tx generated as str1
ria_2_tx generated as str1
ratio_tx generated as str1

. 
. gen afd_grp = ria_1_tx + ria_2_tx //focus only on ria1 and ria2

. tab afd_grp [aw = pwt] //different section

    afd_grp |      Freq.     Percent        Cum.
------------+-----------------------------------
         00 | 17,883.856       42.61       42.61
         01 | 17,771.772       42.35       84.96
         11 | 6,311.3718       15.04      100.00
------------+-----------------------------------
      Total |     41,967      100.00

. 
. seperate rent_pc,by(afd_grp)
(note:  separate is spelled separate)

              storage   display    value
variable name   type    format     label      variable label
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
rent_pc1        float   %9.0g                 rent_pc, afd_grp == 00
rent_pc2        float   %9.0g                 rent_pc, afd_grp == 01
rent_pc3        float   %9.0g                 rent_pc, afd_grp == 11

. label var rent_pc1 "Affordable" 

. label var rent_pc2 "Unaffordable between MBS & LBS"

. label var rent_pc3 "Unaffordable at LBS"

. 
. *Plot the curve
. //x is income per capita 
. foreach var in rent_ria_income_a2_1 rent_ria_income_a2_2 {
  2. replace `var' = . if `var' <= 0
  3. }
(5,818 real changes made, 5,818 to missing)
(20,831 real changes made, 20,831 to missing)

. 
. format rent_ria_income_a2_1 rent_ria_income_a2_2 income_a2 %9.0fc

. 
. sum income_a2 [aw = pwt] ,de f //?how to set the y scale to 0-1e3? 

                          income_a2
-------------------------------------------------------------
      Percentiles      Smallest
 1%          578             53
 5%          771             87
10%          909            203       Obs              41,967
25%        1,255            206       Sum of Wgt.   316854132

50%        1,866                      Mean              3,075
                        Largest       Std. Dev.         4,031
75%        3,416        122,592
90%        6,147        123,297       Variance       16248376
95%        9,005        123,516       Skewness              8
99%       17,285        127,453       Kurtosis            152

. twoway line rent_ria_income_a2_1 rent_ria_income_a2_2 rent_income_ratio_a2 income_a2 if renter == 1 & inrange(income_a2,0, `r(p90)') & state == 33,lpattern(p1 p1 dash) lcolor(cranberry dkorange gs4) || ///
> scatter rent_pc1 rent_pc2 rent_pc3 income_a2 if renter == 1 & inrange(income_a2,0, `r(p90)') & state == 33, mcolor(dkgreen dkorange cranberry) graphregion(color(white)) msymbol(circle triangle square) ///
> msize(tiny tiny tiny tiny tiny tiny) ytitle("Maximum Housing Exp. (PC in Rs.)") xtitle("Monthly Income (PC in Rs.)") title("Maximum affordable rent payments (Tamil Nadu)") ///
> xline(`r(p50)', lpattern(dash) lcolor(gs4))  legend(cols(2) label(1 "LBS") label(2 "MBS")) ///
> xlabel(909 `" "909" "(p10)" "' 1225 `" "1,255" "(p25)" "' 1866 `" "1,866" "(p50)" "' 3416 `" "3,416" "(p75)" "' 6174 `" "6,147" "(p90)" "') //text(2e3 `r(p50)' "50th Percentile", color(black))
(note:  named style p1 not found in class linepattern, default attributes used)
(note:  named style p1 not found in class linepattern, default attributes used)
(note:  named style p1 not found in class linepattern, default attributes used)
(note:  named style p1 not found in class linepattern, default attributes used)

. 
. *produce the table
. foreach var in ria_1 ria_2 ratio {
  2. replace `var' = `var'*100 //unaffordability with income measure.
  3. gen exp_`var' = (rent_pc > rent_`var')*100 //unaffordability with expenditure measure.
  4. }
(6,382 real changes made)
(21,669 real changes made)
(342 real changes made)

. 
. replace renter = renter*100
(11,842 real changes made)

. egen renter_q = mean(renter),by(qt_ic) //overall share of renter hh in urban

. egen renter_al = mean(renter) //share of renter hh by urban quintile 

. 
. forvalue i = 1/2 {
  2. egen pline_nhs_`i'_nat = wtmean(pline_nhs_`i'), weight(pwt)  //weighted mean by state non-housing poverty line. 
  3. }

. 
. foreach var in poor poor_double {
  2. replace `var' = `var'*100 //poverty rate in %
  3. }
(5,856 real changes made)
(21,481 real changes made)

. 
. gen pline_15 = pline *1.5 //1.5 time poverty line at 4th decile mpce class.  

. 
. gen poor_income_1 = (income_a2 < pline)*100

. gen poor_income_2 = (income_a2 < pline_15)*100

. 
. //labels
. label var renter_q "Renters (%)"

. label var renter_al "Renters (%)"

. label var pline "PC Poverty Line (Tendulkar) (mean)*"

. label var pline_15 "PC 1.5 Poverty Line (mean)" //??check national poverty line estimate. 

. label var pline_nhs_1_nat "PC Non-housing PL (Tendulkar)^"

. label var pline_nhs_2_nat "PC Non-housing 1.5 PL (Tendulkar)"

. label var mpce_mrp "Monthly PC Expenditure (mean)"

. label var income_a2 "Monthly PC Income (mean)"

. label var poor "Below Poverty Line (Exp. < PL)"

. label var poor_double "Below 1.5 Poverty Line (Exp. < DPL)"

. 
. label var poor_income_1 "Below Poverty Line (income < PL)"

. label var poor_income_2 "Below 1.5 Poverty Line (income < 1.5PL)**"

. 
. label var rent_pc "PC Rent(mean)"

. label var rent_ic "PC Rent to Income(%, mean)"

. label var ratio "Unaffordable at 30% Rule"

. 
. label var rent_ria_income_a2_1 "Max Residual Housing at PLBS (mean)"

. label var rent_ria_income_a2_2 "Max Residual Housing at 1.5PLBS (mean)"

. label var ria_1 "Unaffordable at PLBS (%)"

. label var ria_2 "Unaffordable at 1.5PLBS (%)"

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. table renter [aw = pwt], c(mean poor) raw
option raw not allowed
r(198);

end of do-file

r(198);

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. table renter [aw = pwt], c(mean poor) row

----------------------
   Renter | mean(poor)
----------+-----------
        0 |   16.69724
      100 |   5.800058
          | 
    Total |   13.69894
----------------------

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. *Household type
. use "${r_input}\bk_4.dta",clear

. 
. bysort ID: gen hhsize_m = _N //manually calculate household size

. sum hhsize_m [aw = hhwt],de

                          hhsize_m
-------------------------------------------------------------
      Percentiles      Smallest
 1%            1              1
 5%            2              1
10%            3              1       Obs             464,960
25%            4              1       Sum of Wgt.  1.1090e+09

50%            5                      Mean           5.533389
                        Largest       Std. Dev.      2.536773
75%            7             39
90%            9             39       Variance       6.435218
95%           10             39       Skewness       1.558471
99%           14             39       Kurtosis       8.307986

. 
. mdesc B4_v05

    Variable    |     Missing          Total     Percent Missing
----------------+-----------------------------------------------
         B4_v05 |           1        464,960           0.00
----------------+-----------------------------------------------

. drop if mi(B4_v05)
(1 observation deleted)

. gen adult = (B4_v05 >= 18)

. 
. gen n = 1

. collapse (sum) n (mean) hhsize_m (mean) hhwt (mean) B1_v05,by(ID adult)

. reshape wide n,i(ID) j(adult)
(note: j = 0 1)

Data                               long   ->   wide
-----------------------------------------------------------------------------
Number of obs.                   172416   ->  101662
Number of variables                   6   ->       6
j variable (2 values)             adult   ->   (dropped)
xij variables:
                                      n   ->   n0 n1
-----------------------------------------------------------------------------

. 
. foreach var in n0 n1 {
  2. replace `var' = 0 if mi(`var')
  3. }
(30,369 real changes made)
(539 real changes made)

. 
. rename (n0 n1 B1_v05) (n_child n_adult sector)

. 
. save "${r_output}\household_type.dta",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS68\Data Output Files\household_type.dta saved

. 
. 
. *use kmeans kmedians to get the clusters of household type： adult and children
. use "${r_output}\household_type.dta",clear

. keep if sector == 2
(59,695 observations deleted)

. //only child:0,1,2,>=3
. cluster kmedians n_child, k(4) start(firstk)
cluster name: _clus_1

. tab _clus_1 [aw = hhwt]

    _clus_1 |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 | 15,607.918       37.19       37.19
          2 |9,987.24797       23.80       60.99
          3 | 9,868.5981       23.52       84.50
          4 | 6,503.2355       15.50      100.00
------------+-----------------------------------
      Total |     41,967      100.00

. table _clus_1 [aw = hhwt],c(p50 n_adult p50 n_child)

--------------------------------------
  _clus_1 | med(n_adult)  med(n_child)
----------+---------------------------
        1 |            2             0
        2 |            3             1
        3 |            2             2
        4 |            2             3
--------------------------------------

. table _clus_1 [aw = hhwt],c(min n_adult max n_adult min n_child  max n_child) 

------------------------------------------------------------------
  _clus_1 | min(n_adult)  max(n_adult)  min(n_child)  max(n_child)
----------+-------------------------------------------------------
        1 |            1            14             0             0
        2 |            0            14             1             1
        3 |            0            13             2             2
        4 |            0            18             3            13
------------------------------------------------------------------

. 
. //only adult: <=1,2,3,4,>=5
. cluster kmedians n_adult, k(5) start(firstk)
cluster name: _clus_2

. tab _clus_2 [aw = hhwt]

    _clus_2 |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 | 5,293.3768       12.61       12.61
          2 | 6,331.5163       15.09       27.70
          3 | 7,909.9614       18.85       46.55
          4 |16,313.3614       38.87       85.42
          5 | 6,118.7842       14.58      100.00
------------+-----------------------------------
      Total |     41,967      100.00

. table _clus_2 [aw = hhwt],c(p50 n_adult p50 n_child)

--------------------------------------
  _clus_2 | med(n_adult)  med(n_child)
----------+---------------------------
        1 |            5             1
        2 |            1             0
        3 |            3             1
        4 |            2             2
        5 |            4             1
--------------------------------------

. table _clus_2 [aw = hhwt],c(min n_adult max n_adult min n_child  max n_child) 

------------------------------------------------------------------
  _clus_2 | min(n_adult)  max(n_adult)  min(n_child)  max(n_child)
----------+-------------------------------------------------------
        1 |            5            18             0            13
        2 |            0             1             0             6
        3 |            3             3             0             8
        4 |            2             2             0            12
        5 |            4             4             0             8
------------------------------------------------------------------

. 
. //adult and child:
. foreach var in adult child {
  2. tostring(n_`var'),gen(n_`var'_txt)
  3. }
n_adult_txt generated as str2
n_child_txt generated as str2

. 
. gen adult_child = n_adult_txt + "_" + n_child_txt

. tab adult_child [aw = hhwt],sort

adult_child |      Freq.     Percent        Cum.
------------+-----------------------------------
        2_2 | 5,449.6634       12.99       12.99
        1_0 | 4,782.3041       11.40       24.38
        2_0 | 4,128.7808        9.84       34.22
        2_1 | 3,657.6891        8.72       42.93
        3_0 |   2,762.08        6.58       49.52
        4_0 | 2,308.4719        5.50       55.02
        3_1 | 2,234.0815        5.32       60.34
        2_3 | 2,110.6878        5.03       65.37
        3_2 | 1,830.6256        4.36       69.73
        4_1 | 1,751.2672        4.17       73.90
        4_2 | 1,287.0816        3.07       76.97
        5_0 | 1,119.9203        2.67       79.64
        5_1 | 803.474366        1.91       81.55
        0_1 | 761.367252        1.81       83.37
        3_3 | 728.259591        1.74       85.10
        2_4 | 619.953539        1.48       86.58
        5_2 | 505.906673        1.21       87.79
        4_3 |484.4832102        1.15       88.94
        6_1 | 354.434143        0.84       89.79
        6_0 | 346.162051        0.82       90.61
        6_2 | 307.018929        0.73       91.34
        1_2 | 284.923923        0.68       92.02
        1_1 | 280.244368        0.67       92.69
        5_3 | 248.697241        0.59       93.28
        3_4 | 245.716767        0.59       93.87
        2_5 | 242.658316        0.58       94.45
        6_3 | 225.897353        0.54       94.98
        4_4 | 183.434381        0.44       95.42
        6_4 |  152.31452        0.36       95.78
        1_3 |138.6028647        0.33       96.11
        7_2 | 115.970114        0.28       96.39
        7_0 | 114.804398        0.27       96.66
        5_4 | 104.258925        0.25       96.91
        7_3 |  97.525012        0.23       97.14
        7_1 | 96.6262515        0.23       97.38
        5_5 | 88.6243553        0.21       97.59
        3_5 |71.47392592        0.17       97.76
        2_6 | 70.0591406        0.17       97.92
        7_4 |65.85599987        0.16       98.08
        6_5 |53.98100004        0.13       98.21
        1_4 | 49.1671339        0.12       98.33
        4_6 | 48.7692616        0.12       98.44
        4_5 | 43.8246148        0.10       98.55
        8_3 | 38.3775185        0.09       98.64
        8_4 |37.64034732        0.09       98.73
        8_2 | 34.8536521        0.08       98.81
        8_0 | 31.5851748        0.08       98.89
        7_5 | 29.1108787        0.07       98.96
        8_1 | 27.2180872        0.06       99.02
        3_6 | 24.2301804        0.06       99.08
        6_6 | 23.0908795        0.06       99.13
        9_2 | 22.6055914        0.05       99.19
        2_7 | 21.0709287        0.05       99.24
        8_5 | 20.4138852        0.05       99.29
        0_2 | 16.9077597        0.04       99.33
        5_6 | 14.3429174        0.03       99.36
        9_1 | 13.8599733        0.03       99.39
        1_5 | 13.6460284        0.03       99.43
        2_8 | 12.7948004        0.03       99.46
       10_4 | 11.2017202        0.03       99.48
        9_5 |  11.076256        0.03       99.51
       10_2 | 10.3695391        0.02       99.53
        9_7 | 9.76059184        0.02       99.56
       10_5 | 9.55273308        0.02       99.58
        9_3 | 9.42450332        0.02       99.60
        9_4 | 8.85005568        0.02       99.62
        5_8 | 8.63713799        0.02       99.64
        8_6 |  8.1537005        0.02       99.66
        3_7 | 7.67440716        0.02       99.68
        9_6 |7.133050955        0.02       99.70
        4_7 | 7.10931266        0.02       99.72
        6_7 |6.854293741        0.02       99.73
        9_0 | 6.71407959        0.02       99.75
        8_7 | 6.70520391        0.02       99.76
        7_6 |  6.6705594        0.02       99.78
        7_8 | 6.00186404        0.01       99.79
       10_3 | 5.85976161        0.01       99.81
        3_8 | 5.81943336        0.01       99.82
       10_7 |  5.4498806        0.01       99.84
        6_9 | 5.13088904        0.01       99.85
        4_8 | 4.34266536        0.01       99.86
       10_1 | 4.08596741        0.01       99.87
       11_4 | 3.89458585        0.01       99.88
       10_6 |  3.3817987        0.01       99.89
        8_9 | 3.36392928        0.01       99.89
        0_3 |3.351156203        0.01       99.90
       11_0 |  3.2726643        0.01       99.91
       10_0 | 3.26461742        0.01       99.92
        8_8 | 3.17422418        0.01       99.92
       12_4 | 2.95078927        0.01       99.93
        9_8 | 2.70404255        0.01       99.94
       12_5 | 2.61476516        0.01       99.94
       12_2 |  2.4842046        0.01       99.95
        5_7 | 2.35577377        0.01       99.96
       11_1 | 1.92568438        0.00       99.96
       8_10 | 1.67495715        0.00       99.96
       9_13 |  1.5789311        0.00       99.97
        7_7 |1.467012474        0.00       99.97
       11_3 | 1.24552222        0.00       99.97
      10_11 | .999891347        0.00       99.98
        1_6 | .997007883        0.00       99.98
      14_13 | .935046941        0.00       99.98
       10_9 | .910369856        0.00       99.98
       5_11 | .838551492        0.00       99.99
        6_8 |.7178483583        0.00       99.99
       11_8 |  .66993461        0.00       99.99
        9_9 | .624437544        0.00       99.99
       14_1 |.5938594172        0.00       99.99
       14_0 | .558251993        0.00       99.99
       17_4 | .486835972        0.00       99.99
       14_4 | .392263738        0.00       99.99
       13_1 | .380214871        0.00      100.00
        7_9 | .354902084        0.00      100.00
       8_11 | .324222028        0.00      100.00
       12_3 | .203250665        0.00      100.00
       11_2 | .172605481        0.00      100.00
       8_12 | .151415375        0.00      100.00
       12_9 | .144575531        0.00      100.00
       11_6 | .124726571        0.00      100.00
       13_5 | .102731778        0.00      100.00
      10_10 | .055523441        0.00      100.00
      10_12 | .054919926        0.00      100.00
       13_2 | .014484376        0.00      100.00
      18_13 | .010058594        0.00      100.00
        0_4 | .004694011        0.00      100.00
       2_12 | .003486979        0.00      100.00
------------+-----------------------------------
      Total |     41,967      100.00

. 
. cluster kmedians n_child n_adult, k(6) start(firstk)
cluster name: _clus_3

. tab _clus_3 [aw = hhwt]

    _clus_3 |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 | 5,448.3824       12.98       12.98
          2 | 5,823.9157       13.88       26.86
          3 |9,124.94232       21.74       48.60
          4 | 11,948.292       28.47       77.07
          5 | 3,657.6891        8.72       85.79
          6 | 5,963.7785       14.21      100.00
------------+-----------------------------------
      Total |     41,967      100.00

. table _clus_3 [aw = hhwt],c(p50 n_adult p50 n_child )

--------------------------------------
  _clus_3 | med(n_adult)  med(n_child)
----------+---------------------------
        1 |            5             0
        2 |            1             0
        3 |            3             0
        4 |            2             2
        5 |            2             1
        6 |            4             2
--------------------------------------

. table _clus_3 [aw = hhwt],c(min n_adult max n_adult min n_child  max n_child) 

------------------------------------------------------------------
  _clus_3 | min(n_adult)  max(n_adult)  min(n_child)  max(n_child)
----------+-------------------------------------------------------
        1 |            4            17             0             5
        2 |            0             1             0             1
        3 |            2             3             0             1
        4 |            0             3             2            12
        5 |            2             2             1             1
        6 |            4            18             1            13
------------------------------------------------------------------

. 
. /*
> adult_child == "2_2" //tow adults with two children (12.99% urban hh.)
> adult_child == "1_0"  //single adult without child (11.40% urban hh.)
> adult_child == "2_0" //two adults only (9.84%)
> adult_child == "2_1"  //two adults with one children (8.72% urban hh.)
> */
. 
. gen hh_type = adult_child //only for urban, please note stats are not representative at hh_type level. 

. replace hh_type = "other" if !inlist(adult_child, "2_2","1_0","2_0","2_1")
(25,393 real changes made)

. tab hh_type [aw = hhwt] //top 4 types of households cover 42% India urban households. 

    hh_type |      Freq.     Percent        Cum.
------------+-----------------------------------
        1_0 | 4,782.3041       11.40       11.40
        2_0 | 4,128.7808        9.84       21.23
        2_1 | 3,657.6891        8.72       29.95
        2_2 | 5,449.6634       12.99       42.93
      other | 23,948.563       57.07      100.00
------------+-----------------------------------
      Total |     41,967      100.00

. 
. 
. *use kmeans kmedians to get the clusters of household type: total household number
. use "${r_output}\household_type.dta",clear

. keep if sector == 2
(59,695 observations deleted)

. 
. cluster kmedians hhsize_m, k(4) start(firstk)
cluster name: _clus_1

. tab _clus_1 [aw = hhwt]

    _clus_1 |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 | 15,158.527       36.12       36.12
          2 | 9,969.6043       23.76       59.88
          3 |6,708.04421       15.98       75.86
          4 | 10,130.824       24.14      100.00
------------+-----------------------------------
      Total |     41,967      100.00

. table _clus_1 [aw = hhwt],c(p50 hhsize_m min hhsize_m max hhsize_m)

-------------------------------------------------------
  _clus_1 | med(hhsize_m)  min(hhsize_m)  max(hhsize_m)
----------+--------------------------------------------
        1 |             6              5             31
        2 |             1              1              2
        3 |             3              3              3
        4 |             4              4              4
-------------------------------------------------------

. 
. gen hh_type = ""
(41,967 missing values generated)

. replace hh_type = "5-31" if _clus_1 == 1 // > 4 household member (36.12% urban hh.)
variable hh_type was str1 now str4
(16,967 real changes made)

. replace hh_type = "4" if _clus_1 == 4 //4 household member (24.14% urban hh.)
(9,854 real changes made)

. replace hh_type = "1-2" if _clus_1 == 2 //1-2 household member (23.76%)
(8,544 real changes made)

. replace hh_type = "3" if _clus_1 == 3 //3 household member (15.98% urban hh.)
(6,602 real changes made)

. 
. tab hh_type [aw = hhwt] //top 4 types of households cover 63% India urban households. 

    hh_type |      Freq.     Percent        Cum.
------------+-----------------------------------
        1-2 | 9,969.6043       23.76       23.76
          3 |6,708.04421       15.98       39.74
          4 | 10,130.824       24.14       63.88
       5-31 | 15,158.527       36.12      100.00
------------+-----------------------------------
      Total |     41,967      100.00

. 
. *use the relationship to household head for household types. 
. /*
> B4_v03: Relation to household head
>            1 Self
>            2 Spouse of head
>            3 Married child
>            4 Spouse of married child
>            5 Unmarried child
>            6 Grandchild
>            7 Father/mother/father-in-law/mother-in-law
>            8 Brother/sister/brother-in-law/sister-in-law/other relatives
>            9 Servant/employees/other non-relatives
> 
> */
. /*
> gen hh_type = . //please note stats are not representative at hh_type level. 
> replace hh_type = 1 if hhsize_m == 1 //single person 
> replace hh_type = 2 if hhsize_m == 2 & n2 == 1 //couple only 
> replace hh_type = 3 if hhsize_m == 2 & n5 == 1 //sole parent with one child (unmarried)
> replace hh_type = 4 if hhsize_m == 4 & n2 == 1 & n5 == 2 //couple with two children 
> */
. 
. rename ID hhid

. keep hhid hh_type

. 
. merge 1:1 hhid using "${r_output}\nss68_ria_master.dta"

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                            41,967  (_merge==3)
    -----------------------------------------

. keep if _merge == 3 
(0 observations deleted)

. 
end of do-file

. use "C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Raw Data & Dictionaries\NSS70_IHDS_Wealth_to_Inc.dta", clear

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. clear 

. set more off 

. 
. if "`c(username)'" == "wb308830" local pc = 0

. if "`c(username)'" != "wb308830" local pc = 1

. if `pc' == 0 global root "C:\Users\wb308830\OneDrive - WBG\Documents\TN\Data\NSS 70"

. if `pc' != 0 global root "C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70"

. if `pc' != 0 global script "C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\Housing_git\nss\Survey_NSS"

. 
. di "$root"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70

. global r_input "${root}\Raw Data & Dictionaries"

. di "${r_input}"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Raw Data & Dictionaries

. global r_output "${root}\Data Output Files"

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. ***********Combine wealth to income**********
. use "${r_output}\NSS70_All.dta",clear

. 
end of do-file

. help xtile

. use "C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Raw Data & Dictionaries\NSS70_IHDS_Wealth_to_Inc.dta"

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. 
. ***********Combine wealth to income**********
. use "${r_output}\NSS70_All.dta",clear

. keep if urban == 1 //only focusing on urban 
(62,135 observations deleted)

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. ***********Combine wealth to income**********
. use "${r_output}\NSS70_All.dta",clear

. keep if urban == 1 //only focusing on urban 
(62,135 observations deleted)

. 
. xtile wealth_100 = wealth [aw = hhwgt],n(100)

. 
. merge m:1 wealth_100 using "${r_input}\NSS70_IHDS_Wealth_to_Inc.dta"

    Result                           # of obs.
    -----------------------------------------
    not matched                             3
        from master                         0  (_merge==1)
        from using                          3  (_merge==2)

    matched                            48,665  (_merge==3)
    -----------------------------------------

. 
end of do-file

. sum alpha_a1_u_ip,de

                        alpha_a1_u_ip
-------------------------------------------------------------
      Percentiles      Smallest
 1%     .2235163       .2235163
 5%      .372012       .2235163
10%     2.122248       .2235163       Obs              48,668
25%     5.071917       .2235163       Sum of Wgt.      48,668

50%     7.910434                      Mean           7.838671
                        Largest       Std. Dev.       4.84567
75%     10.19729       37.94843
90%     12.53528       37.94843       Variance       23.48052
95%     14.25759       37.94843       Skewness       2.415138
99%     37.94843       37.94843       Kurtosis       16.87996

. br if +merge == 2
+merge invalid name
r(198);

. br if _merge == 2

. tab _merge wealth_100
too many values
r(134);

. tab wealth_100 if _merge == 3

        100 |
  quantiles |
 of wealth  |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |        766        1.57        1.57
          2 |        660        1.36        2.93
          3 |      1,145        2.35        5.28
          7 |        202        0.42        5.70
          8 |        344        0.71        6.41
          9 |        214        0.44        6.84
         10 |        292        0.60        7.44
         11 |        325        0.67        8.11
         12 |        313        0.64        8.76
         13 |        174        0.36        9.11
         14 |        316        0.65        9.76
         15 |        301        0.62       10.38
         16 |        278        0.57       10.95
         17 |        290        0.60       11.55
         18 |        313        0.64       12.19
         19 |        444        0.91       13.10
         20 |        326        0.67       13.77
         21 |        372        0.76       14.54
         22 |        386        0.79       15.33
         23 |        283        0.58       15.91
         24 |        421        0.87       16.78
         25 |        403        0.83       17.61
         26 |        519        1.07       18.67
         27 |        480        0.99       19.66
         28 |        474        0.97       20.63
         29 |        493        1.01       21.65
         30 |        528        1.08       22.73
         31 |        577        1.19       23.92
         32 |        522        1.07       24.99
         33 |        578        1.19       26.18
         34 |        594        1.22       27.40
         35 |        565        1.16       28.56
         36 |        540        1.11       29.67
         37 |        644        1.32       30.99
         38 |        489        1.00       32.00
         39 |        599        1.23       33.23
         40 |        506        1.04       34.27
         41 |        539        1.11       35.37
         42 |        529        1.09       36.46
         43 |        490        1.01       37.47
         44 |        485        1.00       38.47
         45 |        517        1.06       39.53
         46 |        503        1.03       40.56
         47 |        517        1.06       41.62
         48 |        575        1.18       42.80
         49 |        551        1.13       43.94
         50 |        584        1.20       45.14
         51 |        555        1.14       46.28
         52 |        596        1.22       47.50
         53 |        567        1.17       48.67
         54 |        573        1.18       49.84
         55 |        569        1.17       51.01
         56 |        637        1.31       52.32
         57 |        594        1.22       53.54
         58 |        653        1.34       54.89
         59 |        576        1.18       56.07
         60 |        589        1.21       57.28
         61 |        477        0.98       58.26
         62 |        518        1.06       59.32
         63 |        523        1.07       60.40
         64 |        617        1.27       61.67
         65 |        553        1.14       62.80
         66 |        571        1.17       63.98
         67 |        518        1.06       65.04
         68 |        602        1.24       66.28
         69 |        577        1.19       67.46
         70 |        433        0.89       68.35
         71 |        581        1.19       69.55
         72 |        517        1.06       70.61
         73 |        596        1.22       71.83
         74 |        575        1.18       73.02
         75 |        506        1.04       74.06
         76 |        498        1.02       75.08
         77 |        603        1.24       76.32
         78 |        565        1.16       77.48
         79 |        526        1.08       78.56
         80 |        448        0.92       79.48
         81 |        554        1.14       80.62
         82 |        575        1.18       81.80
         83 |        531        1.09       82.89
         84 |        531        1.09       83.98
         85 |        478        0.98       84.96
         86 |        447        0.92       85.88
         87 |        500        1.03       86.91
         88 |        535        1.10       88.01
         89 |        494        1.02       89.02
         90 |        442        0.91       89.93
         91 |        462        0.95       90.88
         92 |        458        0.94       91.82
         93 |        425        0.87       92.70
         94 |        501        1.03       93.73
         95 |        502        1.03       94.76
         96 |        514        1.06       95.81
         97 |        487        1.00       96.81
         98 |        534        1.10       97.91
         99 |        493        1.01       98.93
        100 |        523        1.07      100.00
------------+-----------------------------------
      Total |     48,665      100.00

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. use "${r_output}\NSS70_All.dta",clear

. 
. keep if urban == 1 //only focusing on urban 
(62,135 observations deleted)

. 
. xtile wealth_100 = wealth [aw = hhwgt],n(100) //household weight, wealth is measured at household level.

. 
end of do-file

. tab wealth_100

        100 |
  quantiles |
 of wealth  |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |        766        1.57        1.57
          2 |        660        1.36        2.93
          3 |      1,145        2.35        5.28
          7 |        202        0.42        5.70
          8 |        344        0.71        6.41
          9 |        214        0.44        6.84
         10 |        292        0.60        7.44
         11 |        325        0.67        8.11
         12 |        313        0.64        8.76
         13 |        174        0.36        9.11
         14 |        316        0.65        9.76
         15 |        301        0.62       10.38
         16 |        278        0.57       10.95
         17 |        290        0.60       11.55
         18 |        313        0.64       12.19
         19 |        444        0.91       13.10
         20 |        326        0.67       13.77
         21 |        372        0.76       14.54
         22 |        386        0.79       15.33
         23 |        283        0.58       15.91
         24 |        421        0.87       16.78
         25 |        403        0.83       17.61
         26 |        519        1.07       18.67
         27 |        480        0.99       19.66
         28 |        474        0.97       20.63
         29 |        493        1.01       21.65
         30 |        528        1.08       22.73
         31 |        577        1.19       23.92
         32 |        522        1.07       24.99
         33 |        578        1.19       26.18
         34 |        594        1.22       27.40
         35 |        565        1.16       28.56
         36 |        540        1.11       29.67
         37 |        644        1.32       30.99
         38 |        489        1.00       32.00
         39 |        599        1.23       33.23
         40 |        506        1.04       34.27
         41 |        539        1.11       35.37
         42 |        529        1.09       36.46
         43 |        490        1.01       37.47
         44 |        485        1.00       38.47
         45 |        517        1.06       39.53
         46 |        503        1.03       40.56
         47 |        517        1.06       41.62
         48 |        575        1.18       42.80
         49 |        551        1.13       43.94
         50 |        584        1.20       45.14
         51 |        555        1.14       46.28
         52 |        596        1.22       47.50
         53 |        567        1.17       48.67
         54 |        573        1.18       49.84
         55 |        569        1.17       51.01
         56 |        637        1.31       52.32
         57 |        594        1.22       53.54
         58 |        653        1.34       54.89
         59 |        576        1.18       56.07
         60 |        589        1.21       57.28
         61 |        477        0.98       58.26
         62 |        518        1.06       59.32
         63 |        523        1.07       60.40
         64 |        617        1.27       61.67
         65 |        553        1.14       62.80
         66 |        571        1.17       63.98
         67 |        518        1.06       65.04
         68 |        602        1.24       66.28
         69 |        577        1.19       67.46
         70 |        433        0.89       68.35
         71 |        581        1.19       69.55
         72 |        517        1.06       70.61
         73 |        596        1.22       71.83
         74 |        575        1.18       73.02
         75 |        506        1.04       74.06
         76 |        498        1.02       75.08
         77 |        603        1.24       76.32
         78 |        565        1.16       77.48
         79 |        526        1.08       78.56
         80 |        448        0.92       79.48
         81 |        554        1.14       80.62
         82 |        575        1.18       81.80
         83 |        531        1.09       82.89
         84 |        531        1.09       83.98
         85 |        478        0.98       84.96
         86 |        447        0.92       85.88
         87 |        500        1.03       86.91
         88 |        535        1.10       88.01
         89 |        494        1.02       89.02
         90 |        442        0.91       89.93
         91 |        462        0.95       90.88
         92 |        458        0.94       91.82
         93 |        425        0.87       92.70
         94 |        501        1.03       93.73
         95 |        502        1.03       94.76
         96 |        514        1.06       95.81
         97 |        487        1.00       96.81
         98 |        534        1.10       97.91
         99 |        493        1.01       98.93
        100 |        523        1.07      100.00
------------+-----------------------------------
      Total |     48,665      100.00

. tab wealth_100 [aw = hhwgt]

        100 |
  quantiles |
 of wealth  |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 | 487.337648        1.00        1.00
          2 | 487.034087        1.00        2.00
          3 | 2,057.6994        4.23        6.23
          7 | 408.239314        0.84        7.07
          8 | 574.610238        1.18        8.25
          9 |  375.65974        0.77        9.02
         10 | 481.102115        0.99       10.01
         11 |533.9594391        1.10       11.11
         12 | 525.394814        1.08       12.19
         13 | 399.333603        0.82       13.01
         14 | 518.095456        1.06       14.07
         15 | 458.451048        0.94       15.01
         16 |502.2148099        1.03       16.05
         17 | 475.583556        0.98       17.02
         18 | 476.466956        0.98       18.00
         19 | 509.882148        1.05       19.05
         20 | 462.072953        0.95       20.00
         21 | 495.143658        1.02       21.02
         22 | 536.488629        1.10       22.12
         23 | 428.819777        0.88       23.00
         24 | 487.052519        1.00       24.00
         25 | 486.125434        1.00       25.00
         26 | 487.329953        1.00       26.00
         27 |489.6371339        1.01       27.01
         28 | 494.584175        1.02       28.02
         29 | 479.793522        0.99       29.01
         30 | 482.419249        0.99       30.00
         31 | 485.741169        1.00       31.00
         32 | 487.904914        1.00       32.00
         33 |  498.72479        1.02       33.03
         34 | 489.534736        1.01       34.03
         35 | 476.565412        0.98       35.01
         36 | 493.319452        1.01       36.03
         37 |474.1623457        0.97       37.00
         38 | 487.276003        1.00       38.00
         39 | 486.643367        1.00       39.00
         40 |  485.98707        1.00       40.00
         41 | 491.261022        1.01       41.01
         42 | 491.602036        1.01       42.02
         43 | 477.656066        0.98       43.00
         44 |  493.57458        1.01       44.02
         45 | 501.476658        1.03       45.05
         46 | 475.259774        0.98       46.02
         47 |   488.5874        1.00       47.03
         48 | 476.257843        0.98       48.01
         49 | 484.839162        1.00       49.00
         50 | 485.904995        1.00       50.00
         51 | 486.933109        1.00       51.00
         52 | 486.405172        1.00       52.00
         53 | 491.419522        1.01       53.01
         54 | 481.877996        0.99       54.00
         55 | 488.508899        1.00       55.00
         56 |  484.66145        1.00       56.00
         57 | 488.473629        1.00       57.00
         58 | 486.360537        1.00       58.00
         59 | 489.961095        1.01       59.01
         60 | 481.877292        0.99       60.00
         61 | 491.481725        1.01       61.01
         62 | 504.112566        1.04       62.05
         63 | 468.384541        0.96       63.01
         64 | 482.549895        0.99       64.00
         65 | 488.756247        1.00       65.00
         66 | 484.514839        1.00       66.00
         67 | 490.331732        1.01       67.01
         68 | 486.693302        1.00       68.01
         69 | 484.080966        0.99       69.00
         70 |486.0587154        1.00       70.00
         71 | 489.121043        1.01       71.01
         72 |484.3707791        1.00       72.00
         73 |486.0933678        1.00       73.00
         74 | 486.934776        1.00       74.00
         75 | 487.210263        1.00       75.00
         76 | 486.323343        1.00       76.00
         77 | 486.192503        1.00       77.00
         78 | 486.202512        1.00       78.00
         79 |486.6757625        1.00       79.00
         80 |488.6880694        1.00       80.00
         81 | 487.991919        1.00       81.01
         82 | 483.934143        0.99       82.00
         83 | 486.233354        1.00       83.00
         84 |486.4080301        1.00       84.00
         85 | 487.796864        1.00       85.00
         86 | 488.749472        1.00       86.01
         87 | 484.238225        1.00       87.00
         88 | 486.327179        1.00       88.00
         89 | 486.797852        1.00       89.00
         90 | 486.897463        1.00       90.00
         91 | 492.729468        1.01       91.01
         92 | 489.964552        1.01       92.02
         93 | 477.541451        0.98       93.00
         94 | 486.673781        1.00       94.00
         95 | 485.910612        1.00       95.00
         96 | 486.658755        1.00       96.00
         97 | 486.500617        1.00       97.00
         98 | 486.366466        1.00       98.00
         99 | 487.172375        1.00       99.00
        100 | 486.041589        1.00      100.00
------------+-----------------------------------
      Total |     48,665      100.00

. mdesc wealth_100

    Variable    |     Missing          Total     Percent Missing
----------------+-----------------------------------------------
     wealth_100 |           0         48,665           0.00
----------------+-----------------------------------------------

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. use "${r_output}\NSS70_All.dta",clear

. 
. keep if urban == 1 //only focusing on urban 
(62,135 observations deleted)

. 
. replace wealth = 0 if wealth = . 
invalid syntax
r(198);

end of do-file

r(198);

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. use "${r_output}\NSS70_All.dta",clear

. 
. keep if urban == 1 //only focusing on urban 
(62,135 observations deleted)

. 
. replace wealth = 0 if wealth == . 
(0 real changes made)

. 
. xtile wealth_100 = wealth [aw = hhwgt],n(100) //household weight, wealth is measured at household level.

. tab wealth_100

        100 |
  quantiles |
 of wealth  |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |        766        1.57        1.57
          2 |        660        1.36        2.93
          3 |      1,145        2.35        5.28
          7 |        202        0.42        5.70
          8 |        344        0.71        6.41
          9 |        214        0.44        6.84
         10 |        292        0.60        7.44
         11 |        325        0.67        8.11
         12 |        313        0.64        8.76
         13 |        174        0.36        9.11
         14 |        316        0.65        9.76
         15 |        301        0.62       10.38
         16 |        278        0.57       10.95
         17 |        290        0.60       11.55
         18 |        313        0.64       12.19
         19 |        444        0.91       13.10
         20 |        326        0.67       13.77
         21 |        372        0.76       14.54
         22 |        386        0.79       15.33
         23 |        283        0.58       15.91
         24 |        421        0.87       16.78
         25 |        403        0.83       17.61
         26 |        519        1.07       18.67
         27 |        480        0.99       19.66
         28 |        474        0.97       20.63
         29 |        493        1.01       21.65
         30 |        528        1.08       22.73
         31 |        577        1.19       23.92
         32 |        522        1.07       24.99
         33 |        578        1.19       26.18
         34 |        594        1.22       27.40
         35 |        565        1.16       28.56
         36 |        540        1.11       29.67
         37 |        644        1.32       30.99
         38 |        489        1.00       32.00
         39 |        599        1.23       33.23
         40 |        506        1.04       34.27
         41 |        539        1.11       35.37
         42 |        529        1.09       36.46
         43 |        490        1.01       37.47
         44 |        485        1.00       38.47
         45 |        517        1.06       39.53
         46 |        503        1.03       40.56
         47 |        517        1.06       41.62
         48 |        575        1.18       42.80
         49 |        551        1.13       43.94
         50 |        584        1.20       45.14
         51 |        555        1.14       46.28
         52 |        596        1.22       47.50
         53 |        567        1.17       48.67
         54 |        573        1.18       49.84
         55 |        569        1.17       51.01
         56 |        637        1.31       52.32
         57 |        594        1.22       53.54
         58 |        653        1.34       54.89
         59 |        576        1.18       56.07
         60 |        589        1.21       57.28
         61 |        477        0.98       58.26
         62 |        518        1.06       59.32
         63 |        523        1.07       60.40
         64 |        617        1.27       61.67
         65 |        553        1.14       62.80
         66 |        571        1.17       63.98
         67 |        518        1.06       65.04
         68 |        602        1.24       66.28
         69 |        577        1.19       67.46
         70 |        433        0.89       68.35
         71 |        581        1.19       69.55
         72 |        517        1.06       70.61
         73 |        596        1.22       71.83
         74 |        575        1.18       73.02
         75 |        506        1.04       74.06
         76 |        498        1.02       75.08
         77 |        603        1.24       76.32
         78 |        565        1.16       77.48
         79 |        526        1.08       78.56
         80 |        448        0.92       79.48
         81 |        554        1.14       80.62
         82 |        575        1.18       81.80
         83 |        531        1.09       82.89
         84 |        531        1.09       83.98
         85 |        478        0.98       84.96
         86 |        447        0.92       85.88
         87 |        500        1.03       86.91
         88 |        535        1.10       88.01
         89 |        494        1.02       89.02
         90 |        442        0.91       89.93
         91 |        462        0.95       90.88
         92 |        458        0.94       91.82
         93 |        425        0.87       92.70
         94 |        501        1.03       93.73
         95 |        502        1.03       94.76
         96 |        514        1.06       95.81
         97 |        487        1.00       96.81
         98 |        534        1.10       97.91
         99 |        493        1.01       98.93
        100 |        523        1.07      100.00
------------+-----------------------------------
      Total |     48,665      100.00

. 
end of do-file

. help xtile

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. use "${r_output}\NSS70_All.dta",clear

. 
. keep if urban == 1 //only focusing on urban 
(62,135 observations deleted)

. 
. replace wealth = 0 if wealth == . 
(0 real changes made)

. 
. pctile wealth_100 = wealth [aw = hhwgt] //household weight, wealth is measured at household level.

. tab wealth_100

percentiles |
 of wealth  |      Freq.     Percent        Cum.
------------+-----------------------------------
     605835 |          1      100.00      100.00
------------+-----------------------------------
      Total |          1      100.00

. 
end of do-file

. mdesc hhwgt

    Variable    |     Missing          Total     Percent Missing
----------------+-----------------------------------------------
          hhwgt |           0         48,665           0.00
----------------+-----------------------------------------------

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. use "${r_output}\NSS70_All.dta",clear

. 
. keep if urban == 1 //only focusing on urban 
(62,135 observations deleted)

. 
. replace wealth = 0 if wealth == . 
(0 real changes made)

. 
. xtile wealth_100 = wealth [aw = hhwgt],n(100) //household weight, wealth is measured at household level.

. tab wealth_100

        100 |
  quantiles |
 of wealth  |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |        766        1.57        1.57
          2 |        660        1.36        2.93
          3 |      1,145        2.35        5.28
          7 |        202        0.42        5.70
          8 |        344        0.71        6.41
          9 |        214        0.44        6.84
         10 |        292        0.60        7.44
         11 |        325        0.67        8.11
         12 |        313        0.64        8.76
         13 |        174        0.36        9.11
         14 |        316        0.65        9.76
         15 |        301        0.62       10.38
         16 |        278        0.57       10.95
         17 |        290        0.60       11.55
         18 |        313        0.64       12.19
         19 |        444        0.91       13.10
         20 |        326        0.67       13.77
         21 |        372        0.76       14.54
         22 |        386        0.79       15.33
         23 |        283        0.58       15.91
         24 |        421        0.87       16.78
         25 |        403        0.83       17.61
         26 |        519        1.07       18.67
         27 |        480        0.99       19.66
         28 |        474        0.97       20.63
         29 |        493        1.01       21.65
         30 |        528        1.08       22.73
         31 |        577        1.19       23.92
         32 |        522        1.07       24.99
         33 |        578        1.19       26.18
         34 |        594        1.22       27.40
         35 |        565        1.16       28.56
         36 |        540        1.11       29.67
         37 |        644        1.32       30.99
         38 |        489        1.00       32.00
         39 |        599        1.23       33.23
         40 |        506        1.04       34.27
         41 |        539        1.11       35.37
         42 |        529        1.09       36.46
         43 |        490        1.01       37.47
         44 |        485        1.00       38.47
         45 |        517        1.06       39.53
         46 |        503        1.03       40.56
         47 |        517        1.06       41.62
         48 |        575        1.18       42.80
         49 |        551        1.13       43.94
         50 |        584        1.20       45.14
         51 |        555        1.14       46.28
         52 |        596        1.22       47.50
         53 |        567        1.17       48.67
         54 |        573        1.18       49.84
         55 |        569        1.17       51.01
         56 |        637        1.31       52.32
         57 |        594        1.22       53.54
         58 |        653        1.34       54.89
         59 |        576        1.18       56.07
         60 |        589        1.21       57.28
         61 |        477        0.98       58.26
         62 |        518        1.06       59.32
         63 |        523        1.07       60.40
         64 |        617        1.27       61.67
         65 |        553        1.14       62.80
         66 |        571        1.17       63.98
         67 |        518        1.06       65.04
         68 |        602        1.24       66.28
         69 |        577        1.19       67.46
         70 |        433        0.89       68.35
         71 |        581        1.19       69.55
         72 |        517        1.06       70.61
         73 |        596        1.22       71.83
         74 |        575        1.18       73.02
         75 |        506        1.04       74.06
         76 |        498        1.02       75.08
         77 |        603        1.24       76.32
         78 |        565        1.16       77.48
         79 |        526        1.08       78.56
         80 |        448        0.92       79.48
         81 |        554        1.14       80.62
         82 |        575        1.18       81.80
         83 |        531        1.09       82.89
         84 |        531        1.09       83.98
         85 |        478        0.98       84.96
         86 |        447        0.92       85.88
         87 |        500        1.03       86.91
         88 |        535        1.10       88.01
         89 |        494        1.02       89.02
         90 |        442        0.91       89.93
         91 |        462        0.95       90.88
         92 |        458        0.94       91.82
         93 |        425        0.87       92.70
         94 |        501        1.03       93.73
         95 |        502        1.03       94.76
         96 |        514        1.06       95.81
         97 |        487        1.00       96.81
         98 |        534        1.10       97.91
         99 |        493        1.01       98.93
        100 |        523        1.07      100.00
------------+-----------------------------------
      Total |     48,665      100.00

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. merge m:1 wealth_100 using "${r_input}\NSS70_IHDS_Wealth_to_Inc.dta"

    Result                           # of obs.
    -----------------------------------------
    not matched                             3
        from master                         0  (_merge==1)
        from using                          3  (_merge==2)

    matched                            48,665  (_merge==3)
    -----------------------------------------

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. use "${r_output}\NSS70_All.dta",clear

. 
. keep if urban == 1 //only focusing on urban 
(62,135 observations deleted)

. 
. replace wealth = 0 if wealth == . 
(0 real changes made)

. 
. xtile wealth_100 = wealth [aw = hhwgt],n(10) //household weight, wealth is measured at household level.

. tab wealth_100

         10 |
  quantiles |
 of wealth  |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |      3,623        7.44        7.44
          2 |      3,080        6.33       13.77
          3 |      4,359        8.96       22.73
          4 |      5,614       11.54       34.27
          5 |      5,290       10.87       45.14
          6 |      5,909       12.14       57.28
          7 |      5,389       11.07       68.35
          8 |      5,415       11.13       79.48
          9 |      5,087       10.45       89.93
         10 |      4,899       10.07      100.00
------------+-----------------------------------
      Total |     48,665      100.00

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. use "${r_output}\NSS70_All.dta",clear

. 
. keep if urban == 1 //only focusing on urban 
(62,135 observations deleted)

. 
. replace wealth = 0 if wealth == . 
(0 real changes made)

. 
. xtile wealth_100 = wealth [aw = hhwgt],n(99) //household weight, wealth is measured at household level.

. tab wealth_100

         99 |
  quantiles |
 of wealth  |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |        769        1.58        1.58
          2 |        670        1.38        2.96
          3 |      1,132        2.33        5.28
          7 |        205        0.42        5.70
          8 |        341        0.70        6.41
          9 |        263        0.54        6.95
         10 |        287        0.59        7.54
         11 |        285        0.59        8.12
         12 |        309        0.63        8.76
         13 |        222        0.46        9.21
         14 |        300        0.62        9.83
         15 |        308        0.63       10.46
         16 |        332        0.68       11.14
         17 |        218        0.45       11.59
         18 |        367        0.75       12.35
         19 |        423        0.87       13.21
         20 |        361        0.74       13.96
         21 |        343        0.70       14.66
         22 |        380        0.78       15.44
         23 |        335        0.69       16.13
         24 |        411        0.84       16.98
         25 |        434        0.89       17.87
         26 |        526        1.08       18.95
         27 |        472        0.97       19.92
         28 |        460        0.95       20.86
         29 |        528        1.08       21.95
         30 |        550        1.13       23.08
         31 |        551        1.13       24.21
         32 |        562        1.15       25.37
         33 |        571        1.17       26.54
         34 |        601        1.23       27.77
         35 |        600        1.23       29.01
         36 |        548        1.13       30.13
         37 |        612        1.26       31.39
         38 |        512        1.05       32.44
         39 |        583        1.20       33.64
         40 |        542        1.11       34.75
         41 |        531        1.09       35.85
         42 |        498        1.02       36.87
         43 |        503        1.03       37.90
         44 |        494        1.02       38.92
         45 |        508        1.04       39.96
         46 |        543        1.12       41.08
         47 |        555        1.14       42.22
         48 |        568        1.17       43.38
         49 |        558        1.15       44.53
         50 |        592        1.22       45.75
         51 |        546        1.12       46.87
         52 |        671        1.38       48.25
         53 |        479        0.98       49.23
         54 |        614        1.26       50.49
         55 |        622        1.28       51.77
         56 |        635        1.30       53.08
         57 |        595        1.22       54.30
         58 |        592        1.22       55.52
         59 |        612        1.26       56.77
         60 |        487        1.00       57.77
         61 |        565        1.16       58.94
         62 |        499        1.03       59.96
         63 |        604        1.24       61.20
         64 |        603        1.24       62.44
         65 |        538        1.11       63.55
         66 |        547        1.12       64.67
         67 |        561        1.15       65.82
         68 |        626        1.29       67.11
         69 |        479        0.98       68.09
         70 |        519        1.07       69.16
         71 |        602        1.24       70.40
         72 |        554        1.14       71.54
         73 |        573        1.18       72.71
         74 |        528        1.08       73.80
         75 |        502        1.03       74.83
         76 |        574        1.18       76.01
         77 |        576        1.18       77.19
         78 |        555        1.14       78.33
         79 |        479        0.98       79.32
         80 |        546        1.12       80.44
         81 |        558        1.15       81.59
         82 |        533        1.10       82.68
         83 |        544        1.12       83.80
         84 |        494        1.02       84.81
         85 |        423        0.87       85.68
         86 |        532        1.09       86.78
         87 |        532        1.09       87.87
         88 |        504        1.04       88.91
         89 |        458        0.94       89.85
         90 |        484        0.99       90.84
         91 |        453        0.93       91.77
         92 |        427        0.88       92.65
         93 |        489        1.00       93.65
         94 |        505        1.04       94.69
         95 |        529        1.09       95.78
         96 |        491        1.01       96.79
         97 |        527        1.08       97.87
         98 |        509        1.05       98.92
         99 |        527        1.08      100.00
------------+-----------------------------------
      Total |     48,665      100.00

. 
end of do-file

. mdesc wealth

    Variable    |     Missing          Total     Percent Missing
----------------+-----------------------------------------------
         wealth |           0         48,665           0.00
----------------+-----------------------------------------------

. mdesc wealth hhwgt

    Variable    |     Missing          Total     Percent Missing
----------------+-----------------------------------------------
         wealth |           0         48,665           0.00
          hhwgt |           0         48,665           0.00
----------------+-----------------------------------------------

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. use "${r_output}\NSS70_All.dta",clear

. 
. keep if urban == 1 //only focusing on urban 
(62,135 observations deleted)

. 
. replace wealth = 0 if wealth == . 
(0 real changes made)

. 
. xtile wealth_100 = wealth [aw = hhwgt],nq(100) //household weight, wealth is measured at household level.

. tab wealth_100

        100 |
  quantiles |
 of wealth  |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |        766        1.57        1.57
          2 |        660        1.36        2.93
          3 |      1,145        2.35        5.28
          7 |        202        0.42        5.70
          8 |        344        0.71        6.41
          9 |        214        0.44        6.84
         10 |        292        0.60        7.44
         11 |        325        0.67        8.11
         12 |        313        0.64        8.76
         13 |        174        0.36        9.11
         14 |        316        0.65        9.76
         15 |        301        0.62       10.38
         16 |        278        0.57       10.95
         17 |        290        0.60       11.55
         18 |        313        0.64       12.19
         19 |        444        0.91       13.10
         20 |        326        0.67       13.77
         21 |        372        0.76       14.54
         22 |        386        0.79       15.33
         23 |        283        0.58       15.91
         24 |        421        0.87       16.78
         25 |        403        0.83       17.61
         26 |        519        1.07       18.67
         27 |        480        0.99       19.66
         28 |        474        0.97       20.63
         29 |        493        1.01       21.65
         30 |        528        1.08       22.73
         31 |        577        1.19       23.92
         32 |        522        1.07       24.99
         33 |        578        1.19       26.18
         34 |        594        1.22       27.40
         35 |        565        1.16       28.56
         36 |        540        1.11       29.67
         37 |        644        1.32       30.99
         38 |        489        1.00       32.00
         39 |        599        1.23       33.23
         40 |        506        1.04       34.27
         41 |        539        1.11       35.37
         42 |        529        1.09       36.46
         43 |        490        1.01       37.47
         44 |        485        1.00       38.47
         45 |        517        1.06       39.53
         46 |        503        1.03       40.56
         47 |        517        1.06       41.62
         48 |        575        1.18       42.80
         49 |        551        1.13       43.94
         50 |        584        1.20       45.14
         51 |        555        1.14       46.28
         52 |        596        1.22       47.50
         53 |        567        1.17       48.67
         54 |        573        1.18       49.84
         55 |        569        1.17       51.01
         56 |        637        1.31       52.32
         57 |        594        1.22       53.54
         58 |        653        1.34       54.89
         59 |        576        1.18       56.07
         60 |        589        1.21       57.28
         61 |        477        0.98       58.26
         62 |        518        1.06       59.32
         63 |        523        1.07       60.40
         64 |        617        1.27       61.67
         65 |        553        1.14       62.80
         66 |        571        1.17       63.98
         67 |        518        1.06       65.04
         68 |        602        1.24       66.28
         69 |        577        1.19       67.46
         70 |        433        0.89       68.35
         71 |        581        1.19       69.55
         72 |        517        1.06       70.61
         73 |        596        1.22       71.83
         74 |        575        1.18       73.02
         75 |        506        1.04       74.06
         76 |        498        1.02       75.08
         77 |        603        1.24       76.32
         78 |        565        1.16       77.48
         79 |        526        1.08       78.56
         80 |        448        0.92       79.48
         81 |        554        1.14       80.62
         82 |        575        1.18       81.80
         83 |        531        1.09       82.89
         84 |        531        1.09       83.98
         85 |        478        0.98       84.96
         86 |        447        0.92       85.88
         87 |        500        1.03       86.91
         88 |        535        1.10       88.01
         89 |        494        1.02       89.02
         90 |        442        0.91       89.93
         91 |        462        0.95       90.88
         92 |        458        0.94       91.82
         93 |        425        0.87       92.70
         94 |        501        1.03       93.73
         95 |        502        1.03       94.76
         96 |        514        1.06       95.81
         97 |        487        1.00       96.81
         98 |        534        1.10       97.91
         99 |        493        1.01       98.93
        100 |        523        1.07      100.00
------------+-----------------------------------
      Total |     48,665      100.00

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. use "${r_output}\NSS70_All.dta",clear

. 
. keep if urban == 1 //only focusing on urban 
(62,135 observations deleted)

. 
. replace wealth = 0 if wealth == . 
(0 real changes made)

. 
. xtile wealth_100 = wealth [aw = hhwgt],nq(10) //household weight, wealth is measured at household level.

. tab wealth_100 [aw = hhwgt]

         10 |
  quantiles |
 of wealth  |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 | 4,871.6826       10.01       10.01
          2 | 4,861.4548        9.99       20.00
          3 |  4,867.394       10.00       30.00
          4 | 4,865.8593       10.00       40.00
          5 | 4,866.4195       10.00       50.00
          6 | 4,866.4787       10.00       60.00
          7 | 4,866.9645       10.00       70.00
          8 | 4,867.8124       10.00       80.00
          9 | 4,865.3745       10.00       90.00
         10 | 4,865.5597       10.00      100.00
------------+-----------------------------------
      Total |     48,665      100.00

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. use "${r_output}\NSS70_All.dta",clear

. 
. keep if urban == 1 //only focusing on urban 
(62,135 observations deleted)

. 
. replace wealth = 0 if wealth == . 
(0 real changes made)

. 
. xtile wealth_100 = wealth [aw = hhwgt],nq(100) //household weight, wealth is measured at household level.

. tab wealth_100 [aw = hhwgt]

        100 |
  quantiles |
 of wealth  |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 | 487.337648        1.00        1.00
          2 | 487.034087        1.00        2.00
          3 | 2,057.6994        4.23        6.23
          7 | 408.239314        0.84        7.07
          8 | 574.610238        1.18        8.25
          9 |  375.65974        0.77        9.02
         10 | 481.102115        0.99       10.01
         11 |533.9594391        1.10       11.11
         12 | 525.394814        1.08       12.19
         13 | 399.333603        0.82       13.01
         14 | 518.095456        1.06       14.07
         15 | 458.451048        0.94       15.01
         16 |502.2148099        1.03       16.05
         17 | 475.583556        0.98       17.02
         18 | 476.466956        0.98       18.00
         19 | 509.882148        1.05       19.05
         20 | 462.072953        0.95       20.00
         21 | 495.143658        1.02       21.02
         22 | 536.488629        1.10       22.12
         23 | 428.819777        0.88       23.00
         24 | 487.052519        1.00       24.00
         25 | 486.125434        1.00       25.00
         26 | 487.329953        1.00       26.00
         27 |489.6371339        1.01       27.01
         28 | 494.584175        1.02       28.02
         29 | 479.793522        0.99       29.01
         30 | 482.419249        0.99       30.00
         31 | 485.741169        1.00       31.00
         32 | 487.904914        1.00       32.00
         33 |  498.72479        1.02       33.03
         34 | 489.534736        1.01       34.03
         35 | 476.565412        0.98       35.01
         36 | 493.319452        1.01       36.03
         37 |474.1623457        0.97       37.00
         38 | 487.276003        1.00       38.00
         39 | 486.643367        1.00       39.00
         40 |  485.98707        1.00       40.00
         41 | 491.261022        1.01       41.01
         42 | 491.602036        1.01       42.02
         43 | 477.656066        0.98       43.00
         44 |  493.57458        1.01       44.02
         45 | 501.476658        1.03       45.05
         46 | 475.259774        0.98       46.02
         47 |   488.5874        1.00       47.03
         48 | 476.257843        0.98       48.01
         49 | 484.839162        1.00       49.00
         50 | 485.904995        1.00       50.00
         51 | 486.933109        1.00       51.00
         52 | 486.405172        1.00       52.00
         53 | 491.419522        1.01       53.01
         54 | 481.877996        0.99       54.00
         55 | 488.508899        1.00       55.00
         56 |  484.66145        1.00       56.00
         57 | 488.473629        1.00       57.00
         58 | 486.360537        1.00       58.00
         59 | 489.961095        1.01       59.01
         60 | 481.877292        0.99       60.00
         61 | 491.481725        1.01       61.01
         62 | 504.112566        1.04       62.05
         63 | 468.384541        0.96       63.01
         64 | 482.549895        0.99       64.00
         65 | 488.756247        1.00       65.00
         66 | 484.514839        1.00       66.00
         67 | 490.331732        1.01       67.01
         68 | 486.693302        1.00       68.01
         69 | 484.080966        0.99       69.00
         70 |486.0587154        1.00       70.00
         71 | 489.121043        1.01       71.01
         72 |484.3707791        1.00       72.00
         73 |486.0933678        1.00       73.00
         74 | 486.934776        1.00       74.00
         75 | 487.210263        1.00       75.00
         76 | 486.323343        1.00       76.00
         77 | 486.192503        1.00       77.00
         78 | 486.202512        1.00       78.00
         79 |486.6757625        1.00       79.00
         80 |488.6880694        1.00       80.00
         81 | 487.991919        1.00       81.01
         82 | 483.934143        0.99       82.00
         83 | 486.233354        1.00       83.00
         84 |486.4080301        1.00       84.00
         85 | 487.796864        1.00       85.00
         86 | 488.749472        1.00       86.01
         87 | 484.238225        1.00       87.00
         88 | 486.327179        1.00       88.00
         89 | 486.797852        1.00       89.00
         90 | 486.897463        1.00       90.00
         91 | 492.729468        1.01       91.01
         92 | 489.964552        1.01       92.02
         93 | 477.541451        0.98       93.00
         94 | 486.673781        1.00       94.00
         95 | 485.910612        1.00       95.00
         96 | 486.658755        1.00       96.00
         97 | 486.500617        1.00       97.00
         98 | 486.366466        1.00       98.00
         99 | 487.172375        1.00       99.00
        100 | 486.041589        1.00      100.00
------------+-----------------------------------
      Total |     48,665      100.00

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. use "${r_output}\NSS70_All.dta",clear

. 
. keep if urban == 1 //only focusing on urban 
(62,135 observations deleted)

. 
. replace wealth = 0 if wealth == . 
(0 real changes made)

. 
. xtile wealth_100 = wealth ,nq(100) //household weight, wealth is measured at household level. [aw = hhwgt]

. tab wealth_100 [aw = hhwgt]

        100 |
  quantiles |
 of wealth  |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 | 320.418576        0.66        0.66
          2 | 314.209168        0.65        1.30
          3 | 362.764775        0.75        2.05
          4 | 2,034.6786        4.18        6.23
          6 |671.2232352        1.38        7.61
          7 | 854.280313        1.76        9.37
          8 | 848.067298        1.74       11.11
          9 | 796.613015        1.64       12.74
         10 | 870.568842        1.79       14.53
         11 | 766.984879        1.58       16.11
         12 | 768.153883        1.58       17.69
         13 | 663.101773        1.36       19.05
         14 |  596.78879        1.23       20.28
         15 | 687.628037        1.41       21.69
         16 | 703.875639        1.45       23.14
         17 |  581.92272        1.20       24.33
         18 | 542.515537        1.11       25.45
         19 | 433.703129        0.89       26.34
         20 | 493.059009        1.01       27.35
         21 | 518.442681        1.07       28.42
         22 | 460.962536        0.95       29.36
         23 | 432.477534        0.89       30.25
         24 | 396.690353        0.82       31.07
         25 | 456.486655        0.94       32.01
         26 | 422.863886        0.87       32.87
         27 | 411.240822        0.85       33.72
         28 | 397.686559        0.82       34.54
         29 | 395.172931        0.81       35.35
         30 |444.1331458        0.91       36.26
         31 | 362.498965        0.74       37.01
         32 | 488.477227        1.00       38.01
         33 | 400.864638        0.82       38.83
         34 | 445.691439        0.92       39.75
         35 | 441.650026        0.91       40.66
         36 |  454.51969        0.93       41.59
         37 | 476.497802        0.98       42.57
         38 | 481.541216        0.99       43.56
         39 | 451.304475        0.93       44.49
         40 | 480.109428        0.99       45.47
         41 | 446.569395        0.92       46.39
         42 | 445.195103        0.91       47.31
         43 | 430.885822        0.89       48.19
         44 | 422.744192        0.87       49.06
         45 | 380.109204        0.78       49.84
         46 | 441.007178        0.91       50.75
         47 | 432.862138        0.89       51.64
         48 |   354.0758        0.73       52.36
         49 | 464.266536        0.95       53.32
         50 | 400.106663        0.82       54.14
         51 | 413.735842        0.85       54.99
         52 | 388.858756        0.80       55.79
         53 | 351.201684        0.72       56.51
         54 | 400.338422        0.82       57.33
         55 | 405.796511        0.83       58.17
         56 |388.3355427        0.80       58.97
         57 | 385.816337        0.79       59.76
         58 | 503.990816        1.04       60.79
         59 | 424.425461        0.87       61.67
         60 | 486.007202        1.00       62.67
         61 | 389.025425        0.80       63.46
         62 | 391.435247        0.80       64.27
         63 | 437.017316        0.90       65.17
         64 | 465.241553        0.96       66.12
         65 | 413.953555        0.85       66.97
         66 | 400.519498        0.82       67.80
         67 | 394.273203        0.81       68.61
         68 | 488.492601        1.00       69.61
         69 | 476.142903        0.98       70.59
         70 | 362.207947        0.74       71.33
         71 | 463.019844        0.95       72.29
         72 | 403.622401        0.83       73.11
         73 | 425.932246        0.88       73.99
         74 | 454.070377        0.93       74.92
         75 | 491.945655        1.01       75.93
         76 | 402.725354        0.83       76.76
         77 | 428.407132        0.88       77.64
         78 |  382.03475        0.79       78.43
         79 | 500.034908        1.03       79.45
         80 | 502.624636        1.03       80.49
         81 | 404.887088        0.83       81.32
         82 | 418.870439        0.86       82.18
         83 | 445.949197        0.92       83.10
         84 | 445.690619        0.92       84.01
         85 | 499.302453        1.03       85.04
         86 | 529.836449        1.09       86.13
         87 | 453.185177        0.93       87.06
         88 | 456.603228        0.94       88.00
         89 | 478.128035        0.98       88.98
         90 | 525.082108        1.08       90.06
         91 |  520.54876        1.07       91.13
         92 | 552.929657        1.14       92.26
         93 | 537.575172        1.10       93.37
         94 | 436.601686        0.90       94.27
         95 |  488.30469        1.00       95.27
         96 | 457.385104        0.94       96.21
         97 | 472.025727        0.97       97.18
         98 | 431.398103        0.89       98.06
         99 | 492.684188        1.01       99.08
        100 |   449.0877        0.92      100.00
------------+-----------------------------------
      Total |     48,665      100.00

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. xtile wealth_100 = wealth ,nq(100) //household weight, wealth is measured at household level. [aw = hhwgt]
variable wealth_100 already defined
r(110);

end of do-file

r(110);

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. use "${r_output}\NSS70_All.dta",clear

. 
. keep if urban == 1 //only focusing on urban 
(62,135 observations deleted)

. 
. replace wealth = 0 if wealth == . 
(0 real changes made)

. 
. xtile wealth_100 = wealth ,nq(100) //household weight, wealth is measured at household level. [aw = hhwgt]

. tab wealth_100 

        100 |
  quantiles |
 of wealth  |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |        487        1.00        1.00
          2 |        487        1.00        2.00
          3 |        487        1.00        3.00
          4 |      1,110        2.28        5.28
          6 |        349        0.72        6.00
          7 |        525        1.08        7.08
          8 |        503        1.03        8.11
          9 |        433        0.89        9.00
         10 |        510        1.05       10.05
         11 |        463        0.95       11.00
         12 |        488        1.00       12.00
         13 |        535        1.10       13.10
         14 |        437        0.90       14.00
         15 |        486        1.00       15.00
         16 |        495        1.02       16.02
         17 |        504        1.04       17.05
         18 |        469        0.96       18.02
         19 |        480        0.99       19.00
         20 |        485        1.00       20.00
         21 |        490        1.01       21.01
         22 |        484        0.99       22.00
         23 |        488        1.00       23.00
         24 |        486        1.00       24.00
         25 |        486        1.00       25.00
         26 |        491        1.01       26.01
         27 |        483        0.99       27.00
         28 |        486        1.00       28.00
         29 |        486        1.00       29.00
         30 |        487        1.00       30.00
         31 |        487        1.00       31.00
         32 |        488        1.00       32.00
         33 |        485        1.00       33.00
         34 |        487        1.00       34.00
         35 |        486        1.00       35.00
         36 |        489        1.00       36.01
         37 |        485        1.00       37.00
         38 |        491        1.01       38.01
         39 |        482        0.99       39.00
         40 |        486        1.00       40.00
         41 |        491        1.01       41.01
         42 |        486        1.00       42.01
         43 |        484        0.99       43.00
         44 |        486        1.00       44.00
         45 |        487        1.00       45.00
         46 |        486        1.00       46.00
         47 |        488        1.00       47.00
         48 |        486        1.00       48.00
         49 |        486        1.00       49.00
         50 |        487        1.00       50.00
         51 |        489        1.00       51.01
         52 |        484        0.99       52.00
         53 |        487        1.00       53.00
         54 |        487        1.00       54.00
         55 |        491        1.01       55.01
         56 |        482        0.99       56.00
         57 |        487        1.00       57.00
         58 |        487        1.00       58.00
         59 |        486        1.00       59.00
         60 |        486        1.00       60.00
         61 |        489        1.00       61.00
         62 |        485        1.00       62.00
         63 |        486        1.00       63.00
         64 |        487        1.00       64.00
         65 |        487        1.00       65.00
         66 |        486        1.00       66.00
         67 |        488        1.00       67.00
         68 |        487        1.00       68.00
         69 |        485        1.00       69.00
         70 |        487        1.00       70.00
         71 |        487        1.00       71.00
         72 |        486        1.00       72.00
         73 |        487        1.00       73.00
         74 |        487        1.00       74.00
         75 |        486        1.00       75.00
         76 |        487        1.00       76.00
         77 |        488        1.00       77.00
         78 |        485        1.00       78.00
         79 |        487        1.00       79.00
         80 |        486        1.00       80.00
         81 |        487        1.00       81.00
         82 |        487        1.00       82.00
         83 |        486        1.00       83.00
         84 |        488        1.00       84.00
         85 |        486        1.00       85.00
         86 |        486        1.00       86.00
         87 |        487        1.00       87.00
         88 |        487        1.00       88.00
         89 |        486        1.00       89.00
         90 |        487        1.00       90.00
         91 |        487        1.00       91.00
         92 |        486        1.00       92.00
         93 |        487        1.00       93.00
         94 |        487        1.00       94.00
         95 |        487        1.00       95.00
         96 |        486        1.00       96.00
         97 |        487        1.00       97.00
         98 |        486        1.00       98.00
         99 |        487        1.00       99.00
        100 |        486        1.00      100.00
------------+-----------------------------------
      Total |     48,665      100.00

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. use "${r_output}\NSS70_All.dta",clear

. 
. keep if urban == 1 //only focusing on urban 
(62,135 observations deleted)

. 
. replace wealth = 0 if wealth == . 
(0 real changes made)

. 
. xtile wealth_100 = wealth_ln [aw = hhwgt],nq(100)

. tab wealth_100 [aw = hhwgt]

        100 |
  quantiles |
         of |
 wealth_ln  |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 | 533.934242        1.16        1.16
          2 | 458.845937        1.00        2.15
          3 | 393.542708        0.85        3.01
          4 | 471.875795        1.02        4.03
          5 | 449.405265        0.97        5.01
          6 |  458.24503        0.99        6.00
          7 | 461.570837        1.00        7.00
          8 | 495.234821        1.07        8.08
          9 | 426.411477        0.93        9.00
         10 | 461.113328        1.00       10.00
         11 |468.0923327        1.02       11.02
         12 | 455.622411        0.99       12.01
         13 | 463.301623        1.01       13.01
         14 |  456.12631        0.99       14.00
         15 | 464.990599        1.01       15.01
         16 |  479.47242        1.04       16.05
         17 | 441.055387        0.96       17.01
         18 | 471.572965        1.02       18.03
         19 | 448.516312        0.97       19.00
         20 |  460.33914        1.00       20.00
         21 | 460.629527        1.00       21.00
         22 | 461.233857        1.00       22.00
         23 |  462.68484        1.00       23.00
         24 | 459.847352        1.00       24.00
         25 | 461.803046        1.00       25.00
         26 | 459.188304        1.00       26.00
         27 |466.2010586        1.01       27.01
         28 | 459.197402        1.00       28.01
         29 | 463.899729        1.01       29.01
         30 | 465.716801        1.01       30.02
         31 | 450.758906        0.98       31.00
         32 | 459.764597        1.00       32.00
         33 | 461.944022        1.00       33.00
         34 | 460.235055        1.00       34.00
         35 | 467.649744        1.01       35.02
         36 |  458.16757        0.99       36.01
         37 | 456.951921        0.99       37.00
         38 | 464.133058        1.01       38.01
         39 | 458.096912        0.99       39.00
         40 | 460.388108        1.00       40.00
         41 | 460.803183        1.00       41.00
         42 | 461.747513        1.00       42.00
         43 | 463.223971        1.00       43.01
         44 | 459.801384        1.00       44.00
         45 | 458.970879        1.00       45.00
         46 | 463.905284        1.01       46.01
         47 |459.2157058        1.00       47.00
         48 | 461.469535        1.00       48.00
         49 | 462.057886        1.00       49.01
         50 | 459.072888        1.00       50.00
         51 | 461.253338        1.00       51.00
         52 |459.8330202        1.00       52.00
         53 |460.7029139        1.00       53.00
         54 | 461.822931        1.00       54.00
         55 | 460.311642        1.00       55.00
         56 | 460.686141        1.00       56.00
         57 | 462.905531        1.00       57.00
         58 | 459.952367        1.00       58.00
         59 | 472.036382        1.02       59.03
         60 | 451.360689        0.98       60.01
         61 |458.5804341        0.99       61.00
         62 | 462.891441        1.00       62.00
         63 |459.4272871        1.00       63.00
         64 | 461.957081        1.00       64.00
         65 | 460.850467        1.00       65.00
         66 |476.6014067        1.03       66.04
         67 | 445.138206        0.97       67.00
         68 | 460.638088        1.00       68.00
         69 | 461.361047        1.00       69.00
         70 | 492.071522        1.07       70.07
         71 | 432.886191        0.94       71.01
         72 | 456.718645        0.99       72.00
         73 | 460.779309        1.00       73.00
         74 |  464.17942        1.01       74.01
         75 | 460.615036        1.00       75.01
         76 | 460.046101        1.00       76.00
         77 |458.8731231        1.00       77.00
         78 |  462.80887        1.00       78.00
         79 | 461.893324        1.00       79.01
         80 | 459.162762        1.00       80.00
         81 | 461.282714        1.00       81.00
         82 |  459.67096        1.00       82.00
         83 | 460.808604        1.00       83.00
         84 | 463.550055        1.01       84.01
         85 | 458.467029        0.99       85.00
         86 | 460.716467        1.00       86.00
         87 | 461.182294        1.00       87.00
         88 | 461.517329        1.00       88.00
         89 |  461.62193        1.00       89.00
         90 | 459.569106        1.00       90.00
         91 | 461.631966        1.00       91.00
         92 | 463.247957        1.01       92.01
         93 |460.6364795        1.00       93.01
         94 | 461.527327        1.00       94.01
         95 | 467.904115        1.02       95.02
         96 | 453.295148        0.98       96.01
         97 | 458.853316        1.00       97.00
         98 | 460.460838        1.00       98.00
         99 | 460.950453        1.00       99.00
        100 | 460.732216        1.00      100.00
------------+-----------------------------------
      Total |     46,094      100.00

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. merge m:1 wealth_100 using "${r_input}\NSS70_IHDS_Wealth_to_Inc.dta"

    Result                           # of obs.
    -----------------------------------------
    not matched                         2,571
        from master                     2,571  (_merge==1)
        from using                          0  (_merge==2)

    matched                            46,094  (_merge==3)
    -----------------------------------------

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. merge m:1 wealth_100 using "${r_input}\NSS70_IHDS_Wealth_to_Inc.dta",nogen

    Result                           # of obs.
    -----------------------------------------
    not matched                         2,571
        from master                     2,571  
        from using                          0  

    matched                            46,094  
    -----------------------------------------

. 
end of do-file

. sum alpha_a1_u

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
  alpha_a1_u |     41,601     8.03607    4.955596   .2235163   37.94843

.  sum alpha_a1_u,de

                         alpha_a1_u
-------------------------------------------------------------
      Percentiles      Smallest
 1%     .2803187       .2235163
 5%      1.02272       .2235163
10%     2.322829       .2235163       Obs              41,601
25%     5.071917       .2235163       Sum of Wgt.      41,601

50%     8.136467                      Mean            8.03607
                        Largest       Std. Dev.      4.955596
75%     10.36357       37.94843
90%     12.59467       37.94843       Variance       24.55793
95%     14.25759       37.94843       Skewness       2.477513
99%     37.94843       37.94843       Kurtosis       16.68837

. sum alpha_a1_u_ip,de

                        alpha_a1_u_ip
-------------------------------------------------------------
      Percentiles      Smallest
 1%     .2803187       .2235163
 5%     1.186773       .2235163
10%     2.517363       .2235163       Obs              46,094
25%     4.962466       .2235163       Sum of Wgt.      46,094

50%     7.684401                      Mean           7.840062
                        Largest       Std. Dev.      4.793653
75%     10.19729       37.94843
90%     12.53528       37.94843       Variance       22.97911
95%     14.25759       37.94843       Skewness       2.560496
99%     37.94843       37.94843       Kurtosis       17.64393

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. gen double income = wealth*alpha_a1_u_ip
(2,571 missing values generated)

. 
end of do-file

. mdesc alpha_a1_u_ip alpha_a1_u

    Variable    |     Missing          Total     Percent Missing
----------------+-----------------------------------------------
   alpha_a1_u~p |       2,571         48,665           5.28
     alpha_a1_u |       7,064         48,665          14.52
----------------+-----------------------------------------------

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. tab wealth_100 [aw = hhwgt]

        100 |
  quantiles |
         of |
 wealth_ln  |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 | 533.934242        1.16        1.16
          2 | 458.845937        1.00        2.15
          3 | 393.542708        0.85        3.01
          4 | 471.875795        1.02        4.03
          5 | 449.405265        0.97        5.01
          6 |  458.24503        0.99        6.00
          7 | 461.570837        1.00        7.00
          8 | 495.234821        1.07        8.08
          9 | 426.411477        0.93        9.00
         10 | 461.113328        1.00       10.00
         11 |468.0923327        1.02       11.02
         12 | 455.622411        0.99       12.01
         13 | 463.301623        1.01       13.01
         14 |  456.12631        0.99       14.00
         15 | 464.990599        1.01       15.01
         16 |  479.47242        1.04       16.05
         17 | 441.055387        0.96       17.01
         18 | 471.572965        1.02       18.03
         19 | 448.516312        0.97       19.00
         20 |  460.33914        1.00       20.00
         21 | 460.629527        1.00       21.00
         22 | 461.233857        1.00       22.00
         23 |  462.68484        1.00       23.00
         24 | 459.847352        1.00       24.00
         25 | 461.803046        1.00       25.00
         26 | 459.188304        1.00       26.00
         27 |466.2010586        1.01       27.01
         28 | 459.197402        1.00       28.01
         29 | 463.899729        1.01       29.01
         30 | 465.716801        1.01       30.02
         31 | 450.758906        0.98       31.00
         32 | 459.764597        1.00       32.00
         33 | 461.944022        1.00       33.00
         34 | 460.235055        1.00       34.00
         35 | 467.649744        1.01       35.02
         36 |  458.16757        0.99       36.01
         37 | 456.951921        0.99       37.00
         38 | 464.133058        1.01       38.01
         39 | 458.096912        0.99       39.00
         40 | 460.388108        1.00       40.00
         41 | 460.803183        1.00       41.00
         42 | 461.747513        1.00       42.00
         43 | 463.223971        1.00       43.01
         44 | 459.801384        1.00       44.00
         45 | 458.970879        1.00       45.00
         46 | 463.905284        1.01       46.01
         47 |459.2157058        1.00       47.00
         48 | 461.469535        1.00       48.00
         49 | 462.057886        1.00       49.01
         50 | 459.072888        1.00       50.00
         51 | 461.253338        1.00       51.00
         52 |459.8330202        1.00       52.00
         53 |460.7029139        1.00       53.00
         54 | 461.822931        1.00       54.00
         55 | 460.311642        1.00       55.00
         56 | 460.686141        1.00       56.00
         57 | 462.905531        1.00       57.00
         58 | 459.952367        1.00       58.00
         59 | 472.036382        1.02       59.03
         60 | 451.360689        0.98       60.01
         61 |458.5804341        0.99       61.00
         62 | 462.891441        1.00       62.00
         63 |459.4272871        1.00       63.00
         64 | 461.957081        1.00       64.00
         65 | 460.850467        1.00       65.00
         66 |476.6014067        1.03       66.04
         67 | 445.138206        0.97       67.00
         68 | 460.638088        1.00       68.00
         69 | 461.361047        1.00       69.00
         70 | 492.071522        1.07       70.07
         71 | 432.886191        0.94       71.01
         72 | 456.718645        0.99       72.00
         73 | 460.779309        1.00       73.00
         74 |  464.17942        1.01       74.01
         75 | 460.615036        1.00       75.01
         76 | 460.046101        1.00       76.00
         77 |458.8731231        1.00       77.00
         78 |  462.80887        1.00       78.00
         79 | 461.893324        1.00       79.01
         80 | 459.162762        1.00       80.00
         81 | 461.282714        1.00       81.00
         82 |  459.67096        1.00       82.00
         83 | 460.808604        1.00       83.00
         84 | 463.550055        1.01       84.01
         85 | 458.467029        0.99       85.00
         86 | 460.716467        1.00       86.00
         87 | 461.182294        1.00       87.00
         88 | 461.517329        1.00       88.00
         89 |  461.62193        1.00       89.00
         90 | 459.569106        1.00       90.00
         91 | 461.631966        1.00       91.00
         92 | 463.247957        1.01       92.01
         93 |460.6364795        1.00       93.01
         94 | 461.527327        1.00       94.01
         95 | 467.904115        1.02       95.02
         96 | 453.295148        0.98       96.01
         97 | 458.853316        1.00       97.00
         98 | 460.460838        1.00       98.00
         99 | 460.950453        1.00       99.00
        100 | 460.732216        1.00      100.00
------------+-----------------------------------
      Total |     46,094      100.00

. 
end of do-file

. sum wealth,de

                           wealth
-------------------------------------------------------------
      Percentiles      Smallest
 1%      -153700      -8.15e+07
 5%            0      -3.91e+07
10%        18000       -9320388       Obs              48,665
25%       190800       -7723959       Sum of Wgt.      48,665

50%       745250                      Mean            2295543
                        Largest       Std. Dev.      1.65e+07
75%      2052900       1.00e+09
90%      4755500       1.45e+09       Variance       2.73e+14
95%      7810000       1.75e+09       Skewness       77.61391
99%     2.11e+07       1.85e+09       Kurtosis       7517.207

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. clear 

. set more off 

. 
. if "`c(username)'" == "wb308830" local pc = 0

. if "`c(username)'" != "wb308830" local pc = 1

. if `pc' == 0 global root "C:\Users\wb308830\OneDrive - WBG\Documents\TN\Data\NSS 70"

. if `pc' == 0 global root_68 "C:\Users\wb308830\OneDrive - WBG\Documents\TN\Data\NSS 68"

. if `pc' != 0 global root "C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70"

. if `pc' != 0 global script "C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\Housing_git\nss\Survey_NSS"

. 
. di "$root"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70

. global r_input "${root}\Raw Data & Dictionaries"

. di "${r_input}"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Raw Data & Dictionaries

. global r_output "${root}\Data Output Files"

. di "${r_output}"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files

. global r_output_68 "${root_68}\Data Output Files"

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. use "${r_output_68}\nss68_ria_master.dta" 
file \Data Output Files\nss68_ria_master.dta not found
r(601);

end of do-file

r(601);

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. clear 

. set more off 

. 
. if "`c(username)'" == "wb308830" local pc = 0

. if "`c(username)'" != "wb308830" local pc = 1

. if `pc' == 0 global root "C:\Users\wb308830\OneDrive - WBG\Documents\TN\Data\NSS 70"

. if `pc' == 0 global root_68 "C:\Users\wb308830\OneDrive - WBG\Documents\TN\Data\NSS 68"

. if `pc' != 0 global root "C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70"

. if `pc' != 0 global root_68 "C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70"

. if `pc' != 0 global script "C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\Housing_git\nss\Survey_NSS"

. 
. di "$root"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70

. global r_input "${root}\Raw Data & Dictionaries"

. di "${r_input}"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Raw Data & Dictionaries

. global r_output "${root}\Data Output Files"

. di "${r_output}"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files

. global r_output_68 "${root_68}\Data Output Files"

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. 
. use "${r_output_68}\nss68_ria_master.dta" 
file C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files\nss68_ria_master.dta not found
r(601);

end of do-file

r(601);

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. global r_output_68 "${root_68}\Data Output Files"

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. global r_output_68 "${root_68}\Data Output Files"

. di "${r_output_68}"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. clear 

. set more off 

. 
. if "`c(username)'" == "wb308830" local pc = 0

. if "`c(username)'" != "wb308830" local pc = 1

. if `pc' == 0 global root "C:\Users\wb308830\OneDrive - WBG\Documents\TN\Data\NSS 70"

. if `pc' == 0 global root_68 "C:\Users\wb308830\OneDrive - WBG\Documents\TN\Data\NSS 68"

. if `pc' != 0 global root "C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70"

. if `pc' != 0 global root_68 "C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS68"

. if `pc' != 0 global script "C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\Housing_git\nss\Survey_NSS"

. 
. di "$root"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70

. global r_input "${root}\Raw Data & Dictionaries"

. di "${r_input}"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Raw Data & Dictionaries

. global r_output "${root}\Data Output Files"

. di "${r_output}"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files

. global r_output_68 "${root_68}\Data Output Files"

. di "${r_output_68}"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS68\Data Output Files

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. use "${r_output_68}\nss68_ria_master.dta" 

. bysort state: keep if _n == 1
(41,932 observations deleted)

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. use "${r_output_68}\nss68_ria_master.dta" 
no; data in memory would be lost
r(4);

end of do-file

r(4);

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. use "${r_output_68}\nss68_ria_master.dta" 
no; data in memory would be lost
r(4);

end of do-file

r(4);

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. use "${r_output_68}\nss68_ria_master.dta",clear 

. bysort state: keep if _n == 1
(41,932 observations deleted)

. keep state pline_nhs_*

. 
. 
. merge 1: m state using "${r_output}\NSS70_All.dta"
merge 1::  invalid merge type
    merge types are 1:1, 1:m, m:1, or m:m
r(198);

end of do-file

r(198);

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. use "${r_output_68}\nss68_ria_master.dta",clear 

. bysort state: keep if _n == 1
(41,932 observations deleted)

. keep state pline_nhs_*

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. use "${r_output_68}\nss68_ria_master.dta",clear 

. bysort state: keep if _n == 1
(41,932 observations deleted)

. keep state pline_nhs_*

. 
. 
. merge 1:m state using "${r_output}\NSS70_All.dta"
variable state not found
r(111);

end of do-file

r(111);

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. 
. use "${r_output_68}\nss68_ria_master.dta",clear 

. bysort state: keep if _n == 1
(41,932 observations deleted)

. keep state pline_nhs_*

. 
. 
. merge 1:m State using "${r_output}\NSS70_All.dta"
variable State not found
r(111);

end of do-file

r(111);

. usw "${r_output}\NSS70_All.dta",clear
command usw is unrecognized
r(199);

. use "${r_output}\NSS70_All.dta",clear

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. *gen date of survey 
. use "${r_input}\Visit 1_Block 1&2_Identification of sample household and particulars of field operations.dta",clear

. gen month = real(substr(Survey_Date,3,2))

. gen year = 2013 //there's 2017 and 2019 should be mistake

. 
. gen date_survey = ym(year,month)

. format date_survey %tmMCY

. 
. rename State_District st_dc_70

. merge m:1 st_dc_70 using "${r_input}\mega_st_dc_70.dta"

    Result                           # of obs.
    -----------------------------------------
    not matched                        86,248
        from master                    86,246  (_merge==1)
        from using                          2  (_merge==2)

    matched                            24,554  (_merge==3)
    -----------------------------------------

. drop if _merge == 2
(2 observations deleted)

. 
. gen mega_dc = (_merge == 3)

. label var mega_dc "district with more than million population"

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. 
. rename State state

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. ****************************************************************************
. * Description: Import NSS70 from Raw Files and save dta to Output Folder
. * Date: Jan 12, 2020
. * Version 2
. * Last Editor: Aline
. ****************************************************************************
. 
. ****************************************************************************
. clear 

. clear matrix

. ****************************************************************************
. 
. ****************************************************************************
. * Determine Whose Machine is running the code and set the global directory
. ****************************************************************************
. if "`c(username)'" == "wb308830" local pc = 0

. if "`c(username)'" != "wb308830" local pc = 1

. if `pc' == 0 global root "C:\Users\wb308830\OneDrive - WBG\Documents\TN\Data\NSS 70"

. if `pc' != 0 global root "C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70"

. 
. di "$root"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70

. global r_input "${root}\Raw Data & Dictionaries"

. di "${r_input}"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Raw Data & Dictionaries

. global r_output "${root}\Data Output Files"

. 
. ****************************************************************************
. 
. *gen date of survey 
. use "${r_input}\Visit 1_Block 1&2_Identification of sample household and particulars of field operations.dta",clear

. gen month = real(substr(Survey_Date,3,2))

. gen year = 2013 //there's 2017 and 2019 should be mistake

. 
. gen date_survey = ym(year,month)

. format date_survey %tmMCY

. 
. rename State_District st_dc_70

. merge m:1 st_dc_70 using "${r_input}\mega_st_dc_70.dta"

    Result                           # of obs.
    -----------------------------------------
    not matched                        86,248
        from master                    86,246  (_merge==1)
        from using                          2  (_merge==2)

    matched                            24,554  (_merge==3)
    -----------------------------------------

. drop if _merge == 2
(2 observations deleted)

. 
. gen mega_dc = (_merge == 3)

. label var mega_dc "district with more than million population"

. 
. rename State state

. 
. keep HHID date_survey mega_dc State

. save "${r_output}\b2",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files\b2.dta saved

. 
. 
. *gen id, wgt (hhwgt, popwgt) b3
. use "${r_input}\Visit 1_Block 3_Household Characteristics.dta",clear

. 
. rename (b3q1 Sector) (hhsize sector)

. //gen hhwgt = MLT 
. gen hhwgt = Weight_SS 

. 
. destring(hhsize),replace
hhsize: all characters numeric; replaced as byte

. gen pwgt = hhwgt * hhsize

. 
. destring(sector), replace
sector: all characters numeric; replaced as byte

. gen urban = sector - 1

. 
. keep HHID hhwgt pwgt hhsize sector urban Weight_SS Weight_SC

. save "${r_output}\b3",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files\b3.dta saved

. 
. *gender from b4 (4)
. use "${r_input}\Visit 1 _Block 4_Demographic and other particulars of household members.dta",clear

. *Keep head 
. keep if b4q1 == "01" // keep heads only 
(408,795 observations deleted)

. ren b4q5 head_age 

. 
. ren  b4q4 head_gender 

. destring head_gender, replace
head_gender: all characters numeric; replaced as byte

. label define gender 1 "Male" 2 "Female"

. label values head_gender gender 

. gen head_female = (head_gender == 2)*100

. 
. keep HHID head_age head_gender head_female

. save "${r_output}\b4",replace 
file C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files\b4.dta saved

. 
. *Asset non_fin： land from b5.1 & b5.2 (rural & urban) srl 99
. use "${r_input}\Visit 1_Block 5pt1_Details of land owned by the household as on 30.06.12.dta",clear

. sum b5_1_6

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
      b5_1_6 |    223,958    630116.4     2835074          0   2.49e+08

. rename State state

. 
. egen double land_r = sum(b5_1_6*(b5_1_1 == "99")), by(HHID)

. egen double land_r_man = sum(b5_1_6*(b5_1_1 != "99")), by(HHID)

. egen double land_r_resid = sum(b5_1_6*(b5_1_1 != "99")*( b5_1_3 == "10")), by(HHID)

. duplicates drop HHID, force

Duplicates in terms of HHID

(156,468 observations deleted)

. 
. *Check the manual (man) sum with survey sum
. count if land_r > land_r_man
  0

. count if land_r < land_r_man
  15

. 
. drop land_r

. rename land_r_man land_r 

. 
. keep HHID land_r land_r_resid

. save "${r_output}\b5_1",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files\b5_1.dta saved

. 
. use "${r_input}\Visit 1_Block 5pt2_Details of land owned by the household as on 30.06.12.dta",clear

. count if b5_2_6 < 0
  2

. replace b5_2_6 = . if b5_2_6 < 0
(2 real changes made, 2 to missing)

. 
. egen double land_u = sum(b5_2_6*(b5_2_1 == "99")), by(HHID)

. egen double land_u_man = sum(b5_2_6*(b5_2_1 != "99")), by(HHID)

. egen double land_u_resid = sum(b5_2_6*(b5_2_1 != "99")*( b5_2_3 == "10")), by(HHID)

. 
. duplicates drop HHID, force

Duplicates in terms of HHID

(41,892 observations deleted)

. 
. *Check the manual (man) sum with survey sum
. count if land_u > land_u_man
  0

. count if land_u < land_u_man
  16

. 
. drop land_u

. rename land_u_man land_u

. 
. keep HHID land_u land_u_resid

. save "${r_output}\b5_2",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files\b5_2.dta saved

. 
. 
. 
. *Asset non_fin: building and constructions b6 srl 11
. use "${r_input}\Visit 1_Block 6_Buildings and other constructions owned by the household as on 30.06.2012.dta",clear

. sum b6_q6

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
       b6_q6 |    244,737    479786.6     8839515          0   1.85e+09

. 
. egen double building_all = sum(b6_q6*(b6_q3 == "11")), by(HHID)

. egen double building_all_man = sum(b6_q6*(b6_q3 != "11")),  by(HHID)

. 
. egen double building_resid = sum(b6_q6*(inlist(b6_q3,"01","02","03"))), by(HHID)

. egen double building_resid_area = sum(b6_q5*(inlist(b6_q3,"01","02","03"))), by(HHID)

. 
. egen double building_dwelling = sum(b6_q6*(b6_q3 == "01")), by(HHID)

. egen double building_dwelling_area = sum(b6_q5*(b6_q3 == "01")), by(HHID)

. 
. duplicates drop HHID,  force

Duplicates in terms of HHID

(149,298 observations deleted)

. 
. keep HHID building_all* building_resid building_resid_area building_dwelling building_dwelling_area

. 
. *Check the manual (man) sum with survey sum
. count if building_resid > building_all
  2

. count if building_resid > building_all_man
  0

. 
. drop building_all

. ren building_all_man building_all 

. 
. save "${r_output}\b6",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files\b6.dta saved

. 
. *Asset non_fin: livestock and poultry b7 srl 22 
. use "${r_input}\Visit 1_Block 7_Livestock and poultry owned by the household on 30.06.2012.dta",clear

. destring b7_q2,replace
b7_q2: all characters numeric; replaced as byte

. sum b7_q5

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
       b7_q5 |    176,881    23115.77    42294.12          0    2590000

. 
. egen double livestock = sum(b7_q5*(b7_q2 == 22)), by(HHID)

. egen double livestock_man = sum(b7_q5*(inrange(b7_q2,17,21))), by(HHID)

. duplicates drop HHID, force

Duplicates in terms of HHID

(132,557 observations deleted)

. 
. *Check the manual (man) sum with survey sum
. count if livestock > livestock_man
  0

. count if livestock < livestock_man
  14

. 
. drop livestock

. rename livestock_man livestock

. 
. keep HHID livestock

. save "${r_output}\b7",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files\b7.dta saved

. 
. *Asset non_fin: transport equipment b8: srl 8
. use "${r_input}\Visit 1_Block 8_Transport equipment owned by the household on 30.06.2012.dta",clear

. sum b8_q5

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
       b8_q5 |    166,428    64309.42      250881          0   2.07e+07

. 
. egen double trspt = sum(b8_q5*(b8_q2 == "08")), by(HHID)

. egen double trspt_man = sum(b8_q5*(b8_q2 != "08")), by(HHID)

. duplicates drop HHID, force

Duplicates in terms of HHID

(94,706 observations deleted)

. 
. *Check the manual (man) sum with survey sum
. count if trspt > trspt_man
  0

. count if trspt < trspt_man
  9

. 
. drop trspt

. rename trspt_man trspt

. 
. keep HHID trspt

. save "${r_output}\b8",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files\b8.dta saved

. 
. *Asset non_fin: agricultural machinery and implements b9: srl 8 
. use "${r_input}\Visit 1_Block 9_Agricultural machinery and implements owned by the household on 30.06.2012.dta",clear

. sum b9_q4

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
       b9_q4 |    120,458    7046.966    42346.08         10    7700000

. 
. egen double agri = sum(b9_q4*(b9_q2 == "8")), by(HHID)

. egen double agri_man = sum(b9_q4*(b9_q2 != "8")), by(HHID)

. duplicates drop HHID, force

Duplicates in terms of HHID

(72,196 observations deleted)

. 
. *Check the manual (man) sum with survey sum
. count if agri > agri_man
  0

. count if agri < agri_man
  2

. 
. drop agri

. rename agri_man agri

. 
. keep HHID agri

. save "${r_output}\b9",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files\b9.dta saved

. 
. *Asset non_fin: non-farm business equipment b10 srl 15
. use "${r_input}\Visit 1_Block 10_Non-farm business equipment owned by the household as on 30.06.2012.dta",clear

. destring b10_q2,replace
b10_q2: all characters numeric; replaced as byte

. sum b10_q3 //issue with raw-data.

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
      b10_q3 |        119           0           0          0          0

. 
. egen double non_farm = sum(b10_q3*(b10_q2 == 15)), by(HHID)

. egen double non_farm_man = sum(b10_q3*inrange(b10_q2,12,14)), by(HHID)

. duplicates drop HHID, force

Duplicates in terms of HHID

(60,778 observations deleted)

. 
. *Check the manual (man) sum with survey sum
. count if non_farm > non_farm_man
  0

. count if non_farm < non_farm_man
  0

. 
. drop non_farm_man

. keep HHID non_farm

. save "${r_output}\b10",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files\b10.dta saved

. 
. *Asset fin: shares & debentures b11 
. use "${r_input}\Visit 1_Block 11_ Shares and debentures owned by the household in co-operative  societies & companies as on 30.06.2012 .dta",clear

. 
.  *Check the manual (man) sum with survey sum
.   preserve

.   egen double shares = sum(b11_q6*(b11_q1 == "5")), by(HHID)

.   egen double shares_man = sum(b11_q6*(b11_q1 != "5")), by(HHID)

.   duplicates drop HHID, force

Duplicates in terms of HHID

(3,949 observations deleted)

.   count if shares > shares_man
  0

.   count if shares < shares_man
  0

.   restore 

. 
. sum b11_q6 if b11_q1 != "5" 

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
      b11_q6 |      3,931    44989.44    324279.8     -50000   1.00e+07

. replace b11_q6 = . if b11_q6<0 //filter out the non-negative colums. 
(23 real changes made, 23 to missing)

. egen double shares = sum(b11_q6*(b11_q1 == "5")), by(HHID)

. duplicates drop HHID, force

Duplicates in terms of HHID

(3,949 observations deleted)

. 
. keep HHID shares

. save "${r_output}\b11",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files\b11.dta saved

. 
. *Asset fin: other financial assets b12 srl 11 
. use "${r_input}\Visit 1_Block 12_Financial assets other than shares and debentures owned by the household as on 30.06.2012.dta",clear

. 
. destring b12_q1,replace
b12_q1: all characters numeric; replaced as byte

. count if b12_q3 < 0 
  1

. replace b12_q3 = . if b12_q3 <0
(1 real change made, 1 to missing)

. 
. egen double gold = sum(b12_q3*(b12_q1 == 12)), by(HHID)

. egen double fin_retire = sum(b12_q3*(inlist(b12_q1,6,7))), by(HHID) //retirement account

. egen double fin_other = sum(b12_q3*(inrange(b12_q1,1,5) )), by(HHID)

. 
. duplicates drop HHID, force

Duplicates in terms of HHID

(265,456 observations deleted)

.   
.   /*
> drop fin_other 
> ren fin_other_man fin_other
> */
. 
. keep HHID fin_other gold fin_retire

. save "${r_output}\b12",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files\b12.dta saved

. 
. *Asset fin: amount receivable b13 (mortgage srl 1, total srl 7)
. use "${r_input}\Visit 1_Block 13_Amount receivable by the household against different heads as on 30.06.2012.dta",clear

. sum b13_q4

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
      b13_q4 |     13,807    63848.05    419515.8          0   2.00e+07

. 
. egen double fin_rec = sum(b13_q4*(b13_q2 == "7")), by(HHID)

. egen double fin_rec_man = sum(b13_q4*(b13_q2 != "7")), by(HHID)

. duplicates drop HHID, force

Duplicates in terms of HHID

(7,033 observations deleted)

. 
.   *Check the manual (man) sum with survey sum
.   count if fin_rec > fin_rec_man
  0

.   count if fin_rec < fin_rec_man
  2

.  
. drop fin_rec

. ren fin_rec_man fin_rec

. keep HHID fin_rec

. save "${r_output}\b13",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files\b13.dta saved

. 
. *Debt: cash loands payable b14: Type of loan(8) Purpose of loan (11) Type of mortgage(13) , srl 99 (total)
. use "${r_input}\Visit 1_Block 14",clear

.  
.  *debt 
. gen debt = b14_q17 // 17 is the outstanding amount on 30.06.2012
(74,953 missing values generated)

. gen debt_todt = b14_q16 //outstanding amount at the date of survey. 
(2,415 missing values generated)

. sum debt,de

                            debt
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%         4200              0
10%         7420              0       Obs             108,756
25%        17990              0       Sum of Wgt.     108,756

50%        48800                      Mean           169114.3
                        Largest       Std. Dev.      931886.7
75%       140000       4.00e+07
90%       371695       4.00e+07       Variance       8.68e+11
95%       638480       1.83e+08       Skewness       142.1036
99%      1900207       1.83e+08       Kurtosis       27330.57

. 
. gen temp_debt =  (b14_q1 == "99")*debt
(74,953 missing values generated)

. egen double total_debt = sum(temp_debt), by(HHID)

. drop temp_debt

. 
. gen temp_debt =  (b14_q1 != "99")*debt_todt
(2,415 missing values generated)

. egen double total_debt_m = sum(temp_debt),by(HHID)

. drop temp_debt

. 
. gen temp_debt_todt =  (b14_q1 == "99")*debt_todt
(2,415 missing values generated)

. egen double total_debt_todt = sum(temp_debt_todt), by(HHID)

. drop temp_debt_todt

. 
. gen temp_debt_todt = (b14_q1 == "99")*debt_todt //to date of survey the total debt. 
(2,415 missing values generated)

. egen double total_debt_todt_m = sum(temp_debt_todt), by(HHID)

. drop temp_debt_todt

. 
.  *check the manual total and the survey total
. count if total_debt > total_debt_m
  57,103

. count if total_debt < total_debt_m // manual has 568 observations where it is larger 
  92,115

. 
. tab b14_q1

 Serial no. |      Freq.     Percent        Cum.
------------+-----------------------------------
         01 |     73,719       40.13       40.13
         02 |     21,945       11.95       52.07
         03 |      8,024        4.37       56.44
         04 |      3,600        1.96       58.40
         05 |      1,514        0.82       59.23
         06 |        705        0.38       59.61
         07 |        380        0.21       59.82
         08 |        212        0.12       59.93
         09 |        117        0.06       59.99
         10 |         73        0.04       60.03
         11 |         45        0.02       60.06
         12 |         33        0.02       60.08
         13 |         19        0.01       60.09
         14 |         13        0.01       60.09
         15 |         11        0.01       60.10
         16 |         10        0.01       60.11
         17 |          8        0.00       60.11
         18 |          4        0.00       60.11
         19 |          3        0.00       60.11
         20 |          3        0.00       60.12
         21 |          1        0.00       60.12
         22 |          1        0.00       60.12
         23 |          1        0.00       60.12
         24 |          1        0.00       60.12
         25 |          1        0.00       60.12
         99 |     73,266       39.88      100.00
------------+-----------------------------------
      Total |    183,709      100.00

. sort HHID

. br HHID b14* if total_debt == total_debt_m //there are hosueholds with no total liability coded.  

. //need to use the 99 total and not the manual to match the paper 
. 
.  *generate type of liabilty
. gen gold_loan = (b14_q12 == "05")*debt
(74,953 missing values generated)

. gen oth_secure_loan = (inlist(b14_q12,"01","02","06","07","08","09"))*debt
(74,953 missing values generated)

. gen mrtg_loan = (inlist(b14_q12,"03","04"))*debt
(74,953 missing values generated)

. 
. gen unsecure_loan = (b14_q12 == "10")*debt
(74,953 missing values generated)

. egen double secure_loan = rowtotal(mrtg_loan gold_loan oth_secure_loan) 

. 
.  *collapse at household level. 
. foreach type in secure_loan mrtg_loan gold_loan oth_secure_loan unsecure_loan { 
  2. egen double total_`type' = sum(`type'), by(HHID)
  3. } 

. 
. keep HHID total*

. bys HHID: keep if _n == 1 // keep only one observation for each HH
(109,989 observations deleted)

. 
. mdesc total*

    Variable    |     Missing          Total     Percent Missing
----------------+-----------------------------------------------
     total_debt |           0         73,720           0.00
   total_debt_m |           0         73,720           0.00
   total_debt~t |           0         73,720           0.00
   total_d~dt_m |           0         73,720           0.00
   total_secu~n |           0         73,720           0.00
   total_mrtg~n |           0         73,720           0.00
   total_gold~n |           0         73,720           0.00
   total_oth_~n |           0         73,720           0.00
   total_unse~n |           0         73,720           0.00
----------------+-----------------------------------------------

. 
. save "${r_output}\b14",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files\b14.dta saved

. 
. *Debt: kind of loan payable b15 col 11: housing 11
. use "${r_input}\Visit 1_Block 15_kind loans payable by the household.dta",replace

. save "${r_output}\b15",replace //late housing info
file C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files\b15.dta saved

. 
. 
. *******merge to master data******************************
. use "${r_output}\b2",clear

. local flist "b3 b14 b13 b12 b11 b10 b9 b8 b7 b6 b5_1 b5_2 b4"

. 
. foreach f of local flist{
  2. merge 1:1 HHID using "${r_output}/`f'"
  3. drop _merge
  4. }

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                           110,800  (_merge==3)
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                        37,080
        from master                    37,080  (_merge==1)
        from using                          0  (_merge==2)

    matched                            73,720  (_merge==3)
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                       104,025
        from master                   104,025  (_merge==1)
        from using                          0  (_merge==2)

    matched                             6,775  (_merge==3)
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                         9,388
        from master                     9,388  (_merge==1)
        from using                          0  (_merge==2)

    matched                           101,412  (_merge==3)
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                       106,964
        from master                   106,964  (_merge==1)
        from using                          0  (_merge==2)

    matched                             3,836  (_merge==3)
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                        86,248
        from master                    86,248  (_merge==1)
        from using                          0  (_merge==2)

    matched                            24,552  (_merge==3)
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                        62,530
        from master                    62,530  (_merge==1)
        from using                          0  (_merge==2)

    matched                            48,270  (_merge==3)
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                        39,051
        from master                    39,051  (_merge==1)
        from using                          0  (_merge==2)

    matched                            71,749  (_merge==3)
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                        66,393
        from master                    66,393  (_merge==1)
        from using                          0  (_merge==2)

    matched                            44,407  (_merge==3)
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                        15,312
        from master                    15,312  (_merge==1)
        from using                          0  (_merge==2)

    matched                            95,488  (_merge==3)
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                        43,053
        from master                    43,053  (_merge==1)
        from using                          0  (_merge==2)

    matched                            67,747  (_merge==3)
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                        76,583
        from master                    76,583  (_merge==1)
        from using                          0  (_merge==2)

    matched                            34,217  (_merge==3)
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                           110,800  (_merge==3)
    -----------------------------------------

. 
. *clean up missing value
. global asset "land_r land_u building_all livestock trspt agri non_farm shares fin_other fin_retire gold fin_rec building_resid building_dwelling land_r_resid land_u_resid"

. global debt "total_debt total_debt_m total_debt_todt total_debt_todt_m total_secure_loan total_mrtg_loan total_gold_loan total_oth_secure_loan total_unsecure_loan"

. 
. mdesc $asset 

    Variable    |     Missing          Total     Percent Missing
----------------+-----------------------------------------------
         land_r |      43,053        110,800          38.86
         land_u |      76,583        110,800          69.12
   building_all |      15,312        110,800          13.82
      livestock |      66,393        110,800          59.92
          trspt |      39,051        110,800          35.24
           agri |      62,530        110,800          56.44
       non_farm |      86,248        110,800          77.84
         shares |     106,964        110,800          96.54
      fin_other |       9,388        110,800           8.47
     fin_retire |       9,388        110,800           8.47
           gold |       9,388        110,800           8.47
        fin_rec |     104,025        110,800          93.89
   building_r~d |      15,312        110,800          13.82
   building_d~g |      15,312        110,800          13.82
   land_r_resid |      43,053        110,800          38.86
   land_u_resid |      76,583        110,800          69.12
----------------+-----------------------------------------------

. mdesc $debt 

    Variable    |     Missing          Total     Percent Missing
----------------+-----------------------------------------------
     total_debt |      37,080        110,800          33.47
   total_debt_m |      37,080        110,800          33.47
   total_debt~t |      37,080        110,800          33.47
   total_d~dt_m |      37,080        110,800          33.47
   total_secu~n |      37,080        110,800          33.47
   total_mrtg~n |      37,080        110,800          33.47
   total_gold~n |      37,080        110,800          33.47
   total_oth_~n |      37,080        110,800          33.47
   total_unse~n |      37,080        110,800          33.47
----------------+-----------------------------------------------

. 
. foreach var in $asset $debt {
  2. replace `var' = 0 if mi(`var')
  3. }
(43,053 real changes made)
(76,583 real changes made)
(15,312 real changes made)
(66,393 real changes made)
(39,051 real changes made)
(62,530 real changes made)
(86,248 real changes made)
(106,964 real changes made)
(9,388 real changes made)
(9,388 real changes made)
(9,388 real changes made)
(104,025 real changes made)
(15,312 real changes made)
(15,312 real changes made)
(43,053 real changes made)
(76,583 real changes made)
(37,080 real changes made)
(37,080 real changes made)
(37,080 real changes made)
(37,080 real changes made)
(37,080 real changes made)
(37,080 real changes made)
(37,080 real changes made)
(37,080 real changes made)
(37,080 real changes made)

. 
. *generate asset value by type
. egen double asset = rowtotal(land_r land_u building_all livestock trspt agri non_farm shares fin_other fin_retire gold fin_rec) 

. 
. egen double durable_other = rowtotal(livestock trspt agri non_farm)

. 
. egen double land_resid = rowtotal(land_r_resid land_u_resid)

. 
. egen double real_estate = rowtotal(building_all land_r land_u)

. 
. egen double real_estate_dwelling = rowtotal(building_dwelling land_resid)

. 
. egen double asset_non_fin = rowtotal(real_estate gold durable_other)

. 
. egen double asset_fin = rowtotal(shares fin_other fin_rec) 

. 
. *generate wealth data
. gen double wealth = asset - total_debt

. sum wealth,de

                           wealth
-------------------------------------------------------------
      Percentiles      Smallest
 1%       -69900      -8.15e+07
 5%       8797.5      -3.91e+07
10%        50100       -9320388       Obs             110,800
25%       184010       -7723959       Sum of Wgt.     110,800

50%       544200                      Mean            1699471
                        Largest       Std. Dev.      1.13e+07
75%      1463800       1.00e+09
90%      3540500       1.45e+09       Variance       1.28e+14
95%      6030593       1.75e+09       Skewness       106.6886
99%     1.68e+07       1.85e+09       Kurtosis       15031.28

. gen double wealth_ln = ln(wealth) //1% negative 
(3,590 missing values generated)

. 
. xtile qtl = wealth [aw = hhwgt],n(5)

. 
. *identify districts that located in mega U.A. (URBAN AGGLOMERATIONS) more than ie6 population
. replace mega_dc = 0 if urban == 0
(8,401 real changes made)

. 
. *house keeping
. mdesc *

    Variable    |     Missing          Total     Percent Missing
----------------+-----------------------------------------------
           HHID |           0        110,800           0.00
   State_Region |           0        110,800           0.00
    date_survey |           0        110,800           0.00
        mega_dc |           0        110,800           0.00
         sector |           0        110,800           0.00
         hhsize |           0        110,800           0.00
      Weight_SS |           0        110,800           0.00
      Weight_SC |           0        110,800           0.00
          hhwgt |           0        110,800           0.00
           pwgt |           0        110,800           0.00
          urban |           0        110,800           0.00
     total_debt |           0        110,800           0.00
   total_debt_m |           0        110,800           0.00
   total_debt~t |           0        110,800           0.00
   total_d~dt_m |           0        110,800           0.00
   total_secu~n |           0        110,800           0.00
   total_mrtg~n |           0        110,800           0.00
   total_gold~n |           0        110,800           0.00
   total_oth_~n |           0        110,800           0.00
   total_unse~n |           0        110,800           0.00
        fin_rec |           0        110,800           0.00
           gold |           0        110,800           0.00
     fin_retire |           0        110,800           0.00
      fin_other |           0        110,800           0.00
         shares |           0        110,800           0.00
       non_farm |           0        110,800           0.00
           agri |           0        110,800           0.00
          trspt |           0        110,800           0.00
      livestock |           0        110,800           0.00
   building_all |           0        110,800           0.00
   building_r~d |           0        110,800           0.00
   building_r~a |      15,312        110,800          13.82
   building_d~g |           0        110,800           0.00
   building_d~a |      15,312        110,800          13.82
         land_r |           0        110,800           0.00
   land_r_resid |           0        110,800           0.00
         land_u |           0        110,800           0.00
   land_u_resid |           0        110,800           0.00
    head_gender |           0        110,800           0.00
       head_age |           0        110,800           0.00
    head_female |           0        110,800           0.00
          asset |           0        110,800           0.00
   durable_ot~r |           0        110,800           0.00
     land_resid |           0        110,800           0.00
    real_estate |           0        110,800           0.00
   real_estat~g |           0        110,800           0.00
   asset_non_~n |           0        110,800           0.00
      asset_fin |           0        110,800           0.00
         wealth |           0        110,800           0.00
      wealth_ln |       3,590        110,800           3.24
            qtl |           0        110,800           0.00
----------------+-----------------------------------------------

. 
. qui compress

. save "${r_output}\NSS70_All",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files\NSS70_All.dta saved

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. 
. clear 

. set more off 

. 
. if "`c(username)'" == "wb308830" local pc = 0

. if "`c(username)'" != "wb308830" local pc = 1

. if `pc' == 0 global root "C:\Users\wb308830\OneDrive - WBG\Documents\TN\Data\NSS 70"

. if `pc' == 0 global root_68 "C:\Users\wb308830\OneDrive - WBG\Documents\TN\Data\NSS 68"

. if `pc' != 0 global root "C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70"

. if `pc' != 0 global root_68 "C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS68"

. if `pc' != 0 global script "C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\Housing_git\nss\Survey_NSS"

. 
. di "$root"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70

. global r_input "${root}\Raw Data & Dictionaries"

. di "${r_input}"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Raw Data & Dictionaries

. global r_output "${root}\Data Output Files"

. di "${r_output}"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files

. global r_output_68 "${root_68}\Data Output Files"

. di "${r_output_68}"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS68\Data Output Files

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. clear 

. set more off 

. 
. if "`c(username)'" == "wb308830" local pc = 0

. if "`c(username)'" != "wb308830" local pc = 1

. if `pc' == 0 global root "C:\Users\wb308830\OneDrive - WBG\Documents\TN\Data\NSS 70"

. if `pc' == 0 global root_68 "C:\Users\wb308830\OneDrive - WBG\Documents\TN\Data\NSS 68"

. if `pc' != 0 global root "C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70"

. if `pc' != 0 global root_68 "C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS68"

. if `pc' != 0 global script "C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\Housing_git\nss\Survey_NSS"

. 
. di "$root"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70

. global r_input "${root}\Raw Data & Dictionaries"

. di "${r_input}"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Raw Data & Dictionaries

. global r_output "${root}\Data Output Files"

. di "${r_output}"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files

. global r_output_68 "${root_68}\Data Output Files"

. di "${r_output_68}"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS68\Data Output Files

. 
. //log using "${script}\NSS68\03_2_NSS68_Residual_Income_New.log",replace
. set linesize 255

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. use "${r_output_68}\nss68_ria_master.dta",clear 

. bysort state: keep if _n == 1
(41,932 observations deleted)

. keep state pline_nhs_*

. 
. merge 1:m State using "${r_output}\NSS70_All.dta"
variable State not found
r(111);

end of do-file

r(111);

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. use "${r_output_68}\nss68_ria_master.dta",clear 

. bysort state: keep if _n == 1
(41,932 observations deleted)

. keep state pline_nhs_*

. 
. merge 1:m state using "${r_output}\NSS70_All.dta"
variable state not found
r(111);

end of do-file

r(111);

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. use "${r_output_68}\nss68_ria_master.dta",clear 

. bysort state: keep if _n == 1
(41,932 observations deleted)

. keep state pline_nhs_*

. 
. merge 1:m state using "${r_output}\NSS70_All.dta"
variable state not found
r(111);

end of do-file

r(111);

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. use "${r_output_68}\nss68_ria_master.dta",clear 

. bysort state: keep if _n == 1
(41,932 observations deleted)

. keep state pline_nhs_*

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. merge 1:m state using "${r_output}\NSS70_All.dta"
variable state not found
r(111);

end of do-file

r(111);

. use "${r_output}\NSS70_All.dta",clear

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. ****************************************************************************
. * Description: Import NSS70 from Raw Files and save dta to Output Folder
. * Date: Jan 12, 2020
. * Version 2
. * Last Editor: Aline
. ****************************************************************************
. 
. ****************************************************************************
. clear 

. clear matrix

. ****************************************************************************
. 
. ****************************************************************************
. * Determine Whose Machine is running the code and set the global directory
. ****************************************************************************
. if "`c(username)'" == "wb308830" local pc = 0

. if "`c(username)'" != "wb308830" local pc = 1

. if `pc' == 0 global root "C:\Users\wb308830\OneDrive - WBG\Documents\TN\Data\NSS 70"

. if `pc' != 0 global root "C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70"

. 
. di "$root"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70

. global r_input "${root}\Raw Data & Dictionaries"

. di "${r_input}"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Raw Data & Dictionaries

. global r_output "${root}\Data Output Files"

. 
. ****************************************************************************
. 
. *gen date of survey 
. use "${r_input}\Visit 1_Block 1&2_Identification of sample household and particulars of field operations.dta",clear

. gen month = real(substr(Survey_Date,3,2))

. gen year = 2013 //there's 2017 and 2019 should be mistake

. 
. gen date_survey = ym(year,month)

. format date_survey %tmMCY

. 
. rename State_District st_dc_70

. merge m:1 st_dc_70 using "${r_input}\mega_st_dc_70.dta"

    Result                           # of obs.
    -----------------------------------------
    not matched                        86,248
        from master                    86,246  (_merge==1)
        from using                          2  (_merge==2)

    matched                            24,554  (_merge==3)
    -----------------------------------------

. drop if _merge == 2
(2 observations deleted)

. 
. gen mega_dc = (_merge == 3)

. label var mega_dc "district with more than million population"

. 
. rename State state

. 
. keep HHID date_survey mega_dc state

. save "${r_output}\b2",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files\b2.dta saved

. 
. 
. *gen id, wgt (hhwgt, popwgt) b3
. use "${r_input}\Visit 1_Block 3_Household Characteristics.dta",clear

. 
. rename (b3q1 Sector) (hhsize sector)

. //gen hhwgt = MLT 
. gen hhwgt = Weight_SS 

. 
. destring(hhsize),replace
hhsize: all characters numeric; replaced as byte

. gen pwgt = hhwgt * hhsize

. 
. destring(sector), replace
sector: all characters numeric; replaced as byte

. gen urban = sector - 1

. 
. keep HHID hhwgt pwgt hhsize sector urban Weight_SS Weight_SC

. save "${r_output}\b3",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files\b3.dta saved

. 
. *gender from b4 (4)
. use "${r_input}\Visit 1 _Block 4_Demographic and other particulars of household members.dta",clear

. *Keep head 
. keep if b4q1 == "01" // keep heads only 
(408,795 observations deleted)

. ren b4q5 head_age 

. 
. ren  b4q4 head_gender 

. destring head_gender, replace
head_gender: all characters numeric; replaced as byte

. label define gender 1 "Male" 2 "Female"

. label values head_gender gender 

. gen head_female = (head_gender == 2)*100

. 
. keep HHID head_age head_gender head_female

. save "${r_output}\b4",replace 
file C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files\b4.dta saved

. 
. *Asset non_fin： land from b5.1 & b5.2 (rural & urban) srl 99
. use "${r_input}\Visit 1_Block 5pt1_Details of land owned by the household as on 30.06.12.dta",clear

. sum b5_1_6

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
      b5_1_6 |    223,958    630116.4     2835074          0   2.49e+08

. rename State state

. 
. egen double land_r = sum(b5_1_6*(b5_1_1 == "99")), by(HHID)

. egen double land_r_man = sum(b5_1_6*(b5_1_1 != "99")), by(HHID)

. egen double land_r_resid = sum(b5_1_6*(b5_1_1 != "99")*( b5_1_3 == "10")), by(HHID)

. duplicates drop HHID, force

Duplicates in terms of HHID

(156,468 observations deleted)

. 
. *Check the manual (man) sum with survey sum
. count if land_r > land_r_man
  0

. count if land_r < land_r_man
  15

. 
. drop land_r

. rename land_r_man land_r 

. 
. keep HHID land_r land_r_resid

. save "${r_output}\b5_1",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS70\Data Output Files\b5_1.dta saved

. 
. use "${r_input}\Visit 1_Block 5pt2_Details of land owned by the household as on 30.06.12.dta",clear

. count if b5_2_6 < 0
  2

. replace b5_2_6 = . if b5_2_6 < 0
(2 real changes made, 2 to missing)

. 
. egen double land_u = sum(b5_2_6*(b5_2_1 == "99")), by(HHID)

. egen double land_u_man = sum(b5_2_6*(b5_2_1 != "99")), by(HHID)

. egen double land_u_resid = sum(b5_2_6*(b5_2_1 != "99")*( b5_2_3 == "10")), by(HHID)

. 
. duplicates drop HHID, force

Duplicates in terms of HHID

(41,892 observations deleted)

. 
. *Check the manual (man) sum with surve
> y sum
. count if land_u > land_u_man
  0

. count if land_u < land_u_man
  16

. 
. drop land_u

. rename land_u_man land_u

. 
. keep HHID land_u land_u_resid

. save "${r_output}\b5_2",replace
file C:\Users\wb500886\OneDrive - WBG\7_
> Housing\survey_all\nss_data\NSS70\Data
>  Output Files\b5_2.dta saved

. 
. 
. 
. *Asset non_fin: building and construct
> ions b6 srl 11
. use "${r_input}\Visit 1_Block 6_Buildi
> ngs and other constructions owned by t
> he household as on 30.06.2012.dta",cle
> ar

. sum b6_q6

    Variable |        Obs        Mean   
>  Std. Dev.       Min        Max
-------------+--------------------------
> -------------------------------
       b6_q6 |    244,737    479786.6   
>   8839515          0   1.85e+09

. 
. egen double building_all = sum(b6_q6*(
> b6_q3 == "11")), by(HHID)

. egen double building_all_man = sum(b6_
> q6*(b6_q3 != "11")),  by(HHID)

. 
. egen double building_resid = sum(b6_q6
> *(inlist(b6_q3,"01","02","03"))), by(H
> HID)

. egen double building_resid_area = sum(b6_q5*(inlis
> t(b6_q3,"01","02","03"))), by(HHID)

. 
. egen double building_dwelling = sum(b6_q6*(b6_q3 =
> = "01")), by(HHID)

. egen double building_dwelling_area = sum(b6_q5*(b6
> _q3 == "01")), by(HHID)

. 
. duplicates drop HHID,  force

Duplicates in terms of HHID

(149,298 observations deleted)

. 
. keep HHID building_all* building_resid building_re
> sid_area building_dwelling building_dwelling_area

. 
. *Check the manual (man) sum with survey sum
. count if building_resid > building_all
  2

. count if building_resid > building_all_man
  0

. 
. drop building_all

. ren building_all_man building_all 

. 
. save "${r_output}\b6",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\surv
> ey_all\nss_data\NSS70\Data Output Files\b6.dta sav
> ed

. 
. *Asset non_fin: livestock and poultry b7 srl 22 
. use "${r_input}\Visit 1_Block 7_Livestock and poul
> try owned by the household on 30.06.2012.dta",clea
> r

. destring b7_q2,replace
b7_q2: all characters numeric; replaced as byte

. sum b7_q5

    Variable |        Obs        Mean    Std. Dev.  
>      Min        Max
-------------+--------------------------------------
> -------------------
       b7_q5 |    176,881    23115.77    42294.12   
>        0    2590000

. 
. egen double livestock = sum(b7_q5*(b7_q2 == 22)), 
> by(HHID)

. egen double livestock_man = sum(b7_q5*(inrange(b7_
> q2,17,21))), by(HHID)

. duplicates drop HHID, force

Duplicates in terms of HHID

(132,557 observations deleted)

. 
. *Check the manual (man) sum with survey sum
. count if livestock > livestock_man
  0

. count if livestock < livestock_man
  14

. 
. drop livestock

. rename livestock_man livestock

. 
. keep HHID livestock

. save "${r_output}\b7",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\surv
> ey_all\nss_data\NSS70\Data Output Files\b7.dta sav
> ed

. 
. *Asset non_fin: transport equipment b8: srl 8
. use "${r_input}\Visit 1_Block 8_Transport equipmen
> t owned by the household on 30.06.2012.dta",clear

. sum b8_q5

    Variable |        Obs        Mean    Std. Dev.  
>      Min        Max
-------------+--------------------------------------
> -------------------
       b8_q5 |    166,428    64309.42      250881   
>        0   2.07e+07

. 
. egen double trspt = sum(b8_q5*(b8_q2 == "08")), by
> (HHID)

. egen double trspt_man = sum(b8_q5*(b8_q2 != "08"))
> , by(HHID)

. duplicates drop HHID, force

Duplicates in terms of HHID

(94,706 observations deleted)

. 
. *Check the manual (man) sum with survey sum
. count if trspt > trspt_man
  0

. count if trspt < trspt_man
  9

. 
. drop trspt

. rename trspt_man trspt

. 
. keep HHID trspt

. save "${r_output}\b8",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\surv
> ey_all\nss_data\NSS70\Data Output Files\b8.dta sav
> ed

. 
. *Asset non_fin: agricultural machinery and impleme
> nts b9: srl 8 
. use "${r_input}\Visit 1_Block 9_Agricultural machi
> nery and implements owned by the household on 30.0
> 6.2012.dta",clear

. sum b9_q4

    Variable |        Obs        Mean    Std. Dev.  
>      Min        Max
-------------+--------------------------------------
> -------------------
       b9_q4 |    120,458    7046.966    42346.08   
>       10    7700000

. 
. egen double agri = sum(b9_q4*(b9_q2 == "8")), by(H
> HID)

. egen double agri_man = sum(b9_q4*(b9_q2 != "8")), 
> by(HHID)

. duplicates drop HHID, force

Duplicates in terms of HHID

(72,196 observations deleted)

. 
. *Check the manual (man) sum with survey sum
. count if agri > agri_man
  0

. count if agri < agri_man
  2

. 
. drop agri

. rename agri_man agri

. 
. keep HHID agri

. save "${r_output}\b9",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\surv
> ey_all\nss_data\NSS70\Data Output Files\b9.dta sav
> ed

. 
. *Asset non_fin: non-farm business equipment b10 sr
> l 15
. use "${r_input}\Visit 1_Block 10_Non-farm business
>  equipment owned by the household as on 30.06.2012
> .dta",clear

. destring b10_q2,replace
b10_q2: all characters numeric; replaced as byte

. sum b10_q3 //issue with raw-data.

    Variable |        Obs        Mean    Std. Dev.  
>      Min        Max
-------------+--------------------------------------
> -------------------
      b10_q3 |        119           0           0   
>        0          0

. 
. egen double non_farm = sum(b10_q3*(b10_q2 == 15)),
>  by(HHID)

. egen double non_farm_man = sum(b10_q3*inrange(b10_
> q2,12,14)), by(HHID)

. duplicates drop HHID, force

Duplicates in terms of HHID

(60,778 observations deleted)

. 
. *Check the manual (man) sum with survey sum
. count if non_farm > non_farm_man
  0

. count if non_farm < non_farm_man
  0

. 
. drop non_farm_man

. keep HHID non_farm

. save "${r_output}\b10",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\surv
> ey_all\nss_data\NSS70\Data Output Files\b10.dta sa
> ved

. 
. *Asset fin: shares & debentures b11 
. use "${r_input}\Visit 1_Block 11_ Shares and deben
> tures owned by the household in co-operative  soci
> eties & companies as on 30.06.2012 .dta",clear

. 
.  *Check the manual (man) sum with survey sum
.   preserve

.   egen double shares = sum(b11_q6*(b11_q1 == "5"))
> , by(HHID)

.   egen double shares_man = sum(b11_q6*(b11_q1 != "
> 5")), by(HHID)

.   duplicates drop HHID, force

Duplicates in terms of HHID

(3,949 observations deleted)

.   count if shares > shares_man
  0

.   count if shares < shares_man
  0

.   restore 

. 
. sum b11_q6 if b11_q1 != "5" 

    Variable |        Obs        Mean    Std. Dev.  
>      Min        Max
-------------+--------------------------------------
> -------------------
      b11_q6 |      3,931    44989.44    324279.8   
>   -50000   1.00e+07

. replace b11_q6 = . if b11_q6<0 //filter out the no
> n-negative colums. 
(23 real changes made, 23 to missing)

. egen double shares = sum(b11_q6*(b11_q1 == "5")), 
> by(HHID)

. duplicates drop HHID, force

Duplicates in terms of HHID

(3,949 observations deleted)

. 
. keep HHID shares

. save "${r_output}\b11",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\surv
> ey_all\nss_data\NSS70\Data Output Files\b11.dta sa
> ved

. 
. *Asset fin: other financial assets b12 srl 11 
. use "${r_input}\Visit 1_Block 12_Financial assets 
> other than shares and debentures owned by the hous
> ehold as on 30.06.2012.dta",clear

. 
. destring b12_q1,replace
b12_q1: all characters numeric; replaced as byte

. count if b12_q3 < 0 
  1

. replace b12_q3 = . if b12_q3 <0
(1 real change made, 1 to missing)

. 
. egen double gold = sum(b12_q3*(b12_q1 == 12)), by(
> HHID)

. egen double fin_retire = sum(b12_q3*(inlist(b12_q1
> ,6,7))), by(HHID) //retirement account

. egen double fin_other = sum(b12_q3*(inrange(b12_q1
> ,1,5) )), by(HHID)

. 
. duplicates drop HHID, force

Duplicates in terms of HHID

(265,456 observations deleted)

.   
.   /*
> drop fin_other 
> ren fin_other_man fin_other
> */
. 
. keep HHID fin_other gold fin_retire

. save "${r_output}\b12",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\surv
> ey_all\nss_data\NSS70\Data Output Files\b12.dta sa
> ved

. 
. *Asset fin: amount receivable b13 (mortgage srl 1,
>  total srl 7)
. use "${r_input}\Visit 1_Block 13_Amount receivable
>  by the household against different heads as on 30
> .06.2012.dta",clear

. sum b13_q4

    Variable |        Obs        Mean    Std. Dev.  
>      Min        Max
-------------+--------------------------------------
> -------------------
      b13_q4 |     13,807    63848.05    419515.8   
>        0   2.00e+07

. 
. egen double fin_rec = sum(b13_q4*(b13_q2 == "7")),
>  by(HHID)

. egen double fin_rec_man = sum(b13_q4*(b13_q2 != "7
> ")), by(HHID)

. duplicates drop HHID, force

Duplicates in terms of HHID

(7,033 observations deleted)

. 
.   *Check the manual (man) sum with survey sum
.   count if fin_rec > fin_rec_man
  0

.   count if fin_rec < fin_rec_man
  2

.  
. drop fin_rec

. ren fin_rec_man fin_rec

. keep HHID fin_rec

. save "${r_output}\b13",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\surv
> ey_all\nss_data\NSS70\Data Output Files\b13.dta sa
> ved

. 
. *Debt: cash loands payable b14: Type of loan(8) Pu
> rpose of loan (11) Type of mortgage(13) , srl 99 (
> total)
. use "${r_input}\Visit 1_Block 14",clear

.  
.  *debt 
. gen debt = b14_q17 // 17 is the outstanding amount
>  on 30.06.2012
(74,953 missing values generated)

. gen debt_todt = b14_q16 //outstanding amount at th
> e date of survey. 
(2,415 missing values generated)

. sum debt,de

                            debt
----------------------------------------------------
> ---------
      Percentiles      Smallest
 1%            0              0
 5%         4200              0
10%         7420              0       Obs           
>   108,756
25%        17990              0       Sum of Wgt.   
>   108,756

50%        48800                      Mean          
>  169114.3
                        Largest       Std. Dev.     
>  931886.7
75%       140000       4.00e+07
90%       371695       4.00e+07       Variance      
>  8.68e+11
95%       638480       1.83e+08       Skewness      
>  142.1036
99%      1900207       1.83e+08       Kurtosis      
>  27330.57

. 
. gen temp_debt =  (b14_q1 == "99")*debt
(74,953 missing values generated)

. egen double total_debt = sum(temp_debt), by(HHID)

. drop temp_debt

. 
. gen temp_debt =  (b14_q1 != "99")*debt_todt
(2,415 missing values generated)

. egen double total_debt_m = sum(temp_debt),by(HHID)

. drop temp_debt

. 
. gen temp_debt_todt =  (b14_q1 == "99")*debt_todt
(2,415 missing values generated)

. egen double total_debt_todt = sum(temp_debt_todt),
>  by(HHID)

. drop temp_debt_todt

. 
. gen temp_debt_todt = (b14_q1 == "99")*debt_todt //
> to date of survey the total debt. 
(2,415 missing values generated)

. egen double total_debt_todt_m = sum(temp_debt_todt
> ), by(HHID)

. drop temp_debt_todt

. 
.  *check the manual total and the survey total
. count if total_debt > total_debt_m
  57,103

. count if total_debt < total_debt_m // manual has 5
> 68 observations where it is larger 
  92,115

. 
. tab b14_q1

 Serial no. |      Freq.     Percent        Cum.
------------+-----------------------------------
         01 |     73,719       40.13       40.13
         02 |     21,945       11.95       52.07
         03 |      8,024        4.37       56.44
         04 |      3,600        1.96       58.40
         05 |      1,514        0.82       59.23
         06 |        705        0.38       59.61
         07 |        380        0.21       59.82
         08 |        212        0.12       59.93
         09 |        117        0.06       59.99
         10 |         73        0.04       60.03
         11 |         45        0.02       60.06
         12 |         33        0.02       60.08
         13 |         19        0.01       60.09
         14 |         13        0.01       60.09
         15 |         11        0.01       60.10
         16 |         10        0.01       60.11
         17 |          8        0.00       60.11
         18 |          4        0.00       60.11
         19 |          3        0.00       60.11
         20 |          3        0.00       60.12
         21 |          1        0.00       60.12
         22 |          1        0.00       60.12
         23 |          1        0.00       60.12
         24 |          1        0.00       60.12
         25 |          1        0.00       60.12
         99 |     73,266       39.88      100.00
------------+-----------------------------------
      Total |    183,709      100.00

. sort HHID

. br HHID b14* if total_debt == total_debt_m //there
>  are hosueholds with no total liability coded.  

. //need to use the 99 total and not the manual to m
> atch the paper 
. 
.  *generate type of liabilty
. gen gold_loan = (b14_q12 == "05")*debt
(74,953 missing values generated)

. gen oth_secure_loan = (inlist(b14_q12,"01","02","0
> 6","07","08","09"))*debt
(74,953 missing values generated)

. gen mrtg_loan = (inlist(b14_q12,"03","04"))*debt
(74,953 missing values generated)

. 
. gen unsecure_loan = (b14_q12 == "10")*debt
(74,953 missing values generated)

. egen double secure_loan = rowtotal(mrtg_loan gold_
> loan oth_secure_loan) 

. 
.  *collapse at household level. 
. foreach type in secure_loan mrtg_loan gold_loan ot
> h_secure_loan unsecure_loan { 
  2. egen double total_`type' = sum(`type'), by(HHID
> )
  3. } 

. 
. keep HHID total*

. bys HHID: keep if _n == 1 // keep only one observa
> tion for each HH
(109,989 observations deleted)

. 
. mdesc total*

    Variable    |     Missing          Total     Per
> cent Missing
----------------+-----------------------------------
> ------------
     total_debt |           0         73,720        
>    0.00
   total_debt_m |           0         73,720        
>    0.00
   total_debt~t |           0         73,720        
>    0.00
   total_d~dt_m |           0         73,720        
>    0.00
   total_secu~n |           0         73,720        
>    0.00
   total_mrtg~n |           0         73,720        
>    0.00
   total_gold~n |           0         73,720        
>    0.00
   total_oth_~n |           0         73,720        
>    0.00
   total_unse~n |           0         73,720        
>    0.00
----------------+-----------------------------------
> ------------

. 
. save "${r_output}\b14",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\surv
> ey_all\nss_data\NSS70\Data Output Files\b14.dta sa
> ved

. 
. *Debt: kind of loan payable b15 col 11: housing 11
. use "${r_input}\Visit 1_Block 15_kind loans payabl
> e by the household.dta",replace

. save "${r_output}\b15",replace //late housing info
file C:\Users\wb500886\OneDrive - WBG\7_Housing\surv
> ey_all\nss_data\NSS70\Data Output Files\b15.dta sa
> ved

. 
. 
. *******merge to master data***********************
> *******
. use "${r_output}\b2",clear

. local flist "b3 b14 b13 b12 b11 b10 b9 b8 b7 b6 b5
> _1 b5_2 b4"

. 
. foreach f of local flist{
  2. merge 1:1 HHID using "${r_output}/`f'"
  3. drop _merge
  4. }

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                           110,800  (_mer
> ge==3)
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                        37,080
        from master                    37,080  (_mer
> ge==1)
        from using                          0  (_mer
> ge==2)

    matched                            73,720  (_mer
> ge==3)
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                       104,025
        from master                   104,025  (_mer
> ge==1)
        from using                          0  (_mer
> ge==2)

    matched                             6,775  (_mer
> ge==3)
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                         9,388
        from master                     9,388  (_mer
> ge==1)
        from using                          0  (_mer
> ge==2)

    matched                           101,412  (_mer
> ge==3)
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                       106,964
        from master                   106,964  (_mer
> ge==1)
        from using                          0  (_mer
> ge==2)

    matched                             3,836  (_mer
> ge==3)
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                        86,248
        from master                    86,248  (_mer
> ge==1)
        from using                          0  (_mer
> ge==2)

    matched                            24,552  (_mer
> ge==3)
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                        62,530
        from master                    62,530  (_mer
> ge==1)
        from using                          0  (_mer
> ge==2)

    matched                            48,270  (_mer
> ge==3)
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                        39,051
        from master                    39,051  (_mer
> ge==1)
        from using                          0  (_mer
> ge==2)

    matched                            71,749  (_mer
> ge==3)
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                        66,393
        from master                    66,393  (_mer
> ge==1)
        from using                          0  (_mer
> ge==2)

    matched                            44,407  (_mer
> ge==3)
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                        15,312
        from master                    15,312  (_mer
> ge==1)
        from using                          0  (_mer
> ge==2)

    matched                            95,488  (_mer
> ge==3)
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                        43,053
        from master                    43,053  (_mer
> ge==1)
        from using                          0  (_mer
> ge==2)

    matched                            67,747  (_mer
> ge==3)
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                        76,583
        from master                    76,583  (_mer
> ge==1)
        from using                          0  (_mer
> ge==2)

    matched                            34,217  (_mer
> ge==3)
    -----------------------------------------

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                           110,800  (_mer
> ge==3)
    -----------------------------------------

. 
. *clean up missing value
. global asset "land_r land_u building_all livestock
>  trspt agri non_farm shares fin_other fin_retire g
> old fin_rec building_resid building_dwelling land_
> r_resid land_u_resid"

. global debt "total_debt total_debt_m total_debt_to
> dt total_debt_todt_m total_secure_loan total_mrtg_
> loan total_gold_loan total_oth_secure_loan total_u
> nsecure_loan"

. 
. mdesc $asset 

    Variable    |     Missing          Total     Per
> cent Missing
----------------+-----------------------------------
> ------------
         land_r |      43,053        110,800        
>   38.86
         land_u |      76,583        110,800        
>   69.12
   building_all |      15,312        110,800        
>   13.82
      livestock |      66,393        110,800        
>   59.92
          trspt |      39,051        110,800        
>   35.24
           agri |      62,530        110,800        
>   56.44
       non_farm |      86,248        110,800        
>   77.84
         shares |     106,964        110,800        
>   96.54
      fin_other |       9,388        110,800        
>    8.47
     fin_retire |       9,388        110,800        
>    8.47
           gold |       9,388        110,800        
>    8.47
        fin_rec |     104,025        110,800        
>   93.89
   building_r~d |      15,312        110,800        
>   13.82
   building_d~g |      15,312        110,800        
>   13.82
   land_r_resid |      43,053        110,800        
>   38.86
   land_u_resid |      76,583        110,800        
>   69.12
----------------+-----------------------------------
> ------------

. mdesc $debt 

    Variable    |     Missing          Total     Per
> cent Missing
----------------+-----------------------------------
> ------------
     total_debt |      37,080        110,800        
>   33.47
   total_debt_m |      37,080        110,800        
>   33.47
   total_debt~t |      37,080        110,800        
>   33.47
   total_d~dt_m |      37,080        110,800        
>   33.47
   total_secu~n |      37,080        110,800        
>   33.47
   total_mrtg~n |      37,080        110,800        
>   33.47
   total_gold~n |      37,080        110,800        
>   33.47
   total_oth_~n |      37,080        110,800        
>   33.47
   total_unse~n |      37,080        110,800        
>   33.47
----------------+-----------------------------------
> ------------

. 
. foreach var in $asset $debt {
  2. replace `var' = 0 if mi(`var')
  3. }
(43,053 real changes made)
(76,583 real changes made)
(15,312 real changes made)
(66,393 real changes made)
(39,051 real changes made)
(62,530 real changes made)
(86,248 real changes made)
(106,964 real changes made)
(9,388 real changes made)
(9,388 real changes made)
(9,388 real changes made)
(104,025 real changes made)
(15,312 real changes made)
(15,312 real changes made)
(43,053 real changes made)
(76,583 real changes made)
(37,080 real changes made)
(37,080 real changes made)
(37,080 real changes made)
(37,080 real changes made)
(37,080 real changes made)
(37,080 real changes made)
(37,080 real changes made)
(37,080 real changes made)
(37,080 real changes made)

. 
. *generate asset value by type
. egen double asset = rowtotal(land_r land_u buildin
> g_all livestock trspt agri non_farm shares fin_oth
> er fin_retire gold fin_rec) 

. 
. egen double durable_other = rowtotal(livestock trs
> pt agri non_farm)

. 
. egen double land_resid = rowtotal(land_r_resid lan
> d_u_resid)

. 
. egen double real_estate = rowtotal(building_all la
> nd_r land_u)

. 
. egen double real_estate_dwelling = rowtotal(buildi
> ng_dwelling land_resid)

. 
. egen double asset_non_fin = rowtotal(real_estate g
> old durable_other)

. 
. egen double asset_fin = rowtotal(shares fin_other 
> fin_rec) 

. 
. *generate wealth data
. gen double wealth = asset - total_debt

. sum wealth,de

                           wealth
----------------------------------------------------
> ---------
      Percentiles      Smallest
 1%       -69900      -8.15e+07
 5%       8797.5      -3.91e+07
10%        50100       -9320388       Obs           
>   110,800
25%       184010       -7723959       Sum of Wgt.   
>   110,800

50%       544200                      Mean          
>   1699471
                        Largest       Std. Dev.     
>  1.13e+07
75%      1463800       1.00e+09
90%      3540500       1.45e+09       Variance      
>  1.28e+14
95%      6030593       1.75e+09       Skewness      
>  106.6886
99%     1.68e+07       1.85e+09       Kurtosis      
>  15031.28

. gen double wealth_ln = ln(wealth) //1% negative 
(3,590 missing values generated)

. 
. xtile qtl = wealth [aw = hhwgt],n(5)

. 
. *identify districts that located in mega U.A. (URB
> AN AGGLOMERATIONS) more than ie6 population
. replace mega_dc = 0 if urban == 0
(8,401 real changes made)

. 
. *house keeping
. mdesc *

    Variable    |     Missing          Total     Per
> cent Missing
----------------+-----------------------------------
> ------------
           HHID |           0        110,800        
>    0.00
          state |           0        110,800        
>    0.00
    date_survey |           0        110,800        
>    0.00
        mega_dc |           0        110,800        
>    0.00
         sector |           0        110,800        
>    0.00
         hhsize |           0        110,800        
>    0.00
      Weight_SS |           0        110,800        
>    0.00
      Weight_SC |           0        110,800        
>    0.00
          hhwgt |           0        110,800        
>    0.00
           pwgt |           0        110,800        
>    0.00
          urban |           0        110,800        
>    0.00
     total_debt |           0        110,800        
>    0.00
   total_debt_m |           0        110,800        
>    0.00
   total_debt~t |           0        110,800        
>    0.00
   total_d~dt_m |           0        110,800        
>    0.00
   total_secu~n |           0        110,800        
>    0.00
   total_mrtg~n |           0        110,800        
>    0.00
   total_gold~n |           0        110,800        
>    0.00
   total_oth_~n |           0        110,800        
>    0.00
   total_unse~n |           0        110,800        
>    0.00
        fin_rec |           0        110,800        
>    0.00
           gold |           0        110,800        
>    0.00
     fin_retire |           0        110,800        
>    0.00
      fin_other |           0        110,800        
>    0.00
         shares |           0        110,800        
>    0.00
       non_farm |           0        110,800        
>    0.00
           agri |           0        110,800        
>    0.00
          trspt |           0        110,800        
>    0.00
      livestock |           0        110,800        
>    0.00
   building_all |           0        110,800        
>    0.00
   building_r~d |           0        110,800        
>    0.00
   building_r~a |      15,312        110,800        
>   13.82
   building_d~g |           0        110,800        
>    0.00
   building_d~a |      15,312        110,800        
>   13.82
         land_r |           0        110,800        
>    0.00
   land_r_resid |           0        110,800        
>    0.00
         land_u |           0        110,800        
>    0.00
   land_u_resid |           0        110,800        
>    0.00
    head_gender |           0        110,800        
>    0.00
       head_age |           0        110,800        
>    0.00
    head_female |           0        110,800        
>    0.00
          asset |           0        110,800        
>    0.00
   durable_ot~r |           0        110,800        
>    0.00
     land_resid |           0        110,800        
>    0.00
    real_estate |           0        110,800        
>    0.00
   real_estat~g |           0        110,800        
>    0.00
   asset_non_~n |           0        110,800        
>    0.00
      asset_fin |           0        110,800        
>    0.00
         wealth |           0        110,800        
>    0.00
      wealth_ln |       3,590        110,800        
>    3.24
            qtl |           0        110,800        
>    0.00
----------------+-----------------------------------
> ------------

. 
. qui compress

. save "${r_output}\NSS70_All",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\surv
> ey_all\nss_data\NSS70\Data Output Files\NSS70_All.
> dta saved

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_0
> 00000.tmp"

. clear 

. set more off 

. 
. if "`c(username)'" == "wb308830" local pc = 0

. if "`c(username)'" != "wb308830" local pc = 1

. if `pc' == 0 global root "C:\Users\wb308830\OneDri
> ve - WBG\Documents\TN\Data\NSS 70"

. if `pc' == 0 global root_68 "C:\Users\wb308830\One
> Drive - WBG\Documents\TN\Data\NSS 68"

. if `pc' != 0 global root "C:\Users\wb500886\OneDri
> ve - WBG\7_Housing\survey_all\nss_data\NSS70"

. if `pc' != 0 global root_68 "C:\Users\wb500886\One
> Drive - WBG\7_Housing\survey_all\nss_data\NSS68"

. if `pc' != 0 global script "C:\Users\wb500886\OneD
> rive - WBG\7_Housing\survey_all\Housing_git\nss\Su
> rvey_NSS"

. 
. di "$root"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_al
> l\nss_data\NSS70

. global r_input "${root}\Raw Data & Dictionaries"

. di "${r_input}"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_al
> l\nss_data\NSS70\Raw Data & Dictionaries

. global r_output "${root}\Data Output Files"

. di "${r_output}"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_al
> l\nss_data\NSS70\Data Output Files

. global r_output_68 "${root_68}\Data Output Files"

. di "${r_output_68}"
C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_al
> l\nss_data\NSS68\Data Output Files

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_0
> 00000.tmp"

. use "${r_output_68}\nss68_ria_master.dta",clear 

. bysort state: keep if _n == 1
(41,932 observations deleted)

. keep state pline_nhs_*

. 
. merge 1:m state using "${r_output}\NSS70_All.dta"
key variable state is byte in master but str2 in
  using data
    Each key variable -- the variables on which
    observations are matched -- must be of the
    same generic type in the master and using
    datasets.  Same generic type means both
    numeric or both string.
r(106);

end of do-file

r(106);

. tab state

            State |      Freq.     Percent        Cu
> m.
------------------+---------------------------------
> --
  Jammu & kashmir |          1        2.86        2.
> 86
 Himachal pradesh |          1        2.86        5.
> 71
           Punjab |          1        2.86        8.
> 57
       Chandigarh |          1        2.86       11.
> 43
      Uttaranchal |          1        2.86       14.
> 29
          Haryana |          1        2.86       17.
> 14
            Delhi |          1        2.86       20.
> 00
        Rajasthan |          1        2.86       22.
> 86
    Uttar pradesh |          1        2.86       25.
> 71
            Bihar |          1        2.86       28.
> 57
           Sikkim |          1        2.86       31.
> 43
Arunachal pradesh |          1        2.86       34.
> 29
         Nagaland |          1        2.86       37.
> 14
          Manipur |          1        2.86       40.
> 00
          Mizoram |          1        2.86       42.
> 86
          Tripura |          1        2.86       45.
> 71
        Meghalaya |          1        2.86       48.
> 57
            Assam |          1        2.86       51.
> 43
      West bengal |          1        2.86       54.
> 29
        Jharkhand |          1        2.86       57.
> 14
           Orissa |          1        2.86       60.
> 00
      Chattisgarh |          1        2.86       62.
> 86
   Madhya pradesh |          1        2.86       65.
> 71
          Gujarat |          1        2.86       68.
> 57
      Daman & diu |          1        2.86       71.
> 43
     D & n haveli |          1        2.86       74.
> 29
       Maharastra |          1        2.86       77.
> 14
   Andhra pradesh |          1        2.86       80.
> 00
        Karnataka |          1        2.86       82.
> 86
              Goa |          1        2.86       85.
> 71
      Lakshadweep |          1        2.86       88.
> 57
           Kerala |          1        2.86       91.
> 43
       Tamil nadu |          1        2.86       94.
> 29
      Pondicherry |          1        2.86       97.
> 14
    A & n islands |          1        2.86      100.
> 00
------------------+---------------------------------
> --
            Total |         35      100.00

. label l state
state:
           1 Jammu & kashmir
           2 Himachal pradesh
           3 Punjab
           4 Chandigarh
           5 Uttaranchal
           6 Haryana
           7 Delhi
           8 Rajasthan
           9 Uttar pradesh
          10 Bihar
          11 Sikkim
          12 Arunachal pradesh
          13 Nagaland
          14 Manipur
          15 Mizoram
          16 Tripura
          17 Meghalaya
          18 Assam
          19 West bengal
          20 Jharkhand
          21 Orissa
          22 Chattisgarh
          23 Madhya pradesh
          24 Gujarat
          25 Daman & diu
          26 D & n haveli
          27 Maharastra
          28 Andhra pradesh
          29 Karnataka
          30 Goa
          31 Lakshadweep
          32 Kerala
          33 Tamil nadu
          34 Pondicherry
          35 A & n islands

. use "${r_output}\NSS70_All.dta",clear

. label l state
value label state not found
r(111);

. tab state

      State |      Freq.     Percent    
>     Cum.
------------+---------------------------
> --------
         01 |      2,189        1.98    
>     1.98
         02 |      1,445        1.30    
>     3.28
         03 |      2,556        2.31    
>     5.59
         04 |        334        0.30    
>     5.89
         05 |        969        0.87    
>     6.76
         06 |      2,084        1.88    
>     8.64
         07 |      2,062        1.86    
>    10.50
         08 |      4,869        4.39    
>    14.90
         09 |     13,543       12.22    
>    27.12
         10 |      4,898        4.42    
>    31.54
         11 |        883        0.80    
>    32.34
         12 |      1,008        0.91    
>    33.25
         13 |      1,008        0.91    
>    34.16
         14 |      2,445        2.21    
>    36.37
         15 |      1,276        1.15    
>    37.52
         16 |      2,464        2.22    
>    39.74
         17 |      1,434        1.29    
>    41.04
         18 |      3,929        3.55    
>    44.58
         19 |      8,702        7.85    
>    52.44
         20 |      2,305        2.08    
>    54.52
         21 |      4,127        3.72    
>    58.24
         22 |      1,931        1.74    
>    59.98
         23 |      6,093        5.50    
>    65.48
         24 |      4,517        4.08    
>    69.56
         25 |        224        0.20    
>    69.76
         26 |        224        0.20    
>    69.96
         27 |      9,125        8.24    
>    78.20
         28 |      4,168        3.76    
>    81.96
         29 |      4,684        4.23    
>    86.19
         30 |        336        0.30    
>    86.49
         31 |        223        0.20    
>    86.69
         32 |      4,399        3.97    
>    90.66
         33 |      6,842        6.18    
>    96.84
         34 |        448        0.40    
>    97.24
         35 |        402        0.36    
>    97.60
         36 |      2,654        2.40    
>   100.00
------------+---------------------------
> --------
      Total |    110,800      100.00

. do "C:\Users\wb500886\AppData\Local\Te
> mp\STD3664_000000.tmp"

. use "${r_output_68}\nss68_ria_master.d
> ta",clear 

. bysort state: keep if _n == 1
(41,932 observations deleted)

. keep state pline_nhs_*

. 
end of do-file

. tostring state, format(%012.0f)
must specify either generate or replace
option
r(198);

. tostring state, format(%012.0f) replac
> e
state has value label; no replace

. tab state

            State |      Freq.     Perce
> nt        Cum.
------------------+---------------------
> --------------
  Jammu & kashmir |          1        2.
> 86        2.86
 Himachal pradesh |          1        2.
> 86        5.71
           Punjab |          1        2.
> 86        8.57
       Chandigarh |          1        2.
> 86       11.43
      Uttaranchal |          1        2.
> 86       14.29
          Haryana |          1        2.
> 86       17.14
            Delhi |          1        2.
> 86       20.00
        Rajasthan |          1        2.
> 86       22.86
    Uttar pradesh |          1        2.
> 86       25.71
            Bihar |          1        2.
> 86       28.57
           Sikkim |          1        2.
> 86       31.43
Arunachal pradesh |          1        2.
> 86       34.29
         Nagaland |          1        2.
> 86       37.14
          Manipur |          1        2.
> 86       40.00
          Mizoram |          1        2.
> 86       42.86
          Tripura |          1        2.
> 86       45.71
        Meghalaya |          1        2.
> 86       48.57
            Assam |          1        2.
> 86       51.43
      West bengal |          1        2.
> 86       54.29
        Jharkhand |          1        2.
> 86       57.14
           Orissa |          1        2.
> 86       60.00
      Chattisgarh |          1        2.
> 86       62.86
   Madhya pradesh |          1        2.
> 86       65.71
          Gujarat |          1        2.
> 86       68.57
      Daman & diu |          1        2.
> 86       71.43
     D & n haveli |          1        2.
> 86       74.29
       Maharastra |          1        2.
> 86       77.14
   Andhra pradesh |          1        2.
> 86       80.00
        Karnataka |          1        2.
> 86       82.86
              Goa |          1        2.
> 86       85.71
      Lakshadweep |          1        2.
> 86       88.57
           Kerala |          1        2.
> 86       91.43
       Tamil nadu |          1        2.
> 86       94.29
      Pondicherry |          1        2.
> 86       97.14
    A & n islands |          1        2.
> 86      100.00
------------------+---------------------
> --------------
            Total |         35      100.
> 00

. tab state

            State |      Freq.     Percent        Cum.
------------------+-----------------------------------
  Jammu & kashmir |          1        2.86        2.86
 Himachal pradesh |          1        2.86        5.71
           Punjab |          1        2.86        8.57
       Chandigarh |          1        2.86       11.43
      Uttaranchal |          1        2.86       14.29
          Haryana |          1        2.86       17.14
            Delhi |          1        2.86       20.00
        Rajasthan |          1        2.86       22.86
    Uttar pradesh |          1        2.86       25.71
            Bihar |          1        2.86       28.57
           Sikkim |          1        2.86       31.43
Arunachal pradesh |          1        2.86       34.29
         Nagaland |          1        2.86       37.14
          Manipur |          1        2.86       40.00
          Mizoram |          1        2.86       42.86
          Tripura |          1        2.86       45.71
        Meghalaya |          1        2.86       48.57
            Assam |          1        2.86       51.43
      West bengal |          1        2.86       54.29
        Jharkhand |          1        2.86       57.14
           Orissa |          1        2.86       60.00
      Chattisgarh |          1        2.86       62.86
   Madhya pradesh |          1        2.86       65.71
          Gujarat |          1        2.86       68.57
      Daman & diu |          1        2.86       71.43
     D & n haveli |          1        2.86       74.29
       Maharastra |          1        2.86       77.14
   Andhra pradesh |          1        2.86       80.00
        Karnataka |          1        2.86       82.86
              Goa |          1        2.86       85.71
      Lakshadweep |          1        2.86       88.57
           Kerala |          1        2.86       91.43
       Tamil nadu |          1        2.86       94.29
      Pondicherry |          1        2.86       97.14
    A & n islands |          1        2.86      100.00
------------------+-----------------------------------
            Total |         35      100.00

. tostring state, format(%012.0f) replace
state has value label; no replace

. label l state
state:
           1 Jammu & kashmir
           2 Himachal pradesh
           3 Punjab
           4 Chandigarh
           5 Uttaranchal
           6 Haryana
           7 Delhi
           8 Rajasthan
           9 Uttar pradesh
          10 Bihar
          11 Sikkim
          12 Arunachal pradesh
          13 Nagaland
          14 Manipur
          15 Mizoram
          16 Tripura
          17 Meghalaya
          18 Assam
          19 West bengal
          20 Jharkhand
          21 Orissa
          22 Chattisgarh
          23 Madhya pradesh
          24 Gujarat
          25 Daman & diu
          26 D & n haveli
          27 Maharastra
          28 Andhra pradesh
          29 Karnataka
          30 Goa
          31 Lakshadweep
          32 Kerala
          33 Tamil nadu
          34 Pondicherry
          35 A & n islands

. gen state_nm = state

. tab state_nm

   state_nm |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |          1        2.86        2.86
          2 |          1        2.86        5.71
          3 |          1        2.86        8.57
          4 |          1        2.86       11.43
          5 |          1        2.86       14.29
          6 |          1        2.86       17.14
          7 |          1        2.86       20.00
          8 |          1        2.86       22.86
          9 |          1        2.86       25.71
         10 |          1        2.86       28.57
         11 |          1        2.86       31.43
         12 |          1        2.86       34.29
         13 |          1        2.86       37.14
         14 |          1        2.86       40.00
         15 |          1        2.86       42.86
         16 |          1        2.86       45.71
         17 |          1        2.86       48.57
         18 |          1        2.86       51.43
         19 |          1        2.86       54.29
         20 |          1        2.86       57.14
         21 |          1        2.86       60.00
         22 |          1        2.86       62.86
         23 |          1        2.86       65.71
         24 |          1        2.86       68.57
         25 |          1        2.86       71.43
         26 |          1        2.86       74.29
         27 |          1        2.86       77.14
         28 |          1        2.86       80.00
         29 |          1        2.86       82.86
         30 |          1        2.86       85.71
         31 |          1        2.86       88.57
         32 |          1        2.86       91.43
         33 |          1        2.86       94.29
         34 |          1        2.86       97.14
         35 |          1        2.86      100.00
------------+-----------------------------------
      Total |         35      100.00

. tostring state_nm, format(%012.0f) replace
state_nm was float now str12

. state_nm
command state_nm is unrecognized
r(199);

. tab state_nm

    state_nm |      Freq.     Percent        Cum.
-------------+-----------------------------------
000000000001 |          1        2.86        2.86
000000000002 |          1        2.86        5.71
000000000003 |          1        2.86        8.57
000000000004 |          1        2.86       11.43
000000000005 |          1        2.86       14.29
000000000006 |          1        2.86       17.14
000000000007 |          1        2.86       20.00
000000000008 |          1        2.86       22.86
000000000009 |          1        2.86       25.71
000000000010 |          1        2.86       28.57
000000000011 |          1        2.86       31.43
000000000012 |          1        2.86       34.29
000000000013 |          1        2.86       37.14
000000000014 |          1        2.86       40.00
000000000015 |          1        2.86       42.86
000000000016 |          1        2.86       45.71
000000000017 |          1        2.86       48.57
000000000018 |          1        2.86       51.43
000000000019 |          1        2.86       54.29
000000000020 |          1        2.86       57.14
000000000021 |          1        2.86       60.00
000000000022 |          1        2.86       62.86
000000000023 |          1        2.86       65.71
000000000024 |          1        2.86       68.57
000000000025 |          1        2.86       71.43
000000000026 |          1        2.86       74.29
000000000027 |          1        2.86       77.14
000000000028 |          1        2.86       80.00
000000000029 |          1        2.86       82.86
000000000030 |          1        2.86       85.71
000000000031 |          1        2.86       88.57
000000000032 |          1        2.86       91.43
000000000033 |          1        2.86       94.29
000000000034 |          1        2.86       97.14
000000000035 |          1        2.86      100.00
-------------+-----------------------------------
       Total |         35      100.00

. tostring state_nm, format(%01.0f) replace
state_nm already string; no replace

. drop state_nm

. gen state_nm = state

. tostring state_nm, format(%01.0f) replace
state_nm was float now str2

. tab state_nm

   state_nm |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |          1        2.86        2.86
         10 |          1        2.86        5.71
         11 |          1        2.86        8.57
         12 |          1        2.86       11.43
         13 |          1        2.86       14.29
         14 |          1        2.86       17.14
         15 |          1        2.86       20.00
         16 |          1        2.86       22.86
         17 |          1        2.86       25.71
         18 |          1        2.86       28.57
         19 |          1        2.86       31.43
          2 |          1        2.86       34.29
         20 |          1        2.86       37.14
         21 |          1        2.86       40.00
         22 |          1        2.86       42.86
         23 |          1        2.86       45.71
         24 |          1        2.86       48.57
         25 |          1        2.86       51.43
         26 |          1        2.86       54.29
         27 |          1        2.86       57.14
         28 |          1        2.86       60.00
         29 |          1        2.86       62.86
          3 |          1        2.86       65.71
         30 |          1        2.86       68.57
         31 |          1        2.86       71.43
         32 |          1        2.86       74.29
         33 |          1        2.86       77.14
         34 |          1        2.86       80.00
         35 |          1        2.86       82.86
          4 |          1        2.86       85.71
          5 |          1        2.86       88.57
          6 |          1        2.86       91.43
          7 |          1        2.86       94.29
          8 |          1        2.86       97.14
          9 |          1        2.86      100.00
------------+-----------------------------------
      Total |         35      100.00

. gen state_test = state

. tostring state_test, format(%02.0f) replace
state_test was float now str2

. tab state_test

 state_test |      Freq.     Percent        Cum.
------------+-----------------------------------
         01 |          1        2.86        2.86
         02 |          1        2.86        5.71
         03 |          1        2.86        8.57
         04 |          1        2.86       11.43
         05 |          1        2.86       14.29
         06 |          1        2.86       17.14
         07 |          1        2.86       20.00
         08 |          1        2.86       22.86
         09 |          1        2.86       25.71
         10 |          1        2.86       28.57
         11 |          1        2.86       31.43
         12 |          1        2.86       34.29
         13 |          1        2.86       37.14
         14 |          1        2.86       40.00
         15 |          1        2.86       42.86
         16 |          1        2.86       45.71
         17 |          1        2.86       48.57
         18 |          1        2.86       51.43
         19 |          1        2.86       54.29
         20 |          1        2.86       57.14
         21 |          1        2.86       60.00
         22 |          1        2.86       62.86
         23 |          1        2.86       65.71
         24 |          1        2.86       68.57
         25 |          1        2.86       71.43
         26 |          1        2.86       74.29
         27 |          1        2.86       77.14
         28 |          1        2.86       80.00
         29 |          1        2.86       82.86
         30 |          1        2.86       85.71
         31 |          1        2.86       88.57
         32 |          1        2.86       91.43
         33 |          1        2.86       94.29
         34 |          1        2.86       97.14
         35 |          1        2.86      100.00
------------+-----------------------------------
      Total |         35      100.00

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. use "${r_output_68}\nss68_ria_master.dta",clear 

. bysort state: keep if _n == 1
(41,932 observations deleted)

. keep state pline_nhs_*

. 
. gen state_temp = state

. tostring state_temp, format(%02.0f) replace
state_temp was float now str2

. 
. rename state state_txt

. rename state_temp state

. 
. merge 1:m state using "${r_output}\NSS70_All.dta"

    Result                           # of obs.
    -----------------------------------------
    not matched                         2,654
        from master                         0  (_merge==1)
        from using                      2,654  (_merge==2)

    matched                           108,146  (_merge==3)
    -----------------------------------------

. 
. keep if urban == 1 //only focusing on urban 
(62,135 observations deleted)

. 
. replace wealth = 0 if wealth == . 
(0 real changes made)

. 
. xtile wealth_100 = wealth_ln [aw = hhwgt],nq(100)

. tab wealth_100 [aw = hhwgt]

        100 |
  quantiles |
         of |
 wealth_ln  |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 | 533.934242        1.16        1.16
          2 | 458.845937        1.00        2.15
          3 | 393.542708        0.85        3.01
          4 | 471.875795        1.02        4.03
          5 | 449.405265        0.97        5.01
          6 |  458.24503        0.99        6.00
          7 | 461.570837        1.00        7.00
          8 | 495.234821        1.07        8.08
          9 | 426.411477        0.93        9.00
         10 | 461.113328        1.00       10.00
         11 |468.0923327        1.02       11.02
         12 | 455.622411        0.99       12.01
         13 | 463.301623        1.01       13.01
         14 |  456.12631        0.99       14.00
         15 | 464.990599        1.01       15.01
         16 |  479.47242        1.04       16.05
         17 | 441.055387        0.96       17.01
         18 | 471.572965        1.02       18.03
         19 | 448.516312        0.97       19.00
         20 |  460.33914        1.00       20.00
         21 | 460.629527        1.00       21.00
         22 | 461.233857        1.00       22.00
         23 |  462.68484        1.00       23.00
         24 | 459.847352        1.00       24.00
         25 | 461.803046        1.00       25.00
         26 | 459.188304        1.00       26.00
         27 |466.2010586        1.01       27.01
         28 | 459.197402        1.00       28.01
         29 | 463.899729        1.01       29.01
         30 | 465.716801        1.01       30.02
         31 | 450.758906        0.98       31.00
         32 | 459.764597        1.00       32.00
         33 | 461.944022        1.00       33.00
         34 | 460.235055        1.00       34.00
         35 | 467.649744        1.01       35.02
         36 |  458.16757        0.99       36.01
         37 | 456.951921        0.99       37.00
         38 | 464.133058        1.01       38.01
         39 | 458.096912        0.99       39.00
         40 | 460.388108        1.00       40.00
         41 | 460.803183        1.00       41.00
         42 | 461.747513        1.00       42.00
         43 | 463.223971        1.00       43.01
         44 | 459.801384        1.00       44.00
         45 | 458.970879        1.00       45.00
         46 | 463.905284        1.01       46.01
         47 |459.2157058        1.00       47.00
         48 | 461.469535        1.00       48.00
         49 | 462.057886        1.00       49.01
         50 | 459.072888        1.00       50.00
         51 | 461.253338        1.00       51.00
         52 |459.8330202        1.00       52.00
         53 |460.7029139        1.00       53.00
         54 | 461.822931        1.00       54.00
         55 | 460.311642        1.00       55.00
         56 | 460.686141        1.00       56.00
         57 | 462.905531        1.00       57.00
         58 | 459.952367        1.00       58.00
         59 | 472.036382        1.02       59.03
         60 | 451.360689        0.98       60.01
         61 |458.5804341        0.99       61.00
         62 | 462.891441        1.00       62.00
         63 |459.4272871        1.00       63.00
         64 | 461.957081        1.00       64.00
         65 | 460.850467        1.00       65.00
         66 |476.6014067        1.03       66.04
         67 | 445.138206        0.97       67.00
         68 | 460.638088        1.00       68.00
         69 | 461.361047        1.00       69.00
         70 | 492.071522        1.07       70.07
         71 | 432.886191        0.94       71.01
         72 | 456.718645        0.99       72.00
         73 | 460.779309        1.00       73.00
         74 |  464.17942        1.01       74.01
         75 | 460.615036        1.00       75.01
         76 | 460.046101        1.00       76.00
         77 |458.8731231        1.00       77.00
         78 |  462.80887        1.00       78.00
         79 | 461.893324        1.00       79.01
         80 | 459.162762        1.00       80.00
         81 | 461.282714        1.00       81.00
         82 |  459.67096        1.00       82.00
         83 | 460.808604        1.00       83.00
         84 | 463.550055        1.01       84.01
         85 | 458.467029        0.99       85.00
         86 | 460.716467        1.00       86.00
         87 | 461.182294        1.00       87.00
         88 | 461.517329        1.00       88.00
         89 |  461.62193        1.00       89.00
         90 | 459.569106        1.00       90.00
         91 | 461.631966        1.00       91.00
         92 | 463.247957        1.01       92.01
         93 |460.6364795        1.00       93.01
         94 | 461.527327        1.00       94.01
         95 | 467.904115        1.02       95.02
         96 | 453.295148        0.98       96.01
         97 | 458.853316        1.00       97.00
         98 | 460.460838        1.00       98.00
         99 | 460.950453        1.00       99.00
        100 | 460.732216        1.00      100.00
------------+-----------------------------------
      Total |     46,094      100.00

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. merge m:1 wealth_100 using "${r_input}\NSS70_IHDS_Wealth_to_Inc.dta",nogen

    Result                           # of obs.
    -----------------------------------------
    not matched                         2,571
        from master                     2,571  
        from using                          0  

    matched                            46,094  
    -----------------------------------------

. 
. gen double income = wealth*alpha_a1_u_ip
(2,571 missing values generated)

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. sum income [aw = hhwgt],de

                           income
-------------------------------------------------------------
      Percentiles      Smallest
 1%     223.5163       4.470325
 5%     5092.802       8.940651
10%      29499.6       11.17581       Obs              46,094
25%     597317.3       11.17581       Sum of Wgt.   157016867

50%      5213447                      Mean           4.77e+07
                        Largest       Std. Dev.      8.04e+08
75%     2.13e+07       3.79e+10
90%     6.17e+07       5.50e+10       Variance       6.47e+17
95%     1.10e+08       6.64e+10       Skewness       67.52988
99%     3.25e+08       7.02e+10       Kurtosis       5196.279

. 
end of do-file

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. forvalues i = 1/2 {
  2. gen own_ria_`i'_pc = income/hhsize - pline_nhs_`i' //hypothetical expenditure, we are using mpce (actual exp.), different fro
> m Australia
  3. gen own_ria_`i'_hh = own_ria_`i' *hhsize
  4. 
.   forvalues  q = 0(1)2 {
  5.   gen own_ria_income_a`q'_`i'_pc = income_a`q' - pline_nhs_`i'
  6.   gen own_ria_income_a`q'_`i'_hh = own_ria_income_a`q'_`i'_pc*hhsize
  7.   }
  8. }
(3,747 missing values generated)
(3,747 missing values generated)
income_a0 not found
r(111);

end of do-file

r(111);

. do "C:\Users\wb500886\AppData\Local\Temp\STD3664_000000.tmp"

. use "${r_output_68}\nss68_ria_master.dta",clear 

. bysort state: keep if _n == 1
(41,932 observations deleted)

. keep state pline_nhs_*

. 
. gen state_temp = state

. tostring state_temp, format(%02.0f) replace
state_temp was float now str2

. 
. rename state state_txt

. rename state_temp state

. 
. merge 1:m state using "${r_output}\NSS70_All.dta"

    Result                           # of obs.
    -----------------------------------------
    not matched                         2,654
        from master                         0  (_merge==1)
        from using                      2,654  (_merge==2)

    matched                           108,146  (_merge==3)
    -----------------------------------------

. 
. keep if urban == 1 //only focusing on urban 
(62,135 observations deleted)

. 
. replace wealth = 0 if wealth == . 
(0 real changes made)

. 
. xtile wealth_100 = wealth_ln [aw = hhwgt],nq(100)

. tab wealth_100 [aw = hhwgt]

        100 |
  quantiles |
         of |
 wealth_ln  |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 | 533.934242        1.16        1.16
          2 | 458.845937        1.00        2.15
          3 | 393.542708        0.85        3.01
          4 | 471.875795        1.02        4.03
          5 | 449.405265        0.97        5.01
          6 |  458.24503        0.99        6.00
          7 | 461.570837        1.00        7.00
          8 | 495.234821        1.07        8.08
          9 | 426.411477        0.93        9.00
         10 | 461.113328        1.00       10.00
         11 |468.0923327        1.02       11.02
         12 | 455.622411        0.99       12.01
         13 | 463.301623        1.01       13.01
         14 |  456.12631        0.99       14.00
         15 | 464.990599        1.01       15.01
         16 |  479.47242        1.04       16.05
         17 | 441.055387        0.96       17.01
         18 | 471.572965        1.02       18.03
         19 | 448.516312        0.97       19.00
         20 |  460.33914        1.00       20.00
         21 | 460.629527        1.00       21.00
         22 | 461.233857        1.00       22.00
         23 |  462.68484        1.00       23.00
         24 | 459.847352        1.00       24.00
         25 | 461.803046        1.00       25.00
         26 | 459.188304        1.00       26.00
         27 |466.2010586        1.01       27.01
         28 | 459.197402        1.00       28.01
         29 | 463.899729        1.01       29.01
         30 | 465.716801        1.01       30.02
         31 | 450.758906        0.98       31.00
         32 | 459.764597        1.00       32.00
         33 | 461.944022        1.00       33.00
         34 | 460.235055        1.00       34.00
         35 | 467.649744        1.01       35.02
         36 |  458.16757        0.99       36.01
         37 | 456.951921        0.99       37.00
         38 | 464.133058        1.01       38.01
         39 | 458.096912        0.99       39.00
         40 | 460.388108        1.00       40.00
         41 | 460.803183        1.00       41.00
         42 | 461.747513        1.00       42.00
         43 | 463.223971        1.00       43.01
         44 | 459.801384        1.00       44.00
         45 | 458.970879        1.00       45.00
         46 | 463.905284        1.01       46.01
         47 |459.2157058        1.00       47.00
         48 | 461.469535        1.00       48.00
         49 | 462.057886        1.00       49.01
         50 | 459.072888        1.00       50.00
         51 | 461.253338        1.00       51.00
         52 |459.8330202        1.00       52.00
         53 |460.7029139        1.00       53.00
         54 | 461.822931        1.00       54.00
         55 | 460.311642        1.00       55.00
         56 | 460.686141        1.00       56.00
         57 | 462.905531        1.00       57.00
         58 | 459.952367        1.00       58.00
         59 | 472.036382        1.02       59.03
         60 | 451.360689        0.98       60.01
         61 |458.5804341        0.99       61.00
         62 | 462.891441        1.00       62.00
         63 |459.4272871        1.00       63.00
         64 | 461.957081        1.00       64.00
         65 | 460.850467        1.00       65.00
         66 |476.6014067        1.03       66.04
         67 | 445.138206        0.97       67.00
         68 | 460.638088        1.00       68.00
         69 | 461.361047        1.00       69.00
         70 | 492.071522        1.07       70.07
         71 | 432.886191        0.94       71.01
         72 | 456.718645        0.99       72.00
         73 | 460.779309        1.00       73.00
         74 |  464.17942        1.01       74.01
         75 | 460.615036        1.00       75.01
         76 | 460.046101        1.00       76.00
         77 |458.8731231        1.00       77.00
         78 |  462.80887        1.00       78.00
         79 | 461.893324        1.00       79.01
         80 | 459.162762        1.00       80.00
         81 | 461.282714        1.00       81.00
         82 |  459.67096        1.00       82.00
         83 | 460.808604        1.00       83.00
         84 | 463.550055        1.01       84.01
         85 | 458.467029        0.99       85.00
         86 | 460.716467        1.00       86.00
         87 | 461.182294        1.00       87.00
         88 | 461.517329        1.00       88.00
         89 |  461.62193        1.00       89.00
         90 | 459.569106        1.00       90.00
         91 | 461.631966        1.00       91.00
         92 | 463.247957        1.01       92.01
         93 |460.6364795        1.00       93.01
         94 | 461.527327        1.00       94.01
         95 | 467.904115        1.02       95.02
         96 | 453.295148        0.98       96.01
         97 | 458.853316        1.00       97.00
         98 | 460.460838        1.00       98.00
         99 | 460.950453        1.00       99.00
        100 | 460.732216        1.00      100.00
------------+-----------------------------------
      Total |     46,094      100.00

. 
. /*
> //not taking log can not get the result? negative value?
> xtile wealth_100 = wealth [aw = hhwgt],nq(100) //household weight, wealth is measured at household level. [aw = hhwgt]
> tab wealth_100 [aw = hhwgt]
> */
. 
. merge m:1 wealth_100 using "${r_input}\NSS70_IHDS_Wealth_to_Inc.dta",nogen

    Result                           # of obs.
    -----------------------------------------
    not matched                         2,571
        from master                     2,571  
        from using                          0  

    matched                            46,094  
    -----------------------------------------

. 
. gen double income = wealth*alpha_a1_u_ip //a1 assumption with income
(2,571 missing values generated)

. sum income [aw = hhwgt],de

                           income
-------------------------------------------------------------
      Percentiles      Smallest
 1%     223.5163       4.470325
 5%     5092.802       8.940651
10%      29499.6       11.17581       Obs              46,094
25%     597317.3       11.17581       Sum of Wgt.   157016867

50%      5213447                      Mean           4.77e+07
                        Largest       Std. Dev.      8.04e+08
75%     2.13e+07       3.79e+10
90%     6.17e+07       5.50e+10       Variance       6.47e+17
95%     1.10e+08       6.64e+10       Skewness       67.52988
99%     3.25e+08       7.02e+10       Kurtosis       5196.279

. 
. ***********RIA approach for housing owner**********
. *Using income instead of exp. 
. 
. *Maximum amount available for mortgage per capita/household
. forvalues i = 1/2 {
  2. gen own_ria_`i'_pc = income/hhsize - pline_nhs_`i' //hypothetical expenditure, we are using mpce (actual exp.), different fro
> m Australia
  3. gen own_ria_`i'_hh = own_ria_`i' *hhsize
  4. 
. gen own_ria_income_`i'_pc = income - pline_nhs_`i'
  5. gen own_ria_income_`i'_hh = own_ria_income_`i'_pc*hhsize
  6. }
(3,747 missing values generated)
(3,747 missing values generated)
(3,747 missing values generated)
(3,747 missing values generated)
(3,747 missing values generated)
(3,747 missing values generated)
(3,747 missing values generated)
(3,747 missing values generated)

. 
end of do-file

. help cut

