---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\Housing_git\nss\Survey_NSS\NSS61\02_1_NSS61_Residual_Income_Renter.log
  log type:  text
 opened on:  12 Apr 2021, 03:24:42

. set linesize 255

. 
. ***************************************************************
. *Step 1: Data Cleaning **************************************** 
. ***************************************************************
. use "${r_input}\Block 10_Monthly expenditure on miscellaneous goods and services including medical (non-institutional), rents and taxes.dta",clear

. merge m:1 HHID using "${r_input}\Block 3.dta"

    Result                           # of obs.
    -----------------------------------------
    not matched                           121
        from master                         0  (_merge==1)
        from using                        121  (_merge==2)

    matched                         2,378,390  (_merge==3)
    -----------------------------------------

. drop _merge

. merge m:1 HHID using "${r_input}\Block 3 Part 2_Household Characteristics.dta"

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                         2,378,511  (_merge==3)
    -----------------------------------------

. drop _merge

. 
. gen hhsize = B3_q1

. label var hhsize "Household size"

.    
. /* poverty line is by state and by sector */
. 
.     *estimate housing related expenditure:
.           
.             *Rent (10: code = 529, 30 days recall period)
.             gen double rent = B10_q4*(B10_q1 == "520")
(121 missing values generated)

.           
.             *Water charge(10: 540, 30 days recall period)
.             gen double water = B10_q4*(B10_q1 == "540")
(121 missing values generated)

.           
.             *Collapse at household level for water ant rent
.             foreach var in rent water { 
  2.             egen double total_`var' = sum(`var'), by(HHID)
  3.             } 

.             bys HHID: keep if _n == 1 // keep only one observation for each HH
(2,253,867 observations deleted)

. 
. merge 1:m HHID using "${r_input}\Block 6_Monthly consumption of fuel & light.dta"

    Result                           # of obs.
    -----------------------------------------
    not matched                           422
        from master                       422  (_merge==1)
        from using                          0  (_merge==2)

    matched                           637,880  (_merge==3)
    -----------------------------------------

. drop _merge

.           
.             *Fuel and light (12: 18, 30 days recall period)
.             gen double fuel = B6_q6*(B6_q1 == "359")
(422 missing values generated)

.         egen double total_fuel = sum(fuel), by(HHID)

.             bys HHID: keep if _n == 1
(513,658 observations deleted)

. 
.         *Total housing expenditure
.         egen double exp_housing = rowtotal(total_rent total_fuel total_water)

. 
.     *Housing consumption per capita
.         gen double total_exp_housing_pp = exp_housing/hhsize 

.         
.     *Identify renters, owner (de jure)
.         gen renter = (B3_q16 == "2") //rent is positive and tenure status is hire. 

.         label var renter "Renter"

.         
.         gen owner = ( B3_q16 == "1" )

.         label var owner "Owner"

.         
. rename HHID hhid

. merge 1:1 hhid using "${r_input}\NSS_61_Poverty_For_Aline.dta"

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                           124,644  (_merge==3)
    -----------------------------------------

. keep if _merge == 3
(0 observations deleted)

. drop _merge

. 
.    *adjust the unit from India Rupee to USD: 1 Indian Rupee = 0.014 USD in 2/24/2021 （later）
.    global r_u = 0.014

.           
.    foreach var of var pline mpce* total_* {
  2.    gen `var'_usd = `var'*${r_u}
  3.    }

. 
.    *different budget scenario: pline, double pline, triple pline.    
.    forvalues i = 1/3 {
  2.    gen pline_`i' = pline*`i'
  3.    }      

. 
.    *Only focus on urban (the Tendulka approach decile is based on urban exp.)
.    gen urban = sector - 1

.    keep if urban == 1
(79,298 observations deleted)

.    label var urban "Urban"

.    
.    *Decile of the expenditure
.    xtile decile = mpce_mrp [aw = pwt] , n(10)

.    label var decile "Exp. decile"

. 
.    
.        
. **************************************************************
. *Step 2: Construct budget standards **************************
. **************************************************************
.  
. *remove rent budget from the original poverty line by state
. gen rent_pc = total_rent/hhsize

. gen rent_mpce = rent_pc/mpce_mrp*100 //share of rent on total expenditure per capita (renters)

. 
. *stats for renters
. table decile [aw = pwt], c(mean renter ) row 

------------------------
Exp.      |
decile    | mean(renter)
----------+-------------
        1 |     .1014462
        2 |     .1663058
        3 |     .2026766
        4 |     .2600878
        5 |     .2610866
        6 |     .2941036
        7 |     .3257415
        8 |     .3168743
        9 |     .3368627
       10 |      .356196
          | 
    Total |     .2621208
------------------------

. table decile [aw = pwt], c(mean rent_mpce mean mpce_mrp) row // for both renters and owners, the poverty line budget share of rent is 2.8%, lower than the 5.3% for exp. survey in 05. 

------------------------------------------
Exp.      |
decile    | mean(rent_m~e)  mean(mpce_mrp)
----------+-------------------------------
        1 |        1.03393        349.3137
        2 |       2.005155        473.7385
        3 |       2.424788        570.5945
        4 |       3.142961        668.7532
        5 |       3.673237        778.5363
        6 |       4.058108        912.9607
        7 |       4.903928        1083.295
        8 |       4.962317        1310.989
        9 |       5.684686        1709.162
       10 |       6.635378        3189.553
          | 
    Total |       3.852117        1104.599
------------------------------------------

. table decile if renter == 1 [aw = pwt], c(med rent_pc med mpce_mrp med rent_mpce) row // only for renters 

-------------------------------------------------------
Exp.      |
decile    |  med(rent_pc)  med(mpce_mrp)  med(rent_m~e)
----------+--------------------------------------------
        1 |          37.5       375.8712       10.32285
        2 |            50       478.8889       11.28518
        3 |      66.66666          576.9       11.90791
        4 |            80        666.475       12.15436
        5 |           100        782.254        13.5108
        6 |           125        912.832       13.49213
        7 |         162.5       1083.402       14.92103
        8 |           200       1297.472       15.04661
        9 |      266.6667         1692.5       15.92177
       10 |           500        2687.48       17.67705
          | 
    Total |           125       1008.955        13.9007
-------------------------------------------------------

. 
. *collapse at state and declie level
. tab poor [aw = pwt] if urban == 1 //25.7% poverty rate in urban India (2004): 3th decile MPCE class

       poor |      Freq.     Percent        Cum.
------------+-----------------------------------
   Not-poor | 33,703.098       74.32       74.32
       Poor | 11,642.902       25.68      100.00
------------+-----------------------------------
      Total |     45,346      100.00

. 
. //ssc inst _gwtmean
. forvalues i = 2/6 {
  2. gen rent_pc_d`i' = rent_pc * (decile == `i')
  3. bys state: egen rent_pc_`i' = wtmean(rent_pc_d`i') , weight(pwt) //the poverty line is in the 2nd decile MPCE class
  4. drop rent_pc_d`i' 
  5. }   

. 
. *check the double poverty line and the mpce in each decile.. 
. table decile [aw = pwt], c(mean mpce_mrp min mpce_mrp max mpce_mrp) row 

----------------------------------------------------------
Exp.      |
decile    | mean(mpce_mrp)   min(mpce_mrp)   max(mpce_mrp)
----------+-----------------------------------------------
        1 |       349.3137          19.765         423.535
        2 |       473.7385        423.5533         519.954
        3 |       570.5945        519.9875        621.1675
        4 |       668.7532        621.2025        720.0529
        5 |       778.5363        720.0684        838.6557
        6 |       912.9607         838.734         993.598
        7 |       1083.295        993.6063        1185.777
        8 |       1310.989        1185.808         1466.64
        9 |       1709.162        1466.872         2034.42
       10 |       3189.553        2034.546        29156.71
          | 
    Total |       1104.599          19.765        29156.71
----------------------------------------------------------

. 
. local mpce_pline = 570.6 //mean mpce_mrp at poverty line mpce class (decile 3, urban)

. local mpce_pline_15 = `mpce_pline'*1.5 //1.5 times mean poverty line mpce class (urban)

. 
. di  `mpce_pline_15' //6th decile mpce class (urban), different than that in the 4th decile in 2012
855.9

. 
. *generate the non-housing poverty line for each state at different budget standard (differ than 2012)
. gen pline_nhs_1 = pline_1- rent_pc_3 // poverty line and 1.5 poverty line (only double pline not rent)

. gen pline_nhs_2 = pline_2- rent_pc_6 //6th decile is where the poverty line mpce class doubled 

. 
. *estimate income based on expenditure //Picketty approach. 
. xtile exp_100 = mpce_mrp [aw=pwt], nq(100)

. 
. merge m:1 exp_100 using "${r_input_nss68}\IDHS_Exp_To_Income_All_Urban_Rural.dta",nogen

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                            45,346  
    -----------------------------------------

. 
. forvalues i = 0(1)2 {
  2. gen income_a`i' = (mpce_mrp * alpha_a`i'_u) //the income unit is consistent to budget standard
  3. }

. 
. xtile decile_ic = income_a2 [aw = pwt] , n(10) //decile for income: with the assumption that there's no income smaller than expenditure 

. xtile qt_ic = income_a2 [aw = pwt] , n(5) //quintile for income

. 
. gen rent_ic = rent_pc/income_a2*100 //share of rent on income

. 
. drop rent_pc_*

. save "${r_output}\nss61_ria_master.dta",replace
file C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS61\Data Output Files\nss61_ria_master.dta saved

. 
. 
. ***************************************************************
. *Step 3: Budget Standard for Renters **************************
. ***************************************************************
. 
. *Maximum amount available for rent
. use "${r_output}\nss61_ria_master.dta",clear

. forvalues i = 1/2 {
  2. gen rent_ria_`i' = mpce_mrp - pline_nhs_`i'
  3. 
.   forvalues  q = 0(1)2 {
  4.   gen rent_ria_income_a`q'_`i' = income_a`q' - pline_nhs_`i'
  5.   }
  6. }

. 
. *The max housing exp with ratio approach
. gen rent_ratio = mpce_mrp*0.3

. 
. forvalues  q = 0(1)2 {
  2. gen rent_income_ratio_a`q' = income_a`q'*0.3
  3. }

. 
. label var rent_ria_income_a2_1 "Low Cost Budget Standard"

. label var rent_ria_income_a2_2 "Modest Budget Standard"

. label var rent_income_ratio_a2 "30% Rule"

. 
. *Identify the different affordability group
. gen ria_1 = (rent_pc > rent_ria_income_a2_1)

. gen ria_2 = (rent_pc > rent_ria_income_a2_2)

. gen ratio = (rent_pc > rent_income_ratio_a2)

. tostring (ria_1 ria_2 ratio),gen(ria_1_tx ria_2_tx ratio_tx)
ria_1_tx generated as str1
ria_2_tx generated as str1
ratio_tx generated as str1

. 
. gen afd_grp = ria_1_tx + ria_2_tx //focus only on ria1 and ria2

. tab afd_grp [aw = pwt] //different section

    afd_grp |      Freq.     Percent        Cum.
------------+-----------------------------------
         00 |15,281.3722       33.70       33.70
         01 | 17,489.915       38.57       72.27
         11 | 12,574.712       27.73      100.00
------------+-----------------------------------
      Total |     45,346      100.00

. 
. seperate rent_pc,by(afd_grp)
(note:  separate is spelled separate)

              storage   display    value
variable name   type    format     label      variable label
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
rent_pc1        float   %9.0g                 rent_pc, afd_grp == 00
rent_pc2        float   %9.0g                 rent_pc, afd_grp == 01
rent_pc3        float   %9.0g                 rent_pc, afd_grp == 11

. label var rent_pc1 "Affordable Rent" 

. label var rent_pc2 "Intermediate Unaffordable Rent"

. label var rent_pc3 "Unaffordable Rent"

. 
. 
. *produce the table
. foreach var in ria_1 ria_2 ratio {
  2. replace `var' = `var'*100 //unaffordability with income measure.
  3. gen exp_`var' = (rent_pc > rent_`var')*100 //unaffordability with expenditure measure.
  4. }
(13,479 real changes made)
(28,482 real changes made)
(284 real changes made)

. 
. replace renter = renter*100
(13,139 real changes made)

. egen renter_q = wtmean(renter),weight(pwt) by(qt_ic) //overall share of renter hh in urban

. egen renter_al = wtmean(renter),weight(pwt) //share of renter hh by urban quintile 

. 
. forvalue i = 1/2 {
  2. egen pline_nhs_`i'_nat = wtmean(pline_nhs_`i'), weight(pwt)  //weighted mean by state non-housing poverty line. 
  3. }

. 
. foreach var in poor poor_double {
  2. replace `var' = `var'*100 //poverty rate in %
  3. }
(12,503 real changes made)
(29,848 real changes made)

. 
. gen pline_15 = pline *1.5 //1.5 time poverty line at 4th decile mpce class.  

. 
. gen poor_income_1 = (income_a2 < pline)*100

. gen poor_income_2 = (income_a2 < pline_15)*100

. 
. //labels
. label var renter_q "Renters (%)"

. label var renter_al "Renters (%)"

. label var pline "PC Poverty Line (mean)*"

. label var pline_15 "PC 1.5 Poverty Line (mean)" //??check national poverty line estimate. 

. label var pline_nhs_1_nat "PC NHBS)^"

. label var pline_nhs_2_nat "PC 1.5 NHBS"

. label var mpce_mrp "Monthly PC Expenditure (mean)"

. label var income_a2 "Monthly PC Income (mean)"

. label var poor "Below PL (exp. < PL) (%)"

. label var poor_double "Below 1.5PL (exp. < 1.5PL) (%)"

. 
. label var poor_income_1 "Below PL (income < PL) (%)"

. label var poor_income_2 "Below 1.5PL (income < 1.5PL) (%)**"

. 
. label var rent_pc "PC Rent(mean) (conditional)"

. label var rent_ic "PC Rent to Income(%, mean) (conditional)"

. 
. label var rent_ria_income_a2_1 "Max PC Rent at NHBS (mean)"

. label var rent_ria_income_a2_2 "Max PC Rent at 1.5NHBS (mean)"

. 
. label var ratio "Unaffordable at 30% Rule (%)"

. label var ria_1 "Unaffordable at NHBS (%)"

. label var ria_2 "Unaffordable at 1.5NHBS (%)"

. 
. //produce esttab table
. global var_tab "renter_al pline pline_15 pline_nhs_1_nat pline_nhs_2_nat mpce_mrp income_a2 poor poor_double poor_income_1 poor_income_2 rent_pc rent_ic rent_ria_income_a2_1 ratio rent_ria_income_a2_2 ria_1 ria_2"

. qui eststo total : estpost summarize $var_tab [aw = pwt] if renter ==100,de 

. replace renter_al = renter_q
(45,346 real changes made)

. forvalues i = 1/5 {
  2. qui eststo q`i' : estpost summarize $var_tab [aw = pwt] if qt_ic == `i' & renter ==100,de
  3. }

. 
. esttab total q1 q2 q3 q4 q5, cells(mean(fmt(%15.1fc))) label collabels(none) varwidth(40) ///
>  mtitles( "Urban" "Urban-Q1" "Urban-Q2" "Urban-Q3" "Urban-Q4" "Urban-Q5") stats(N, label("Observations") fmt(%15.1gc)) ///
>  title("Rental affordability using different affordability measures in urban India, 2004") ///
>  addnotes("Notes: Renter is defined as tenure status as hired" ///
>           "       * Temdulkar (2004) poverty estimation weighted mean by state as the poverty line is different in every state." ///
>                   "       Low Budget Standard corresponds to poverty line (Tendulkar), Moderate budget standard is 1.5 times" ///
>                   "       ^ methodology – renters only, removing actual rent at the 2nd (poverty line) decile of expenditure and 4th (1.5 x poverty line) to arrive at non-housing poverty lines" ///
>                   "       ** use picketty to get income (horizontal transformation A2 (preferred – floor)." ///
>                   "       PL is Poverty Line, 1.5PL is 1.5 x Poverty Line. NHBS is non-housing budget standard, 1.5NHBS is 1.5 x NHBS.")

Rental affordability using different affordability measures in urban India, 2004
----------------------------------------------------------------------------------------------------------------------
                                                  (1)          (2)          (3)          (4)          (5)          (6)
                                                Urban     Urban-Q1     Urban-Q2     Urban-Q3     Urban-Q4     Urban-Q5
----------------------------------------------------------------------------------------------------------------------
Renters (%)                                      26.2         13.4         23.1         27.8         32.1         34.7
PC Poverty Line (mean)*                         582.8        566.6        580.0        583.0        585.6        588.2
PC 1.5 Poverty Line (mean)                      874.2        849.8        870.1        874.5        878.4        882.3
PC NHBS)^                                       581.5        581.5        581.5        581.5        581.5        581.5
PC 1.5 NHBS                                   1,162.1      1,162.1      1,162.1      1,162.1      1,162.1      1,162.1
Monthly PC Expenditure (mean)                 1,287.0        434.0        627.2        850.9      1,195.7      2,491.5
Monthly PC Income (mean)                      1,635.5        434.0        627.2        861.7      1,377.2      3,632.9
Below PL (exp. < PL) (%)                         14.8         99.8         26.2          0.1          0.0          0.0
Below 1.5PL (exp. < 1.5PL) (%)                   60.4        100.0        100.0        100.0         46.3          0.1
Below PL (income < PL) (%)                       14.8         99.8         26.2          0.1          0.0          0.0
Below 1.5PL (income < 1.5PL) (%)**               40.2        100.0        100.0         58.1          0.1          0.0
PC Rent(mean) (conditional)                     204.4         47.8         74.9        116.9        179.2        444.9
PC Rent to Income(%, mean) (conditional)         12.6         10.9         11.9         13.6         13.1         12.5
Max PC Rent at NHBS (mean)                    1,054.3       -131.0         48.8        280.3        793.1      3,046.3
Unaffordable at 30% Rule (%)                      2.0          1.0          1.3          3.4          2.0          1.8
Max PC Rent at 1.5NHBS (mean)                   474.2       -695.0       -528.6       -300.0        210.2      2,461.0
Unaffordable at NHBS (%)                         23.0        100.0         63.6          7.1          0.0          0.0
Unaffordable at 1.5NHBS (%)                      60.9        100.0        100.0         99.9         48.6          0.0
----------------------------------------------------------------------------------------------------------------------
Observations                                   13,139        1,541        2,193        2,258        2,700        4,447
----------------------------------------------------------------------------------------------------------------------
Notes: Renter is defined as tenure status as hired
       * Temdulkar (2004) poverty estimation weighted mean by state as the poverty line is different in every state.
       Low Budget Standard corresponds to poverty line (Tendulkar), Moderate budget standard is 1.5 times
       ^ methodology – renters only, removing actual rent at the 2nd (poverty line) decile of expenditure and 4th (1.5 x poverty line) to arrive at non-housing poverty lines
       ** use picketty to get income (horizontal transformation A2 (preferred – floor).
       PL is Poverty Line, 1.5PL is 1.5 x Poverty Line. NHBS is non-housing budget standard, 1.5NHBS is 1.5 x NHBS.

. 
.                   
. table renter [aw = pwt], c(mean poor) row //double check the poverty rate: poverty rate among renters (mpce_mrp) is low in Urban. 

----------------------
   Renter | mean(poor)
----------+-----------
        0 |   29.52399
      100 |   14.84261
          | 
    Total |    25.6757
----------------------

. 
. *Plot the curve
. //x is income per capita 
. foreach var in rent_ria_income_a2_1 rent_ria_income_a2_2 rent_income_ratio_a2 rent_pc1 rent_pc2 rent_pc3 {
  2. replace `var' = . if `var' <= 0
  3. replace `var' = . if `var' > 1e3 //the cutoff is 2e3 in 2012
  4. }
(12,430 real changes made, 12,430 to missing)
(13,195 real changes made, 13,195 to missing)
(27,790 real changes made, 27,790 to missing)
(8,653 real changes made, 8,653 to missing)
(0 real changes made)
(4,036 real changes made, 4,036 to missing)
(11,040 real changes made, 11,040 to missing)
(258 real changes made, 258 to missing)
(11,245 real changes made, 11,245 to missing)
(0 real changes made)
(10,313 real changes made, 10,313 to missing)
(0 real changes made)

. 
. format rent_ria_income_a2_1 rent_ria_income_a2_2 income_a2 %9.0fc

. 
. sum income_a2 [aw = pwt] ,de f //?how to set the y scale to 0-1e3? 

                  Monthly PC Income (mean)
-------------------------------------------------------------
      Percentiles      Smallest
 1%          268             20
 5%          362             35
10%          424             41       Obs              45,346
25%          571             46       Sum of Wgt.   248505113

50%          839                      Mean              1,363
                        Largest       Std. Dev.         1,584
75%        1,551         40,392
90%        2,772         44,905       Variance      2,508,951
95%        3,877         50,339       Skewness              5
99%        7,287         52,987       Kurtosis             56

. twoway line rent_ria_income_a2_1 rent_ria_income_a2_2 rent_income_ratio_a2 income_a2 if renter == 100 & inrange(income_a2,0, `r(p90)') & state == 33,lpattern(p1 p1 dash) lcolor(cranberry dkorange gs11) || ///
> scatter rent_pc1 rent_pc2 rent_pc3 income_a2 if renter == 100 & inrange(income_a2,0, `r(p90)') & state == 33, mcolor(dkgreen dkorange cranberry) graphregion(color(white)) msymbol(circle triangle square) ///
> msize(tiny tiny tiny) ytitle("Maximum Rent (PC in Rs.)") xtitle("Monthly Income (PC in Rs.)") title("Maximum affordable rent payments (Tamil Nadu,2004)") ///
> xline(`r(p50)', lpattern(dash) lcolor(gs4))  legend(cols(3) label(1 "PLBS") label(2 "1.5PLBS") size(vsmall)) ///
> note("Note: PLBS is Poverty Line Budget Standard, 1.5PLBS is 1.5 times PLBS" ///
>      "      The income percentile is for renters only weighted by household weight.") ///
> xlabel(424 `" "424" "(p10)" "' 571 `" "571" "(p25)" "' 839 `" "839" "(p50)" "' 1551 `" "1,551" "(p75)" "' 2772 `" "2,772" "(p90)" "',labsize(vsmall))  
(note:  named style p1 not found in class linepattern, default attributes used)
(note:  named style p1 not found in class linepattern, default attributes used)
(note:  named style p1 not found in class linepattern, default attributes used)
(note:  named style p1 not found in class linepattern, default attributes used)

. 
. graph export "${r_output}/ria_renter_nss61.png",width(800) height(600) replace
(file C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\nss_data\NSS61\Data Output Files/ria_renter_nss61.png written in PNG format)

. 
. log close
      name:  <unnamed>
       log:  C:\Users\wb500886\OneDrive - WBG\7_Housing\survey_all\Housing_git\nss\Survey_NSS\NSS61\02_1_NSS61_Residual_Income_Renter.log
  log type:  text
 closed on:  12 Apr 2021, 03:25:29
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
